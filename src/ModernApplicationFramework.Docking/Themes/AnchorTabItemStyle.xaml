<ResourceDictionary x:Class="ModernApplicationFramework.Docking.Themes.AnchorTabItemStyle"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalonDockControls="clr-namespace:ModernApplicationFramework.Docking.Controls"
                    xmlns:converters="clr-namespace:ModernApplicationFramework.Utilities.Converters;assembly=ModernApplicationFramework.Utilities"
                    xmlns:converters1="clr-namespace:ModernApplicationFramework.Docking.Converters"
                    xmlns:docking="clr-namespace:ModernApplicationFramework.Docking"
                    xmlns:general="clr-namespace:ModernApplicationFramework.Core.Converters.General;assembly=ModernApplicationFramework"
                    xmlns:imaging="clr-namespace:ModernApplicationFramework.Imaging;assembly=ModernApplicationFramework.Imaging">

    <converters:BrushToColorConverter x:Key="BrushToColorConverter" />
    <converters1:BooleanOrConverter x:Key="BooleanOrConverter" />
    <general:NegateBooleanConverter x:Key="NegateBooleanConverter" />

    <Style x:Key="{x:Static avalonDockControls:LayoutAnchorablePaneControl.TabItemStyleKey}" TargetType="{x:Type TabItem}">
        <EventSetter Event="PreviewDragOver" Handler="OnPreviewDragOver" />
        <EventSetter Event="PreviewDragEnter" Handler="OnPreviewDragEnter" />
        <EventSetter Event="MouseDown" Handler="OnMouseDown" />
        <EventSetter Event="MouseDoubleClick" Handler="OnMouseDoubleClick" />
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Rectangle x:Name="Divider"
                                   Width="1"
                                   HorizontalAlignment="Right"
                                   Fill="Red" />
                        <Border x:Name="TabBorder"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                BorderBrush="{DynamicResource {x:Static docking:DockingColors.AnchorPaneControlBorder}}"
                                BorderThickness="0,1,0,0">
                            <Border x:Name="Border"
                                    avalonDockControls:ViewPresenter.CanActivateFromMiddleClick="False"
                                    AllowDrop="True"
                                    Background="{DynamicResource {x:Static docking:DockingColors.AnchorTabItemBackground}}"
                                    BorderBrush="{DynamicResource {x:Static docking:DockingColors.AnchorTabItemBorder}}"
                                    BorderThickness="1,0,1,2">
                                <imaging:ImageThemingUtilities.ImageBackgroundColor>
                                    <Binding Converter="{StaticResource BrushToColorConverter}"
                                             Path="Background"
                                             RelativeSource="{RelativeSource Self}" />
                                </imaging:ImageThemingUtilities.ImageBackgroundColor>
                                <FrameworkElement.ToolTip>
                                    <Binding Path="DataContext.ToolTip" RelativeSource="{RelativeSource TemplatedParent}" />
                                </FrameworkElement.ToolTip>
                                <ContentPresenter x:Name="Content"
                                                  x:Uid="Content"
                                                  Margin="5,2,5,0"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="true"
                                                  TextElement.Foreground="{DynamicResource {x:Static docking:DockingColors.AnchorTabItemText}}" />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static docking:DockingColors.AnchorTabItemBackgroundHover}}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.AnchorTabItemBorderHover}}" />
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorTabItemTextHover}}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="-1" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static docking:DockingColors.AnchorTabItemBackgroundActive}}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.AnchorTabItemBorderActive}}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,2" />
                            <Setter TargetName="TabBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="Border" Property="Padding" Value="0,1,0,0" />
                            <Setter Property="Focusable" Value="false" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="False" />
                                <Condition Binding="{Binding IsSelected}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorTabItemTextActive}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="True" />
                                <Condition Binding="{Binding IsSelected}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorTabItemTextActive}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <Binding Path="(avalonDockControls:AnchorablePaneTabPanel.IsLast)" RelativeSource="{RelativeSource Self}" />
                                    </Condition.Binding>
                                </Condition>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                                            <Binding Converter="{StaticResource NegateBooleanConverter}" Path="IsSelected" />
                                            <Binding Path="(avalonDockControls:AnchorablePaneTabPanel.IsTruncatingTabs)" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Divider" Property="UIElement.Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <Trigger Property="avalonDockControls:AnchorablePaneTabPanel.IsImmediatelyBeforeSelection" Value="true">
                            <Setter TargetName="Divider" Property="UIElement.Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
