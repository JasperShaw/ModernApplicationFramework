<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalonDock="clr-namespace:ModernApplicationFramework.Docking"
                    xmlns:avalonDockControls="clr-namespace:ModernApplicationFramework.Docking.Controls"
                    xmlns:converters="clr-namespace:ModernApplicationFramework.Docking.Converters"
                    xmlns:converters2="clr-namespace:ModernApplicationFramework.Core.Converters;assembly=ModernApplicationFramework"
                    xmlns:mafc="http://modern.framework.com/controls"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes;assembly=ModernApplicationFramework">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="LayoutDocumentPaneControl.xaml" />
        <ResourceDictionary Source="LayoutAnchorablePaneControl.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
    <converters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter" />
    <converters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter" />
    <converters:NullToDoNothingConverter x:Key="NullToDoNothingConverter" />
    <converters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter" />
    <converters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />
    <converters2:CommandToVisibilityConverter x:Key="CommandToVisibilityConverter" />
    <converters2:MultiVisibilityToVisibilityConverter x:Key="MultiVisibilityToVisibilityConverter" />

    <ControlTemplate x:Key="AnchorSideTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorSideControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel MinWidth="4"
                                MinHeight="4"
                                Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={StaticResource AnchorSideToOrientationConverter}}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AnchorGroupTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorGroupControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.LayoutTransform>
                <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}" />
            </ItemsControl.LayoutTransform>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AnchorTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorControl}">
        <Border x:Name="Bd"
                Margin="0,6,12,0"
                Padding="0,0,0,3"
                Background="{DynamicResource {x:Static themes:EnvironmentColors.AnchorSideItemBackground}}"
                BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.AnchorSideItemBorder}}"
                BorderThickness="0,0,0,6">
            <ContentPresenter x:Name="Content"
                              Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                              ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                              ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                              TextElement.Foreground="{DynamicResource {x:Static themes:EnvironmentColors.AnchorSideItemForeground}}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Side" Value="Right">
                <Setter TargetName="Bd" Property="Margin" Value="0,0,12,6" />
                <Setter TargetName="Bd" Property="BorderThickness" Value="0,6,0,0" />
                <Setter TargetName="Bd" Property="Padding" Value="0,3,0,0" />
            </Trigger>
            <Trigger Property="Side" Value="Bottom">
                <Setter TargetName="Bd" Property="Margin" Value="0,6,12,0" />
                <Setter TargetName="Bd" Property="BorderThickness" Value="0,0,0,6" />
                <Setter TargetName="Bd" Property="Padding" Value="0,0,0,6" />
            </Trigger>
            <Trigger Property="Side" Value="Top">
                <Setter TargetName="Bd" Property="Margin" Value="0,0,12,6" />
                <Setter TargetName="Bd" Property="BorderThickness" Value="0,6,0,0" />
                <Setter TargetName="Bd" Property="Padding" Value="0,3,0,0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="Selector.IsSelected" Value="false" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorSideItemBorderHover}}" />
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorSideItemBackgroundHover}}" />
                <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorSideItemForegroundHover}}" />
            </MultiTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mafc:MainWindow}}, Path=FullScreen}" Value="true">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="DocumentHeaderTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AnchorableHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Image x:Name="icon"
                   Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}"
                   Stretch="Uniform" />
            <TextBlock x:Name="title"
                       Grid.Column="1"
                       Margin="4,0,0,0"
                       Text="{Binding Title}"
                       TextTrimming="CharacterEllipsis" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IconSource}" Value="{x:Null}">
                <Setter TargetName="title" Property="Margin" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="DocumentTitleTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AnchorableTitleTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="IconContentTemplate">
        <Image Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform" />
    </DataTemplate>

    <Style x:Key="{x:Type avalonDock:DockingManager}" TargetType="{x:Type avalonDock:DockingManager}">
        <Setter Property="DocumentPaneControlStyle" Value="{StaticResource DocumentPaneControlStyle}" />
        <Setter Property="AnchorablePaneControlStyle" Value="{StaticResource AnchorablePaneControlStyle}" />
        <Setter Property="AnchorSideTemplate" Value="{StaticResource AnchorSideTemplate}" />
        <Setter Property="AnchorGroupTemplate" Value="{StaticResource AnchorGroupTemplate}" />
        <Setter Property="AnchorTemplate" Value="{StaticResource AnchorTemplate}" />
        <Setter Property="DocumentHeaderTemplate" Value="{StaticResource DocumentHeaderTemplate}" />
        <Setter Property="AnchorableHeaderTemplate" Value="{StaticResource AnchorableHeaderTemplate}" />
        <Setter Property="DocumentTitleTemplate" Value="{StaticResource DocumentTitleTemplate}" />
        <Setter Property="AnchorableTitleTemplate" Value="{StaticResource AnchorableTitleTemplate}" />
        <Setter Property="DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource DocumentHeaderTemplate}" />
        <Setter Property="IconContentTemplate" Value="{StaticResource IconContentTemplate}" />
        <Setter Property="GridSplitterWidth" Value="4" />
        <Setter Property="GridSplitterHeight" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDock:DockingManager}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid FlowDirection="LeftToRight">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Row="1"
                                    Grid.Column="1"
                                    Background="{DynamicResource {x:Static themes:EnvironmentColors.DockingManagerBackground}}">
                                <ContentPresenter Content="{TemplateBinding LayoutRootPanel}" />
                            </Border>

                            <ContentPresenter Grid.Row="1"
                                              Grid.Column="2"
                                              Content="{TemplateBinding RightSidePanel}" />
                            <ContentPresenter Grid.Row="1"
                                              Grid.Column="0"
                                              Content="{TemplateBinding LeftSidePanel}" />
                            <ContentPresenter Grid.Row="0"
                                              Grid.Column="1"
                                              Content="{TemplateBinding TopSidePanel}" />
                            <ContentPresenter Grid.Row="2"
                                              Grid.Column="1"
                                              Content="{TemplateBinding BottomSidePanel}" />
                            <ContentPresenter x:Name="PART_AutoHideArea"
                                              Grid.Row="1"
                                              Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Content="{TemplateBinding AutoHideWindow}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>