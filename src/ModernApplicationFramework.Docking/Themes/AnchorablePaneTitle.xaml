<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalonDockControls="clr-namespace:ModernApplicationFramework.Docking.Controls"
                    xmlns:contextMenuProviders="clr-namespace:ModernApplicationFramework.Docking.ContextMenuProviders"
                    xmlns:converters="clr-namespace:ModernApplicationFramework.Docking.Converters"
                    xmlns:docking="clr-namespace:ModernApplicationFramework.Docking"
                    xmlns:mafc="http://modern.framework.com/controls"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes;assembly=ModernApplicationFramework">

    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
    <converters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter" />
    <converters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter" />
    <converters:NullToDoNothingConverter x:Key="NullToDoNothingConverter" />
    <converters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter" />
    <converters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />
    <contextMenuProviders:AnchorableContextMenuProvider x:Key="AnchorableContextMenuProvider" />

    <Style TargetType="avalonDockControls:AnchorablePaneTitle">
        <Setter Property="MinHeight" Value="19" />
        <Setter Property="Padding" Value="2,1,2,3" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:AnchorablePaneTitle}">
                    <avalonDockControls:DragUndockHeader x:Name="DragHeader" Model="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime, Path=Model}">
                        <Border x:Name="ToolWindowBorder"
                                Background="{DynamicResource {x:Static docking:DockingColors.AnchorableControlBackground}}"
                                BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.SystemWindow}}">
                            <Border x:Name="Bd"
                                    Padding="{TemplateBinding Padding}"
                                    BorderThickness="0,2,0,0"
                                    TextElement.Foreground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleText}}">
                                <DockPanel>
                                    <mafc:GlyphButton x:Name="HideButton"
                                                      Margin="0,0,2,0"
                                                      Padding="{TemplateBinding Padding}"
                                                      avalonDockControls:ViewPresenter.CanActivateFromLeftClick="False"
                                                      Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                      DockPanel.Dock="Right"
                                                      GlyphForeground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyph}}"
                                                      HoverBackground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBackgroundHover}}"
                                                      HoverBorderBrush="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBorderHover}}"
                                                      HoverBorderThickness="1"
                                                      HoverForeground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyphHover}}"
                                                      PressedBackground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBackgroundDown}}"
                                                      PressedBorderBrush="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBorderDown}}"
                                                      PressedBorderThickness="1"
                                                      PressedForeground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyphDown}}">
                                        <Path x:Name="HideButtonPath"
                                              Width="10"
                                              Height="8"
                                              Data="F1 M 0,0 L 2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0 Z"
                                              Stretch="Uniform">
                                            <Shape.Fill>
                                                <Binding Path="(TextElement.Foreground)" RelativeSource="{RelativeSource Self}" />
                                            </Shape.Fill>
                                        </Path>
                                    </mafc:GlyphButton>

                                    <mafc:GlyphButton x:Name="AutoHideButton"
                                                      Margin="0,0,1,0"
                                                      Padding="{TemplateBinding Padding}"
                                                      avalonDockControls:ViewPresenter.CanActivateFromLeftClick="False"
                                                      Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                      DockPanel.Dock="Right"
                                                      GlyphForeground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyph}}"
                                                      HoverBackground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBackgroundHover}}"
                                                      HoverBorderBrush="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBorderHover}}"
                                                      HoverBorderThickness="1"
                                                      HoverForeground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyphHover}}"
                                                      PressedBackground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBackgroundDown}}"
                                                      PressedBorderBrush="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBorderDown}}"
                                                      PressedBorderThickness="1"
                                                      PressedForeground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyphDown}}">
                                        <Path x:Name="AutoHideButtonPath"
                                              Width="8"
                                              Height="11"
                                              Data="F1 M 3,11 L 3,7 0,7 0,6 1,6 1,1 1,0 6,0 6,1 6,6 7,6 7,7 4,7 4,11 3,11 M 2,1 L 2,6 4,6 4,1 2,1 Z"
                                              Stretch="Uniform">
                                            <Shape.Fill>
                                                <Binding Path="(TextElement.Foreground)" RelativeSource="{RelativeSource Self}" />
                                            </Shape.Fill>
                                        </Path>
                                    </mafc:GlyphButton>

                                    <avalonDockControls:DropDownButton x:Name="MenuDropDownButton"
                                                                       Margin="0,0,1,0"
                                                                       ClickMode="Press"
                                                                       ContextMenuProvider="{StaticResource AnchorableContextMenuProvider}"
                                                                       DockPanel.Dock="Right"
                                                                       GlyphForeground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyph}}"
                                                                       HoverBackground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBackgroundHover}}"
                                                                       HoverBorderBrush="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBorderHover}}"
                                                                       HoverBorderThickness="1"
                                                                       HoverForeground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyphHover}}"
                                                                       IsChecked="{Binding Path=ContextMenu.IsOpen, RelativeSource={RelativeSource Self}}"
                                                                       PressedBackground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBackgroundDown}}"
                                                                       PressedBorderBrush="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBorderDown}}"
                                                                       PressedBorderThickness="1"
                                                                       PressedForeground="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyphDown}}">
                                        <Path x:Name="DropDownMenuButtonPath"
                                              Width="8"
                                              Height="4"
                                              Data="F1 M 0,0 L 4,4 8,0 0,0 Z"
                                              Stretch="Uniform">
                                            <Shape.Fill>
                                                <Binding Path="(TextElement.Foreground)" RelativeSource="{RelativeSource Self}" />
                                            </Shape.Fill>
                                        </Path>
                                    </avalonDockControls:DropDownButton>

                                    <ContentPresenter x:Name="Content"
                                                      Margin="2,0,0,0"
                                                      Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Rectangle x:Name="Grip"
                                               Height="5"
                                               Margin="8,0,4,0"
                                               VerticalAlignment="Center"
                                               Fill="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGrip}}"
                                               SnapsToDevicePixels="True" />

                                </DockPanel>
                            </Border>
                        </Border>
                    </avalonDockControls:DragUndockHeader>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsActive}" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleBackgroundActive}}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleBackgroundActive}}" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleTextActive}}" />
                            <Setter TargetName="HideButton" Property="GlyphForeground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyphActive}}" />
                            <Setter TargetName="HideButton" Property="HoverBackground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBackgroundActiveHover}}" />
                            <Setter TargetName="HideButton" Property="HoverBorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBorderActiveHover}}" />
                            <Setter TargetName="HideButton" Property="HoverForeground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyphActiveHover}}" />
                            <Setter TargetName="AutoHideButton" Property="GlyphForeground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyphActive}}" />
                            <Setter TargetName="AutoHideButton" Property="HoverBackground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBackgroundActiveHover}}" />
                            <Setter TargetName="AutoHideButton" Property="HoverBorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBorderActiveHover}}" />
                            <Setter TargetName="AutoHideButton" Property="HoverForeground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyphActiveHover}}" />
                            <Setter TargetName="MenuDropDownButton" Property="GlyphForeground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyphActive}}" />
                            <Setter TargetName="MenuDropDownButton" Property="HoverBackground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBackgroundActiveHover}}" />
                            <Setter TargetName="MenuDropDownButton" Property="HoverBorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleButtonBorderActiveHover}}" />
                            <Setter TargetName="MenuDropDownButton" Property="HoverForeground" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGlyphActiveHover}}" />
                            <Setter TargetName="Grip" Property="Fill" Value="{DynamicResource {x:Static docking:DockingColors.AnchorPaneTitleGripActive}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsAutoHidden}" Value="True">
                            <Setter TargetName="AutoHideButtonPath" Property="Path.Data" Value="F1 M 0,3 L 4,3 4,0 5,0 5,1 10,1 11,1 11,6 10,6 5,6 5,7 4,7 4,4 0,4 0,3 M 10,2 L 5,2 5,4 10,4 10,2 Z" />
                            <Setter TargetName="AutoHideButtonPath" Property="FrameworkElement.Width" Value="11" />
                            <Setter TargetName="AutoHideButtonPath" Property="FrameworkElement.Height" Value="8" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>