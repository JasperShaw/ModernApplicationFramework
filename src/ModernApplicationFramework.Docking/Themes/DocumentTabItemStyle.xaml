<ResourceDictionary x:Class="ModernApplicationFramework.Docking.Themes.DocumentTabItemStyle"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:ModernApplicationFramework.Docking.Controls"
                    xmlns:converters="clr-namespace:ModernApplicationFramework.Utilities.Converters;assembly=ModernApplicationFramework.Utilities"
                    xmlns:docking="clr-namespace:ModernApplicationFramework.Docking"
                    xmlns:imaging="clr-namespace:ModernApplicationFramework.Imaging;assembly=ModernApplicationFramework.Imaging"
                    xmlns:mafc="http://modern.framework.com/controls">
    <converters:BrushToColorConverter x:Key="BrushToColorConverter" />

    <Style TargetType="{x:Type controls:DocumentTabItemWrapper}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DocumentTabItemWrapper}">
                    <Border AllowDrop="True">
                        <DockPanel x:Name="TitlePanel" TextElement.Foreground="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemText}}">
                            <mafc:GlyphButton x:Name="HideButton"
                                              Margin="3,0,3,0"
                                              controls:ViewPresenter.CanActivateFromLeftClick="False"
                                              BorderThickness="1"
                                              Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                              DockPanel.Dock="Right"
                                              GlyphForeground="Transparent"
                                              HoverBackground="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBackgroundHover}}"
                                              HoverBorderBrush="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBorderHover}}"
                                              HoverBorderThickness="1"
                                              HoverForeground="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphHover}}"
                                              PressedBackground="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBackgroundDown}}"
                                              PressedBorderBrush="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBorderDown}}"
                                              PressedBorderThickness="1"
                                              PressedForeground="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphHover}}">
                                <Path x:Name="HideButtonPath"
                                      Width="10"
                                      Height="8"
                                      Data="F1 M 0,0 L 2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0 Z"
                                      Stretch="Uniform">
                                    <Shape.Fill>
                                        <Binding Path="(TextElement.Foreground)" RelativeSource="{RelativeSource Self}" />
                                    </Shape.Fill>
                                </Path>
                            </mafc:GlyphButton>
                            <mafc:GlyphButton x:Name="PinButton"
                                              Margin="3,0,0,0"
                                              controls:ViewPresenter.CanActivateFromLeftClick="False"
                                              BorderThickness="1"
                                              Command="{Binding Path=LayoutItem.PinCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                              DockPanel.Dock="Right"
                                              GlyphForeground="Transparent"
                                              HoverBackground="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBackgroundHover}}"
                                              HoverBorderBrush="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBorderHover}}"
                                              HoverBorderThickness="1"
                                              HoverForeground="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphHover}}"
                                              PressedBackground="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBackgroundDown}}"
                                              PressedBorderBrush="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBorderDown}}"
                                              PressedBorderThickness="1"
                                              PressedForeground="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphHover}}">
                                <Path x:Name="PinnedButtonPath"
                                      Width="10"
                                      Height="8"
                                      Data="F1 M 4,8 L 4,5 1,5 1,4 2,4 2,1 2,0 7,0 7,1 7,4 8,4 8,5 5,5 5,8 4,8 M 3,1 L 3,4 5,4 5,1 3,1 Z"
                                      Stretch="Uniform">
                                    <Shape.Fill>
                                        <Binding Path="(TextElement.Foreground)" RelativeSource="{RelativeSource Self}" />
                                    </Shape.Fill>
                                </Path>
                            </mafc:GlyphButton>

                            <controls:DragUndockHeader x:Name="Content"
                                                       Margin="4,0,4,0"
                                                       HorizontalAlignment="Stretch"
                                                       VerticalAlignment="Stretch"
                                                       Model="{Binding}">
                                <ContentControl Content="{Binding Title}" ContentTemplate="{Binding DocumentTabTitleTemplate}" />
                            </controls:DragUndockHeader>

                            <!--<ContentPresenter x:Name="Content"
                                              Margin="4,0,4,0"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Content="{Binding}"
                                              ContentTemplate="{Binding DocumentTabTitleTemplate}"
                                              RecognizesAccessKey="True" />-->
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <Binding Path="(UIElement.IsMouseOver)" RelativeSource="{RelativeSource AncestorType=TabItem}" />
                            </DataTrigger.Binding>
                            <!--<Setter TargetName="Border" Property="Panel.Background" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBackgroundHover}}" />
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBorderHover}}" />-->
                            <Setter TargetName="TitlePanel" Property="TextElement.Foreground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemTextHover}}" />
                            <Setter TargetName="HideButton" Property="mafc:GlyphButton.GlyphForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabGlyphHot}}" />
                            <Setter TargetName="PinButton" Property="mafc:GlyphButton.GlyphForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabGlyphHot}}" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <Binding Path="IsSelected" />
                                    </Condition.Binding>
                                </Condition>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <Binding Path="IsActive" />
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="TitlePanel" Property="TextElement.Foreground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemTextActive}}" />
                            <Setter TargetName="HideButton" Property="HoverBackground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBackgroundActiveHover}}" />
                            <Setter TargetName="HideButton" Property="HoverBorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBorderActiveHover}}" />
                            <Setter TargetName="HideButton" Property="HoverForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphActiveHover}}" />
                            <Setter TargetName="HideButton" Property="PressedBackground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBackgroundActiveDown}}" />
                            <Setter TargetName="HideButton" Property="PressedBorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBorderActiveDown}}" />
                            <Setter TargetName="HideButton" Property="PressedForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphActiveDown}}" />
                            <Setter TargetName="HideButton" Property="GlyphForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphActive}}" />
                            <Setter TargetName="PinButton" Property="HoverBackground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBackgroundActiveHover}}" />
                            <Setter TargetName="PinButton" Property="HoverBorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBorderActiveHover}}" />
                            <Setter TargetName="PinButton" Property="HoverForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphActiveHover}}" />
                            <Setter TargetName="PinButton" Property="PressedBackground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBackgroundActiveDown}}" />
                            <Setter TargetName="PinButton" Property="PressedBorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBorderActiveDown}}" />
                            <Setter TargetName="PinButton" Property="PressedForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphActiveDown}}" />
                            <Setter TargetName="PinButton" Property="GlyphForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphActive}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <Binding Path="IsSelected" />
                                    </Condition.Binding>
                                </Condition>
                                <Condition Value="False">
                                    <Condition.Binding>
                                        <Binding Path="IsActive" />
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="TitlePanel" Property="TextElement.Foreground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemTextLastActive}}" />
                            <Setter TargetName="HideButton" Property="HoverBackground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBackgroundLastActiveHover}}" />
                            <Setter TargetName="HideButton" Property="HoverBorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBorderLastActiveHover}}" />
                            <Setter TargetName="HideButton" Property="HoverForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphLastActiveHover}}" />
                            <Setter TargetName="HideButton" Property="PressedBackground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBackgroundLastActiveDown}}" />
                            <Setter TargetName="HideButton" Property="PressedBorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBorderLastActiveDown}}" />
                            <Setter TargetName="HideButton" Property="PressedForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphLastActiveDown}}" />
                            <Setter TargetName="HideButton" Property="GlyphForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphLastActive}}" />
                            <Setter TargetName="PinButton" Property="HoverBackground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBackgroundLastActiveHover}}" />
                            <Setter TargetName="PinButton" Property="HoverBorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBorderLastActiveHover}}" />
                            <Setter TargetName="PinButton" Property="HoverForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphLastActiveHover}}" />
                            <Setter TargetName="PinButton" Property="PressedBackground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBackgroundLastActiveDown}}" />
                            <Setter TargetName="PinButton" Property="PressedBorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemButtonBorderLastActiveDown}}" />
                            <Setter TargetName="PinButton" Property="PressedForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphLastActiveDown}}" />
                            <Setter TargetName="PinButton" Property="GlyphForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemGlyphLastActive}}" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsPinned}" Value="False">
                            <Setter TargetName="PinnedButtonPath" Property="FrameworkElement.Width" Value="8" />
                            <Setter TargetName="PinnedButtonPath" Property="FrameworkElement.Height" Value="10" />
                            <Setter TargetName="PinnedButtonPath" Property="Path.Data" Value="F1 M 0,4 L 3,4 3,1 4,1 4,2 7,2 8,2 8,7 7,7 4,7 4,8 3,8 3,5 0,5 0,4 M 7,3 L 4,3 4,5 7,5 7,3 Z" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPinned}" Value="True" />
                                <Condition Binding="{Binding IsSelected}" Value="False" />
                                <Condition Value="False">
                                    <Condition.Binding>
                                        <Binding Path="(UIElement.IsMouseOver)" RelativeSource="{RelativeSource AncestorType=TabItem}" />
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PinButton" Property="mafc:GlyphButton.GlyphForeground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabGlyphInactive}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPinned}" Value="False" />
                                <Condition Value="False">
                                    <Condition.Binding>
                                        <Binding Path="ShowPinButtonInUnpinnedTabs" Source="{x:Static docking:DockingManagerPreferences.Instance}" />
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PinButton" Property="UIElement.Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <DataTrigger Value="Minimized">
                            <DataTrigger.Binding>
                                <Binding Path="(controls:DocumentTabItem.EffectiveTabState)" RelativeSource="{RelativeSource AncestorType=TabItem}" />
                            </DataTrigger.Binding>
                            <Setter TargetName="Content" Property="FrameworkElement.Width" Value="0" />
                            <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0" />
                            <Setter TargetName="PinButton" Property="UIElement.Visibility" Value="Collapsed" />
                            <Setter TargetName="HideButton" Property="UIElement.Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static controls:LayoutDocumentPaneControl.TabItemStyleKey}" TargetType="{x:Type TabItem}">
        <EventSetter Event="PreviewDragOver" Handler="OnPreviewDragOver" />
        <EventSetter Event="PreviewDragEnter" Handler="OnPreviewDragEnter" />
        <EventSetter Event="MouseDown" Handler="OnMouseDown" />
        <EventSetter Event="MouseDoubleClick" Handler="OnMouseDoubleClick" />
        <Setter Property="Background" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBorder}}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
        <Setter Property="ToolTip" Value="{Binding ToolTip}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemText}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Bd"
                            Padding="0,1,0,3"
                            controls:ViewPresenter.CanActivateFromMiddleClick="False"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,2,1,0"
                            SnapsToDevicePixels="True">
                        <imaging:ImageThemingUtilities.ImageBackgroundColor>
                            <Binding Converter="{StaticResource BrushToColorConverter}"
                                     Path="Background"
                                     RelativeSource="{RelativeSource Self}" />
                        </imaging:ImageThemingUtilities.ImageBackgroundColor>
                        <ContentPresenter x:Name="Content"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBorderLastActive}}" />
                            <Setter Property="Background" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBackgroundLastActive}}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="True" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBorderActive}}" />
                            <Setter Property="Background" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBackgroundActive}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="True" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBorderActive}}" />
                            <Setter Property="Background" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBackgroundActive}}" />

                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="False" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBorderLastActive}}" />
                            <Setter Property="Background" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBackgroundLastActive}}" />
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsSelected" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBorderHover}}" />
                            <Setter Property="Background" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBackgroundHover}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemTextHover}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBorderDisabled}}" />
                            <Setter Property="Background" Value="{DynamicResource {x:Static docking:DockingColors.DocumentTabItemBackgroundDisabled}}" />
                        </Trigger>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <Binding Path="IsSelected" />
                            </DataTrigger.Binding>
                            <Setter Property="UIElement.Focusable" Value="false" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,2,0,0" />
                        </DataTrigger>
                        <DataTrigger Value="False">
                            <DataTrigger.Binding>
                                <Binding Path="(controls:DocumentPaneTabPanel.IsAdjacentToDocumentWell)" />
                            </DataTrigger.Binding>
                            <Setter TargetName="Bd" Property="Border.Padding" Value="0,1,0,3" />
                            <Setter Property="FrameworkElement.Margin" Value="0,0,0,1" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="False">
                                    <Condition.Binding>
                                        <Binding Path="IsSelected" />
                                    </Condition.Binding>
                                </Condition>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <Binding Path="(controls:DocumentPaneTabPanel.IsAdjacentToDocumentWell)" />
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Padding" Value="0,1,0,1" />
                            <Setter TargetName="Bd" Property="FrameworkElement.Margin" Value="0,0,0,2" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
