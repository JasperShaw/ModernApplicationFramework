<UserControl x:Class="ModernApplicationFramework.EditorBase.Dialogs.NewElementDialog.Views.NewElementPresenterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:ModernApplicationFramework.EditorBase.Controls"
             xmlns:converters="clr-namespace:ModernApplicationFramework.Utilities.Converters;assembly=ModernApplicationFramework.Utilities"
             xmlns:converters1="clr-namespace:ModernApplicationFramework.EditorBase.Core.Converters"
             xmlns:converters2="clr-namespace:ModernApplicationFramework.Imaging.Converters;assembly=ModernApplicationFramework.Imaging"
             xmlns:core="clr-namespace:ModernApplicationFramework.EditorBase.Core"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dialogButtons="clr-namespace:ModernApplicationFramework.Controls.Buttons.DialogButtons;assembly=ModernApplicationFramework"
             xmlns:general="clr-namespace:ModernApplicationFramework.Core.Converters.General;assembly=ModernApplicationFramework"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:imaging="clr-namespace:ModernApplicationFramework.Imaging;assembly=ModernApplicationFramework.Imaging"
             xmlns:mafc="http://modern.framework.com/controls"
             xmlns:markupExtensions="clr-namespace:ModernApplicationFramework.Core.MarkupExtensions;assembly=ModernApplicationFramework"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:newElement="clr-namespace:ModernApplicationFramework.EditorBase.Interfaces.NewElement"
             xmlns:newElementDialog="clr-namespace:ModernApplicationFramework.EditorBase.Dialogs.NewElementDialog"
             xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes;assembly=ModernApplicationFramework"
             xmlns:util="clr-namespace:ModernApplicationFramework.Utilities;assembly=ModernApplicationFramework.Utilities"
             d:DesignHeight="300"
             d:DesignWidth="600"
             Background="{DynamicResource {x:Static themes:ColorResources.BackgroundBrush}}"
             mc:Ignorable="d">
    <imaging:ImageThemingUtilities.ImageBackgroundColor>
        <Binding Path="Background" RelativeSource="{RelativeSource Self}">
            <Binding.Converter>
                <converters:BrushToColorConverter />
            </Binding.Converter>
        </Binding>
    </imaging:ImageThemingUtilities.ImageBackgroundColor>
    <UserControl.Resources>
        <ResourceDictionary>
            <converters2:ThemedImageSourceConverter x:Key="ThemedImageSourceConverter" />
            <converters:BrushToColorConverter x:Key="BrushToColorConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <general:AreEqualConverter x:Key="AreEqualConverter" />
            <converters1:ProviderTreeViewVisibilityConverter x:Key="ProviderTreeViewVisibilityConverter" />

            <ControlTemplate x:Key="NoItemSelected">
                <Grid Margin="0,20,0,0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Top">
                    <TextBlock Foreground="{DynamicResource {x:Static themes:ColorResources.ContentTextBrush}}" TextWrapping="Wrap">
                        <TextBlock.Text>
                            <Binding Path="NoItemSelectedMessage" />
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
            </ControlTemplate>

            <Style x:Key="DetailPaneStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate" Value="{DynamicResource DetailViewDataTemplate}" />
                <Style.Triggers>
                    <DataTrigger>
                        <DataTrigger.Binding>
                            <Binding ElementName="ListView"
                                     Path="SelectedItem"
                                     UpdateSourceTrigger="PropertyChanged" />
                        </DataTrigger.Binding>
                        <DataTrigger.Value>
                            <x:NullExtension />
                        </DataTrigger.Value>
                        <Setter Property="Template" Value="{DynamicResource NoItemSelected}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="DetailViewDataTemplate" DataType="{x:Type newElement:IExtensionDefinition}">
                <DataTemplate.Resources>
                    <Style x:Key="TileToolTipStyle" TargetType="{x:Type TextBlock}">
                        <Setter Property="MaxWidth" Value="300" />
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>
                </DataTemplate.Resources>
                <mafc:ScrollViewer Focusable="false"
                                   HorizontalScrollBarVisibility="Disabled"
                                   VerticalScrollBarVisibility="Auto">
                    <Grid Margin="4,0,4,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="135" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0"
                                    Margin="8,3,8,0"
                                    VerticalAlignment="Top"
                                    Orientation="Vertical">
                            <StackPanel Margin="0,3,0,0" Orientation="Horizontal">
                                <TextBlock Margin="0,0,0,0"
                                           FontWeight="Bold"
                                           Text="{x:Static newElementDialog:NewElementDialogResources.NewElementDetailsTypeLabel}" />
                                <TextBlock Margin="8,0,0,0" Text="{Binding Name}">
                                    <TextBlock.ToolTip>
                                        <TextBlock Style="{StaticResource TileToolTipStyle}" Text="{Binding Name}" />
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </StackPanel>
                            <TextBlock Margin="0,8,0,0"
                                       Text="{Binding Description}"
                                       TextTrimming="WordEllipsis"
                                       TextWrapping="WrapWithOverflow">
                                <TextBlock.ToolTip>
                                    <TextBlock Style="{StaticResource TileToolTipStyle}" Text="{Binding Description}" />
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                </mafc:ScrollViewer>
            </DataTemplate>

            <ControlTemplate x:Key="NoItemsTemplate" TargetType="{x:Type ListView}">
                <Grid Background="{DynamicResource {x:Static themes:ColorResources.ContentBrush}}">
                    <Grid Margin="20"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Top">
                        <TextBlock Foreground="{DynamicResource {x:Static themes:ColorResources.ContentTextBrush}}" TextWrapping="Wrap">
                            <TextBlock.Text>
                                <Binding Path="NoItemsMessage" />
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </Grid>
            </ControlTemplate>

            <ItemsPanelTemplate x:Key="WrapStyleTemplate">
                <WrapPanel Orientation="Vertical" />
            </ItemsPanelTemplate>

            <DataTemplate x:Key="SmallIconTemplate" DataType="{x:Type newElement:IExtensionDefinition}">
                <StackPanel Orientation="Horizontal">
                    <Image Width="16"
                           Height="16"
                           Margin="4"
                           Stretch="Uniform"
                           StretchDirection="DownOnly">
                        <Image.Source>
                            <Binding Path="SmallThumbnailImage" />
                        </Image.Source>
                    </Image>
                    <TextBlock Width="200"
                               MinHeight="10"
                               Margin="10,0,0,0"
                               VerticalAlignment="Center"
                               TextAlignment="Left"
                               TextTrimming="WordEllipsis"
                               TextWrapping="NoWrap">
                        <TextBlock.Text>
                            <Binding Path="Name" />
                        </TextBlock.Text>
                        <TextBlock.ToolTip>
                            <Binding Path="Name" />
                        </TextBlock.ToolTip>
                    </TextBlock>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="MediumIconTemplate" DataType="{x:Type newElement:IExtensionDefinition}">
                <Grid Margin="0,0,10,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="38" />
                        <ColumnDefinition Width="1*" MinWidth="80" />
                        <ColumnDefinition Width="Auto"
                                          MinWidth="60"
                                          MaxWidth="140" />
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0"
                           Width="32"
                           Height="32"
                           Margin="0,2,4,2"
                           Stretch="Uniform"
                           StretchDirection="DownOnly">
                        <Image.Source>
                            <MultiBinding Converter="{StaticResource ThemedImageSourceConverter}">
                                <Binding Path="MediumThumbnailImage" />
                                <Binding Path="(imaging:ImageThemingUtilities.ImageBackgroundColor)" RelativeSource="{RelativeSource Self}" />
                                <Binding Source="{x:Static util:Boxes.BooleanTrue}" />
                            </MultiBinding>
                        </Image.Source>
                    </Image>
                    <TextBlock Grid.Column="1"
                               Margin="8,0,0,0"
                               VerticalAlignment="Center"
                               Text="{Binding Name}"
                               TextTrimming="CharacterEllipsis"
                               ToolTip="{Binding Name}" />
                    <TextBlock Grid.Column="2"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Text="{Binding ApplicationContext}"
                               TextTrimming="CharacterEllipsis"
                               ToolTip="{Binding ApplicationContext}" />
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="LargeIconTemplate" DataType="{x:Type newElement:IExtensionDefinition}">
                <StackPanel>
                    <Grid Margin="25,20,25,20">
                        <Border BorderBrush="DarkGray"
                                BorderThickness="0"
                                CornerRadius="4">
                            <Border.Effect>
                                <DropShadowEffect Direction="320"
                                                  Opacity="0.5"
                                                  ShadowDepth="4"
                                                  Color="Black" />
                            </Border.Effect>
                            <Image Width="80"
                                   Height="80"
                                   Stretch="Uniform"
                                   StretchDirection="DownOnly">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource ThemedImageSourceConverter}">
                                        <Binding Path="MediumThumbnailImage" />
                                        <Binding Path="(imaging:ImageThemingUtilities.ImageBackgroundColor)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Source="{x:Static util:Boxes.BooleanTrue}" />
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                        </Border>
                    </Grid>
                    <TextBlock Width="110"
                               MinHeight="28"
                               MaxHeight="28"
                               Margin="0,0,0,10"
                               VerticalAlignment="Top"
                               TextAlignment="Center"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="Wrap">
                        <TextBlock.Text>
                            <Binding Path="Name" />
                        </TextBlock.Text>
                        <FrameworkElement.ToolTip>
                            <Binding Path="Name" />
                        </FrameworkElement.ToolTip>
                    </TextBlock>
                </StackPanel>
            </DataTemplate>

            <Style x:Key="ExtensionsListViewStyle" TargetType="{x:Type ListView}">
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="{DynamicResource {x:Static themes:ColorResources.ContentBrush}}" />
                <Setter Property="imaging:ImageThemingUtilities.ImageBackgroundColor">
                    <Setter.Value>
                        <Binding Converter="{StaticResource BrushToColorConverter}"
                                 Path="Background"
                                 RelativeSource="{RelativeSource Self}" />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="ItemTemplate" Value="{StaticResource LargeIconTemplate}">
                        <Setter Property="ItemsPanel" Value="{StaticResource WrapStyleTemplate}" />
                    </Trigger>
                    <Trigger Property="ItemTemplate" Value="{StaticResource SmallIconTemplate}">
                        <Setter Property="ItemsPanel" Value="{StaticResource WrapStyleTemplate}" />
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                    </Trigger>
                    <Trigger Property="ItemTemplate" Value="{StaticResource MediumIconTemplate}">
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                    </Trigger>
                    <DataTrigger>
                        <DataTrigger.Binding>
                            <Binding Path="ItemsSource" RelativeSource="{RelativeSource Self}" />
                        </DataTrigger.Binding>
                        <DataTrigger.Value>
                            <x:NullExtension />
                        </DataTrigger.Value>
                        <Setter Property="Control.Template" Value="{StaticResource NoItemsTemplate}" />
                    </DataTrigger>
                    <DataTrigger Value="0">
                        <DataTrigger.Binding>
                            <Binding Path="ItemsSource.Count" RelativeSource="{RelativeSource Self}" />
                        </DataTrigger.Binding>
                        <Setter Property="Control.Template" Value="{StaticResource NoItemsTemplate}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ExtensionsViewItemStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="FocusVisualStyle" Value="{x:NullExtension}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ColorResources.WindowText}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="ItemBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True"
                                    TextElement.Foreground="{DynamicResource {x:Static themes:ColorResources.ContentTextBrush}}">
                                <Grid>
                                    <ContentPresenter Margin="5,0,2,0"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsMouseOver" Value="true">
                                    <Setter Property="Panel.Background" Value="{DynamicResource {x:Static themes:ColorResources.ContentMouseOverBrush}}" />
                                    <Setter TargetName="ItemBorder" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:ColorResources.ContentMouseOverTextBrush}}" />
                                </Trigger>
                                <Trigger Property="ListBoxItem.IsSelected" Value="true">
                                    <Setter Property="Panel.Background" Value="{DynamicResource {x:Static themes:ColorResources.ContentSelectedBrush}}" />
                                    <Setter TargetName="ItemBorder" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:ColorResources.ContentSelectedTextBrush}}" />
                                    <Setter Property="Border.BorderBrush" Value="{DynamicResource {x:Static themes:ColorResources.ContentSelectedBorderBrush}}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ListBoxItem.IsSelected" Value="true" />
                                        <Condition Property="Selector.IsSelectionActive" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Panel.Background" Value="{DynamicResource {x:Static themes:ColorResources.ContentInactiveSelectedBrush}}" />
                                    <Setter TargetName="ItemBorder" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:ColorResources.ContentInactiveSelectedTextBrush}}" />
                                    <Setter Property="Border.BorderBrush" Value="Transparent" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z" />
            <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Width="16"
                                    Height="16"
                                    Padding="5"
                                    Background="Transparent">
                                <Path x:Name="ExpandedPath"
                                      Data="{StaticResource TreeArrow}"
                                      Fill="Transparent"
                                      Stroke="{TemplateBinding Foreground}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="ExpandedPath" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ExpandedPath" Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ToggleButton}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ProviderTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource AreEqualConverter}">
                            <Binding />
                            <Binding Path="DataContext.SelectedProvider" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid x:Name="HeaderGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="8" MaxWidth="8" />
                                    <ColumnDefinition Width="11" MaxWidth="11" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border x:Name="HeaderBorder"
                                        Grid.ColumnSpan="4"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1">
                                    <DockPanel LastChildFill="True">
                                        <ToggleButton x:Name="HeaderExpanderArrow"
                                                      ClickMode="Press"
                                                      Foreground="{Binding ElementName=HeaderPresenter, Path=Foreground}"
                                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Style="{StaticResource ExpandCollapseToggleStyle}" />
                                        <TextBlock x:Name="HeaderPresenter"
                                                   Padding="3,5,15,5"
                                                   HorizontalAlignment="Left"
                                                   Foreground="{DynamicResource {x:Static themes:ColorResources.WonderbarTextBrush}}"
                                                   TextTrimming="CharacterEllipsis"
                                                   TextWrapping="NoWrap">
                                            <TextBlock.Text>
                                                <Binding Path="Text" />
                                            </TextBlock.Text>
                                            <FrameworkElement.ToolTip>
                                                <Binding Path="Text" />
                                            </FrameworkElement.ToolTip>
                                        </TextBlock>
                                    </DockPanel>
                                </Border>
                                <Border Grid.Row="1"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="4"
                                        Background="{DynamicResource {x:Static themes:ColorResources.WonderbarBrush}}">
                                    <ItemsPresenter x:Name="ProviderItemsHost" Margin="0,7" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:ColorResources.WonderbarSelectedBorderBrush}}" />
                                </Trigger>
                                <Trigger Property="IsExpanded" Value="False">
                                    <Setter TargetName="ProviderItemsHost" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="UIElement.IsMouseOver" Value="true">
                                    <Setter TargetName="HeaderPresenter" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:ColorResources.WonderbarMouseOverTextBrush}}" />
                                    <Setter x:Uid="Setter_50" TargetName="HeaderGrid" Property="Panel.Background" Value="{DynamicResource {x:Static themes:ColorResources.WonderbarMouseOverBrush}}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TreeViewItem.IsSelected" Value="true" />
                                        <Condition Property="Selector.IsSelectionActive" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="HeaderPresenter" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:ColorResources.WonderbarTreeInactiveSelectedTextBrush}}" />
                                    <Setter TargetName="HeaderGrid" Property="Panel.Background" Value="{DynamicResource {x:Static themes:ColorResources.WonderbarTreeInactiveSelectedBrush}}" />
                                    <Setter TargetName="HeaderBorder" Property="Border.BorderBrush" Value="Transparent" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CategoryTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:ColorResources.WonderbarTextBrush}}" />
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static themes:ColorResources.WonderbarBrush}}" />
                <Setter Property="Border.BorderBrush" Value="Transparent" />
                <!--<Setter Property="IsSelected">
                    <Setter.Value>
                        <Binding Path="IsSelected" Mode="TwoWay"/>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="IsExpanded">
                    <Setter.Value>
                        <Binding Mode="TwoWay" Path="IsExpanded" />
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsSource">
                    <Setter.Value>
                        <Binding Path="Nodes" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid Background="{DynamicResource {x:Static themes:ColorResources.WonderbarBrush}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}">
                                    <ToggleButton.IsChecked>
                                        <Binding Path="IsExpanded" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </ToggleButton.IsChecked>
                                </ToggleButton>
                                <Border x:Name="Bd"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="True">
                                    <TextBlock x:Name="CategoryName"
                                               Margin="-1,0,0,0"
                                               Padding="2">
                                        <TextBlock.Text>
                                            <Binding Path="Text" />
                                        </TextBlock.Text>
                                    </TextBlock>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost"
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Grid.ColumnSpan="2" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TreeViewItem.IsSelected" Value="true">
                                    <Setter TargetName="CategoryName" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:ColorResources.WonderbarTreeSelectedTextBrush}}" />
                                    <Setter TargetName="CategoryName" Property="TextElement.Background" Value="{DynamicResource {x:Static themes:ColorResources.WonderbarTreeSelectedBrush}}" />
                                </Trigger>
                                <Trigger Property="TreeViewItem.IsExpanded" Value="false">
                                    <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="ItemsControl.HasItems" Value="false">
                                    <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TreeViewItem.IsSelected" Value="true" />
                                        <Condition Property="Selector.IsSelectionActive" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="CategoryName" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:ColorResources.WonderbarTreeInactiveSelectedTextBrush}}" />
                                    <Setter TargetName="CategoryName" Property="TextElement.Background" Value="{DynamicResource {x:Static themes:ColorResources.WonderbarTreeInactiveSelectedBrush}}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <core:TreeNodeStyleSelector x:Key="ProviderTreeStyleSelector"
                                        CategoryStyle="{StaticResource CategoryTreeViewItemStyle}"
                                        ProviderStyle="{StaticResource ProviderTreeViewItemStyle}" />

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="ResGrid"
          Background="Transparent"
          DockPanel.Dock="Top"
          SnapsToDevicePixels="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding ProvidersUsed, Converter={StaticResource ProviderTreeViewVisibilityConverter}, ConverterParameter=240, FallbackValue=240, Mode=OneTime}" />
            <ColumnDefinition Width="{Binding ProvidersUsed, Converter={StaticResource ProviderTreeViewVisibilityConverter}, ConverterParameter=4, FallbackValue=4, Mode=OneTime}" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid>
            <TreeView x:Name="ProvidersTreeView"
                      Padding="0"
                      Background="{DynamicResource {x:Static themes:ColorResources.BackgroundBrush}}"
                      BorderBrush="Transparent"
                      BorderThickness="1"
                      ItemContainerStyleSelector="{StaticResource ProviderTreeStyleSelector}"
                      TreeViewItem.Expanded="ProvidersTreeView_OnExpanded"
                      Visibility="{Binding ProvidersUsed, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneTime}">
                <TreeView.ItemsSource>
                    <Binding Path="Providers" />
                </TreeView.ItemsSource>
                <i:Interaction.Behaviors>
                    <util:BindableSelectedItemBehavior SelectedItem="{Binding SelectedProviderTreeItem, Mode=TwoWay}" />
                </i:Interaction.Behaviors>
            </TreeView>
        </Grid>
        <Grid Grid.Column="2" Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="34" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="250" />
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Row="0" Grid.ColumnSpan="3">
                <StackPanel HorizontalAlignment="Stretch"
                            DockPanel.Dock="Left"
                            Orientation="Horizontal">
                    <TextBlock Margin="4,0,4,0"
                               VerticalAlignment="Center"
                               DockPanel.Dock="Left"
                               Focusable="False"
                               Foreground="{DynamicResource {x:Static themes:ColorResources.ContentTextBrush}}"
                               Text="{x:Static newElementDialog:NewElementDialogResources.NewElementSortByLabel}" />
                    <controls:SortCombo x:Name="SortComboBox"
                                        Width="160"
                                        Margin="0,0,4,0"
                                        VerticalAlignment="Center"
                                        DockPanel.Dock="Left"
                                        ItemsSource="{Binding SortItems}"
                                        SelectedItem="{Binding SelectedSortItem, Mode=TwoWay}"
                                        TabIndex="1"
                                        Style="{DynamicResource {x:Static themes:ResourceKeys.ComboBoxStyleKey}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <Binding Path="Text" />
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </controls:SortCombo>
                    <Grid DockPanel.Dock="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <dialogButtons:DialogToggleButton x:Name="BtntLargeIcons"
                                                          Grid.Column="0"
                                                          Height="Auto"
                                                          Margin="2,0,0,0"
                                                          VerticalAlignment="Center"
                                                          Background="Transparent"
                                                          BorderBrush="Transparent"
                                                          Checked="Btnt_OnChecked"
                                                          IsChecked="True"
                                                          TabIndex="2"
                                                          ToolTip="Large Icons"
                                                          Visibility="{Binding IsLargeIconsViewButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Image Width="16"
                                   Height="Auto"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor"
                                   RenderOptions.EdgeMode="Aliased">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource ThemedImageSourceConverter}">
                                        <Binding Source="{markupExtensions:ImageSource ../../../Resources/Images/Medium.png}" />
                                        <Binding Path="(imaging:ImageThemingUtilities.ImageBackgroundColor)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Source="{x:Static util:Boxes.BooleanTrue}" />
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                        </dialogButtons:DialogToggleButton>
                        <dialogButtons:DialogToggleButton x:Name="BtntSmallIcons"
                                                          Grid.Column="1"
                                                          Height="Auto"
                                                          Margin="2,0,0,0"
                                                          VerticalAlignment="Center"
                                                          Background="Transparent"
                                                          BorderBrush="Transparent"
                                                          Checked="Btnt_OnChecked"
                                                          TabIndex="3"
                                                          ToolTip="Small Icons"
                                                          Visibility="{Binding IsSmallIconsViewButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Image Width="16"
                                   Height="Auto"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor"
                                   RenderOptions.EdgeMode="Aliased">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource ThemedImageSourceConverter}">
                                        <Binding Source="{markupExtensions:ImageSource ../../../Resources/Images/List.png}" />
                                        <Binding Path="(imaging:ImageThemingUtilities.ImageBackgroundColor)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Source="{x:Static util:Boxes.BooleanTrue}" />
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                        </dialogButtons:DialogToggleButton>
                        <dialogButtons:DialogToggleButton x:Name="BtntMediumIcons"
                                                          Grid.Column="2"
                                                          Height="Auto"
                                                          Margin="2,0,0,0"
                                                          VerticalAlignment="Center"
                                                          Background="Transparent"
                                                          BorderBrush="Transparent"
                                                          Checked="Btnt_OnChecked"
                                                          TabIndex="4"
                                                          ToolTip="Medium Icons"
                                                          Visibility="{Binding IsMediumIconsViewButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Image Width="16"
                                   Height="Auto"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor"
                                   RenderOptions.EdgeMode="Aliased">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource ThemedImageSourceConverter}">
                                        <Binding Source="{markupExtensions:ImageSource ../../../Resources/Images/Details.png}" />
                                        <Binding Path="(imaging:ImageThemingUtilities.ImageBackgroundColor)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Source="{x:Static util:Boxes.BooleanTrue}" />
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                        </dialogButtons:DialogToggleButton>
                    </Grid>
                </StackPanel>
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.0001*" />
                        <ColumnDefinition Width="1*" MaxWidth="254" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Row="0"
                            Grid.Column="1"
                            Margin="4,0,4,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            DockPanel.Dock="Right" />
                </Grid>
            </DockPanel>
            <Grid Grid.Row="1" Grid.Column="0">
                <ListView x:Name="ListView"
                          ItemContainerStyle="{DynamicResource ExtensionsViewItemStyle}"
                          ItemsSource="{Binding Extensions}"
                          Loaded="ListView_OnLoaded"
                          MouseDoubleClick="ListView_OnMouseDoubleClick"
                          SelectedIndex="{Binding SelectedExtensionIndex, Mode=TwoWay}"
                          SelectedItem="{Binding SelectedExtension, Mode=TwoWay}"
                          SelectionMode="Single"
                          SizeChanged="ListView_OnSizeChanged"
                          Style="{DynamicResource ExtensionsListViewStyle}"
                          VirtualizingPanel.IsVirtualizing="True">
                    <ListView.View>
                        <GridView>
                            <GridView.ColumnHeaderContainerStyle>
                                <Style>
                                    <Setter Property="UIElement.Visibility" Value="Collapsed" />
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>
                            <GridViewColumn />
                        </GridView>
                    </ListView.View>
                    <FrameworkElement.FocusVisualStyle>
                        <x:NullExtension />
                    </FrameworkElement.FocusVisualStyle>
                </ListView>
            </Grid>
            <Border Grid.Row="1"
                    Grid.Column="1"
                    Margin="1,0,0,0"
                    Background="{DynamicResource {x:Static themes:ColorResources.DetailsBrush}}"
                    BorderThickness="0">
                <ContentControl Content="{Binding SelectedItem, ElementName=ListView, UpdateSourceTrigger=PropertyChanged}"
                                Focusable="False"
                                Foreground="{DynamicResource {x:Static themes:ColorResources.DetailsTextBrush}}"
                                Style="{StaticResource DetailPaneStyle}" />
            </Border>
        </Grid>
    </Grid>
</UserControl>