<UserControl x:Class="ModernApplicationFramework.Basics.CustomizeDialog.Views.CommandsPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:buttons="clr-namespace:ModernApplicationFramework.Controls.Buttons"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:controls="clr-namespace:ModernApplicationFramework.Controls"
             xmlns:converters="clr-namespace:ModernApplicationFramework.Core.Converters"
             xmlns:customize="clr-namespace:ModernApplicationFramework.Core.Converters.Customize"
             xmlns:customizeDialog="clr-namespace:ModernApplicationFramework.Basics.CustomizeDialog"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dialogButtons="clr-namespace:ModernApplicationFramework.Controls.Buttons.DialogButtons"
             xmlns:general="clr-namespace:ModernApplicationFramework.Core.Converters.General"
             xmlns:listBoxes="clr-namespace:ModernApplicationFramework.Controls.ListBoxes"
             xmlns:local="clr-namespace:ModernApplicationFramework.Basics.CustomizeDialog.ViewModels"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:menu="clr-namespace:ModernApplicationFramework.Controls.Menu"
             xmlns:properties="clr-namespace:ModernApplicationFramework.Properties"
             xmlns:validationRules="clr-namespace:ModernApplicationFramework.Core.ValidationRules"
             xmlns:commandBar="clr-namespace:ModernApplicationFramework.Basics.CommandBar"
             d:DesignHeight="400"
             d:DesignWidth="360"
             mc:Ignorable="d">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Themes/Generic/CustomizeStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <general:AndBooleanConverter x:Key="AndBooleanConverter" />
            <general:OrBooleanConverter x:Key="OrBooleanConverter" />
            <general:NegateBooleanConverter x:Key="NegateBooleanConverter" />
            <general:VisibleIfNotNullConverter x:Key="VisibleIfNotNullConverter" />
            <converters:TrimSpacesConverter x:Key="TrimSpacesConverter" />
            <customize:IsCustomizableModelConverter x:Key="IsCustomizableModelConverter" />
            <converters:EnumBooleanConverter x:Key="EnumBooleanConverter" />
            <customize:IsNotSeparatorModelConverter x:Key="IsNotSeparatorModelConverter" />
            <customize:IsSeparatorOrCustomizableModelConverter x:Key="IsSeparatorOrCustomizableModelConverter" />
            <converters:ResizeMenuItemVisibilityConverter x:Key="ResizeMenuItemVisibilityConverter" />
            <customize:IsButtonModelConverter x:Key="IsButtonModelConverter" />
            <customize:BeginGroupIsEnabledConverter x:Key="BeginGroupIsEnabledConverter" />
            <customize:CanMoveUpMultiValueConverter x:Key="CanMoveUpMultiValueConverter" />
            <customize:CanMoveDownMultiValueConverter x:Key="CanMoveDownMultiValueConverter" />
            <customize:StylingFlagsConverter x:Key="StylingFlagsConverter" />
            <CollectionViewSource x:Key="ToolBarsView" Source="{Binding CustomizableToolBars}">
                <CollectionViewSource.SortDescriptions>
                    <componentModel:SortDescription PropertyName="InternalName" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
            <ContextMenu x:Key="ModifySelectionCommandsMenu">
                <MenuItem Click="HandleResetItem" Header="{x:Static customizeDialog:Customize_Resources.CommandsPage_Reset}">
                    <UIElement.IsEnabled>
                        <Binding Converter="{StaticResource IsCustomizableModelConverter}" Mode="OneWay" />
                    </UIElement.IsEnabled>
                </MenuItem>
                <menu:EditableMenuItem Header="{x:Static customizeDialog:Customize_Resources.CommandsPage_Name}">
                    <menu:EditableMenuItem.Edit>
                        <Binding Converter="{StaticResource TrimSpacesConverter}"
                                 Mode="TwoWay"
                                 Path="Text"
                                 UpdateSourceTrigger="LostFocus" />
                    </menu:EditableMenuItem.Edit>
                    <menu:EditableMenuItem.IsEnabled>
                        <Binding Converter="{StaticResource IsCustomizableModelConverter}" Mode="OneWay" />
                    </menu:EditableMenuItem.IsEnabled>
                    <menu:EditableMenuItem.ValidationRules>
                        <validationRules:CommandNameNotEmptyValidationRule />
                    </menu:EditableMenuItem.ValidationRules>
                </menu:EditableMenuItem>
                <menu:EditableMenuItem EditMinWidth="100" Header="{x:Static customizeDialog:Customize_Resources.CommandsPage_Width}">
                    <UIElement.IsEnabled>
                        <Binding Converter="{StaticResource IsCustomizableModelConverter}" Mode="OneWay" />
                    </UIElement.IsEnabled>
                    <UIElement.Visibility>
                        <Binding Converter="{StaticResource ResizeMenuItemVisibilityConverter}" Mode="OneWay" />
                    </UIElement.Visibility>
                    <menu:EditableMenuItem.ValidationRules>
                        <validationRules:ComboBoxWidthValidationRule />
                    </menu:EditableMenuItem.ValidationRules>
                    <FrameworkElement.Style>
                        <Style BasedOn="{StaticResource {x:Type menu:EditableMenuItem}}" TargetType="{x:Type menu:EditableMenuItem}">
                            <Style.Triggers>
                                <Trigger Property="IsVisible" Value="True">
                                    <Setter Property="Edit">
                                        <Setter.Value>
                                            <Binding Mode="TwoWay" Path="VisualSource.DropDownWidth" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </FrameworkElement.Style>
                </menu:EditableMenuItem>
                <Separator />
                <menu:CheckedMenuItem Click="HandleStylingFlagsChange"
                                      Header="{x:Static customizeDialog:Customize_Resources.CommandsPage_DefaultStyle}"
                                      Value="{x:Static commandBar:CommandBarFlags.CommandFlagNone}">
                    <menu:CheckedMenuItem.Link>
                        <Binding Converter="{StaticResource StylingFlagsConverter}"
                                 Mode="OneWay"
                                 Path="Flags.AllFlags" />
                    </menu:CheckedMenuItem.Link>
                    <UIElement.IsEnabled>
                        <MultiBinding Converter="{StaticResource AndBooleanConverter}">
                            <Binding Converter="{StaticResource IsButtonModelConverter}" />
                            <Binding Converter="{StaticResource IsCustomizableModelConverter}" />
                        </MultiBinding>
                    </UIElement.IsEnabled>
                </menu:CheckedMenuItem>
                <menu:CheckedMenuItem Click="HandleStylingFlagsChange"
                                      Header="{x:Static customizeDialog:Customize_Resources.CommandsPage_TextOnlyAlways}"
                                      Value="{x:Static commandBar:CommandBarFlags.CommandFlagText}">
                    <menu:CheckedMenuItem.Link>
                        <Binding Converter="{StaticResource StylingFlagsConverter}"
                                 Mode="OneWay"
                                 Path="Flags.AllFlags" />
                    </menu:CheckedMenuItem.Link>
                    <UIElement.IsEnabled>
                        <MultiBinding Converter="{StaticResource AndBooleanConverter}">
                            <Binding Converter="{StaticResource IsButtonModelConverter}" />
                            <Binding Converter="{StaticResource IsCustomizableModelConverter}" />
                        </MultiBinding>
                    </UIElement.IsEnabled>
                </menu:CheckedMenuItem>
                <menu:CheckedMenuItem Click="HandleStylingFlagsChange"
                                      Header="{x:Static customizeDialog:Customize_Resources.CommandsPage_TextOnlyMenu}"
                                      Value="{x:Static commandBar:CommandBarFlags.CommandFlagPict}">
                    <menu:CheckedMenuItem.Link>
                        <Binding Converter="{StaticResource StylingFlagsConverter}"
                                 Mode="OneWay"
                                 Path="Flags.AllFlags" />
                    </menu:CheckedMenuItem.Link>
                    <UIElement.IsEnabled>
                        <MultiBinding Converter="{StaticResource AndBooleanConverter}">
                            <Binding Converter="{StaticResource IsButtonModelConverter}" />
                            <Binding Converter="{StaticResource IsCustomizableModelConverter}" />
                        </MultiBinding>
                    </UIElement.IsEnabled>
                </menu:CheckedMenuItem>
                <menu:CheckedMenuItem Click="HandleStylingFlagsChange"
                                      Header="{x:Static customizeDialog:Customize_Resources.CommandsPage_ImageAndText}"
                                      Value="{x:Static commandBar:CommandBarFlags.CommandFlagPictAndText}">
                    <menu:CheckedMenuItem.Link>
                        <Binding Converter="{StaticResource StylingFlagsConverter}"
                                 Mode="OneWay"
                                 Path="Flags.AllFlags" />
                    </menu:CheckedMenuItem.Link>
                    <UIElement.IsEnabled>
                        <MultiBinding Converter="{StaticResource AndBooleanConverter}">
                            <Binding Converter="{StaticResource IsButtonModelConverter}" />
                            <Binding Converter="{StaticResource IsCustomizableModelConverter}" />
                        </MultiBinding>
                    </UIElement.IsEnabled>
                </menu:CheckedMenuItem>
                <controls:Separator />
                <menu:CheckedMenuItem Click="HandleBeginGroup"
                                      Header="{x:Static customizeDialog:Customize_Resources.CommandsPage_BeginGroup}"
                                      IsCheckable="True"
                                      IsChecked="{Binding PrecededBySeparator}">
                    <UIElement.IsEnabled>
                        <Binding Converter="{StaticResource BeginGroupIsEnabledConverter}" />
                    </UIElement.IsEnabled>
                </menu:CheckedMenuItem>
            </ContextMenu>
            <Style x:Key="CollectionComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="AutomationProperties.Name" Value="{Binding Text}" />
            </Style>
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid x:Name="TopSection"
              Grid.Row="0"
              Margin="10,0,10,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock x:Name="TitleLabel"
                       Grid.Row="0"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Margin="0,5,0,5"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Text="{x:Static customizeDialog:Customize_Resources.CommandsPage_ComboGroupHeader}"
                       TextWrapping="Wrap" />
            <RadioButton x:Name="MenuBarRadioButton"
                         Grid.Row="1"
                         Grid.Column="0"
                         Margin="0,0,0,5"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Center"
                         Content="{x:Static customizeDialog:Customize_Resources.CommandsPage_MenuBarGroupItem}"
                         GroupName="CurrentlyEditingGroup"
                         IsChecked="{Binding SelectedOption, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:CustomizeRadioButtonOptions.Menu}, Mode=TwoWay}"
                         Visibility="{Binding CustomizableMenuBars, Converter={StaticResource VisibleIfNotNullConverter}}" />
            <ComboBox x:Name="MenuBarCombo"
                      Grid.Row="1"
                      Grid.Column="1"
                      Margin="6,0,0,5"
                      VerticalAlignment="Center"
                      DisplayMemberPath="InternalName"
                      ItemContainerStyle="{StaticResource CollectionComboBoxItemStyle}"
                      ItemsSource="{Binding CustomizableMenuBars}"
                      SelectedItem="{Binding SelectedMenuItem, Mode=TwoWay}"
                      TextSearch.TextPath="InternalName"
                      Visibility="{Binding CustomizableMenuBars, Converter={StaticResource VisibleIfNotNullConverter}}">
                <UIElement.IsEnabled>
                    <Binding ElementName="MenuBarRadioButton" Path="IsChecked" />
                </UIElement.IsEnabled>
            </ComboBox>
            <RadioButton Name="ToolBarRadioButton"
                         Grid.Row="2"
                         Grid.Column="0"
                         Margin="0,0,0,5"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Center"
                         Content="{x:Static customizeDialog:Customize_Resources.CommandsPage_ToolbarGroupItem}"
                         GroupName="CurrentlyEditingGroup"
                         IsChecked="{Binding SelectedOption, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:CustomizeRadioButtonOptions.Toolbar}, Mode=TwoWay}" />
            <ComboBox Name="ToolBarCombo"
                      Grid.Row="2"
                      Grid.Column="1"
                      Margin="6,0,0,5"
                      VerticalAlignment="Center"
                      DisplayMemberPath="InternalName"
                      ItemContainerStyle="{StaticResource CollectionComboBoxItemStyle}"
                      SelectedItem="{Binding SelectedToolBarItem, Mode=TwoWay}"
                      TextSearch.TextPath="InternalName">
                <UIElement.IsEnabled>
                    <Binding ElementName="ToolBarRadioButton" Path="IsChecked" />
                </UIElement.IsEnabled>
                <ItemsControl.ItemsSource>
                    <Binding Source="{StaticResource ToolBarsView}" />
                </ItemsControl.ItemsSource>
            </ComboBox>
            <RadioButton Name="ContextMenuRadioButton"
                         Grid.Row="3"
                         Grid.Column="0"
                         Margin="0,0,0,5"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Center"
                         Content="{x:Static customizeDialog:Customize_Resources.CommandsPage_ContextMenuGroupItem}"
                         GroupName="CurrentlyEditingGroup"
                         IsChecked="{Binding SelectedOption, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:CustomizeRadioButtonOptions.ContextMenu}, Mode=TwoWay}" />
            <ComboBox Name="ContextMenuCombo"
                      Grid.Row="3"
                      Grid.Column="1"
                      Margin="6,0,0,5"
                      VerticalAlignment="Center"
                      DisplayMemberPath="InternalName"
                      ItemContainerStyle="{StaticResource CollectionComboBoxItemStyle}"
                      ItemsSource="{Binding CustomizableContextMenus}"
                      SelectedItem="{Binding SelectedContextMenuItem, Mode=TwoWay}"
                      TextSearch.TextPath="InternalName">
                <UIElement.IsEnabled>
                    <Binding ElementName="ContextMenuRadioButton" Path="IsChecked" />
                </UIElement.IsEnabled>
            </ComboBox>
        </Grid>
        <Grid x:Name="BottomSection" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label x:Name="ControlsLabel"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Margin="10,0,10,5"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Content="{x:Static customizeDialog:Customize_Resources.CommandsPage_ListBoxHeader}"
                   IsTabStop="False" />
            <listBoxes:CustomizeControlsListBox x:Name="ControlsListBox"
                                                Grid.Row="1"
                                                Grid.Column="0"
                                                Margin="10,0,10,10"
                                                IsSynchronizedWithCurrentItem="True"
                                                ItemsSource="{Binding Items}"
                                                SelectedIndex="0"
                                                SelectedItem="{Binding SelectedListBoxItem, Mode=TwoWay}">
                <!--<ItemsControl.ItemsSource>
                    <MultiBinding Converter="{StaticResource EnabledFilteringMultiConverter}">
                        <Binding ElementName="MenuBarCombo" Path="IsEnabled"/>
                        <Binding ElementName="MenuBarCombo" Path="SelectedItem.Items"/>
                        <Binding ElementName="ToolBarCombo" Path="IsEnabled"/>
                        <Binding ElementName="ToolBarCombo" Path="SelectedItem.Items"/>
                        <Binding ElementName="ContextMenuCombo" Path="SelectedItem.Items"/>
                    </MultiBinding>
                </ItemsControl.ItemsSource>-->
            </listBoxes:CustomizeControlsListBox>
            <StackPanel Grid.Row="1" Grid.Column="1">
                <FrameworkElement.Resources>
                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                    </Style>
                </FrameworkElement.Resources>
                <dialogButtons:DialogButton x:Name="AddCommandButton"
                                            Command="{Binding HandleAddCommand}"
                                            Content="{x:Static customizeDialog:Customize_Resources.CommandsPage_AddCommand}" />
                <dialogButtons:DialogButton x:Name="AddNewMenu"
                                            Command="{Binding HandleAddNewMenuCommand}"
                                            Content="{x:Static customizeDialog:Customize_Resources.CommandsPage_AddNewMenu}" />
                <dialogButtons:DialogButton x:Name="DeleteButton"
                                            Command="{Binding HandleDeleteCommand}"
                                            Content="{x:Static customizeDialog:Customize_Resources.CommandsPage_Delete}">
                    <UIElement.IsEnabled>
                        <Binding Converter="{StaticResource IsSeparatorOrCustomizableModelConverter}" Path="SelectedListBoxItem" />
                    </UIElement.IsEnabled>
                </dialogButtons:DialogButton>
                <dialogButtons:DialogButton x:Name="MoveUpButton"
                                            Command="{Binding HandleMoveUpCommand}"
                                            Content="{x:Static customizeDialog:Customize_Resources.CommandsPage_MoveUp}">
                    <UIElement.IsEnabled>
                        <MultiBinding Converter="{StaticResource CanMoveUpMultiValueConverter}">
                            <Binding ElementName="ControlsListBox" Path="SelectedIndex" />
                            <Binding ElementName="ControlsListBox" Path="SelectedItem" />
                        </MultiBinding>
                    </UIElement.IsEnabled>
                </dialogButtons:DialogButton>
                <dialogButtons:DialogButton x:Name="MoveDownButton"
                                            Command="{Binding HandleMoveDownCommand}"
                                            Content="{x:Static customizeDialog:Customize_Resources.CommandsPage_MoveDown}">
                    <UIElement.IsEnabled>
                        <MultiBinding Converter="{StaticResource CanMoveDownMultiValueConverter}">
                            <Binding ElementName="ControlsListBox" Path="Items.Count" />
                            <Binding ElementName="ControlsListBox" Path="SelectedIndex" />
                            <Binding ElementName="ControlsListBox" Path="SelectedItem" />
                        </MultiBinding>
                    </UIElement.IsEnabled>
                </dialogButtons:DialogButton>
                <buttons:DropDownDialogButton x:Name="DropDownButton"
                                              Command="{Binding DropDownClickCommand}"
                                              Content="{x:Static customizeDialog:Customize_Resources.CommandsPage_ModifySelection}"
                                              DropDownMenu="{DynamicResource ModifySelectionCommandsMenu}">
                    <UIElement.IsEnabled>
                        <Binding Converter="{StaticResource IsNotSeparatorModelConverter}" Path="SelectedListBoxItem" />
                    </UIElement.IsEnabled>
                </buttons:DropDownDialogButton>
                <dialogButtons:DialogButton x:Name="ResetAllButton"
                                            Command="{Binding ResetAllCommand}"
                                            Content="{x:Static customizeDialog:Customize_Resources.CommandsPage_ResetAll}">
                    <UIElement.IsEnabled>
                        <MultiBinding Converter="{StaticResource OrBooleanConverter}">
                            <Binding Converter="{StaticResource NegateBooleanConverter}"
                                     ElementName="ToolBarCombo"
                                     Path="IsEnabled" />
                            <Binding Converter="{StaticResource NegateBooleanConverter}"
                                     ElementName="ToolBarCombo"
                                     Path="SelectedItem.IsCustom" />
                        </MultiBinding>
                    </UIElement.IsEnabled>
                </dialogButtons:DialogButton>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>