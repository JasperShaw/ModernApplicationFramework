<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes"
                    xmlns:utilities="clr-namespace:ModernApplicationFramework.Core.Utilities"
                    xmlns:buttons="clr-namespace:ModernApplicationFramework.Controls.Buttons"
                    xmlns:styles="clr-namespace:ModernApplicationFramework.Core.Styles"
                    xmlns:dialogButtons="clr-namespace:ModernApplicationFramework.Controls.Buttons.DialogButtons">

    <Style TargetType="{x:Type dialogButtons:DialogToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarTextActive}}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:NullExtension}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dialogButtons:DialogToggleButton}">
                    <Border x:Name="Border" BorderThickness="1" Background="Transparent" BorderBrush="Transparent">
                        <Grid x:Name="ContainingGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Image" Margin="2" Grid.Column="0"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Visibility="Visible" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" 
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarBorder}}"/>
                            <Setter TargetName="Border" Property="Background" 
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMouseOverBackgroundBegin}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarTextHover}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" 
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarBorder}}"/>
                            <Setter TargetName="Border" Property="Background" 
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMouseOverBackgroundBegin}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarTextHover}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarSelectedBorder}}"/>
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarSelected}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarTextSelected}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" 
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarBorder}}"/>
                            <Setter TargetName="Border" Property="Background" 
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMouseDownBackgroundBegin}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarTextMouseDown}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarHoverOverSelectedIconBorder}}"/>
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarHoverOverSelectedIcon}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarTextHoverOverSelected}}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>