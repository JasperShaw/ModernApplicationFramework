<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:buttons="clr-namespace:ModernApplicationFramework.Controls.Buttons"
                    xmlns:dialogButtons="clr-namespace:ModernApplicationFramework.Controls.Buttons.DialogButtons"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes"
                    xmlns:utilities="clr-namespace:ModernApplicationFramework.Core.Utilities">


    <Style x:Key="{x:Static themes:ResourceKeys.ThemedDialogButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonBorder}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonText}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Padding" Value="10,1,10,1" />
        <Setter Property="MinHeight" Value="23" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ContentContainer"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonDefault}}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonDefaultText}}" />
                <Setter Property="Border.BorderBrush" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonBorderDefault}}" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonFocused}}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonFocusedText}}" />
                <Setter Property="Border.BorderBrush" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonBorderFocused}}" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonHover}}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonHoverText}}" />
                <Setter Property="Border.BorderBrush" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonBorderHover}}" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonPressed}}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonPressedText}}" />
                <Setter Property="Border.BorderBrush" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonBorderPressed}}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonDisabled}}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonDisabledText}}" />
                <Setter Property="Border.BorderBrush" Value="{DynamicResource {x:Static themes:CommonControlsColors.ButtonBorderDisabled}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type buttons:Button}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonBorder}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonForeground}}" />
        <Setter Property="utilities:DteFocusHelper.AcquireFocus" Value="{Binding AcquireFocus}" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <x:NullExtension />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type buttons:Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                        <Grid SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonBackgroundHover}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonBorderHover}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonForegroundHover}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonForegroundDown}}" />
                            <Setter Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonBackgroundDown}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonBorderDown}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type dialogButtons:DialogButton}">
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="MinHeight" Value="23" />
        <Setter Property="Margin" Value="0,0,10,10" />
        <Setter Property="Padding" Value="10,1,10,1" />
    </Style>

</ResourceDictionary>