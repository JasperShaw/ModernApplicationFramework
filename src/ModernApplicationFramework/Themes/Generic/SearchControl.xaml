<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:control="clr-namespace:ModernApplicationFramework.Controls.SearchControl"
                    xmlns:controls="clr-namespace:ModernApplicationFramework.Controls"
                    xmlns:windows="clr-namespace:ModernApplicationFramework.Controls.Windows"
                    xmlns:vsui="clr-namespace:ModernApplicationFramework.Basics"
                    xmlns:general="clr-namespace:ModernApplicationFramework.Core.Converters.General"
                    xmlns:converters="clr-namespace:ModernApplicationFramework.Core.Converters"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:utilities="clr-namespace:ModernApplicationFramework.Controls.Utilities">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <general:IsNullOrEmptyConverter x:Key="IsNullOrEmptyConverter"/>
    <general:NotNullConverter x:Key="NotNullConverter"/>
    <converters:SearchStatusConverter x:Key="SearchStatusConverter"/>
    <converters:SearchProgressTypeConverter x:Key="SearchProgressTypeConverter"/>
    <converters:SearchControlThicknessConverter x:Key="SearchControlThicknessConverter"/>
    <converters:LiveSearchTextConverter x:Key="LiveSearchTextConverter"/>
    <general:IsEqualConverter x:Key="IsEqualConverter"/>

    <system:Int32 x:Key="IntZero">0</system:Int32>


    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3 3 L 6 0 Z</Geometry>
    <Geometry x:Key="SearchGeometry">
        F1 M 8.5,7.0 C 7.12,7.00 6.0,5.88 6.0,4.5 C 6.0,3.12 7.12,2.0 8.5,2.0 C 9.88,2.0 11.0,3.12 11.0,4.5 C 11.0,5.88 9.88,7.0 8.5,7.0 Z M 8.5,0.0 C 6.02,0.0 4.0,2.02 4.0,4.500 C 4.0,5.23 4.19,5.9 4.49,6.5 L 0.0,11.0 L 2.0,13.0 L 6.49,8.51 C 7.1,8.81 7.77,9.0 8.5,9.0 C 11.0,9.0 13.0,7.0 13.0,4.5 C 13.0,2.02 11.0,0.0 8.5,0.0 Z
    </Geometry>
    <Geometry x:Key="SearchClearStopGeometry">
        F1 M 0,1 L 1,0 L 4,3 L 7,0 L 8,1 L 5,4 L 8,7 L 7,8 L 4,5 L 1,8 L 0,7 L 3,4 L 0,1 Z
    </Geometry>


    <ControlTemplate x:Key="ProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="TemplateRoot" ClipToBounds="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate"/>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard RepeatBehavior="Forever">
                            <PointAnimation Storyboard.TargetName="IndeterminateAnimation" Storyboard.TargetProperty="RenderTransformOrigin"
                                            From="-0.5,0.5" To="1.5,0.5" Duration="0:0:2"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="PART_Track" Fill="{TemplateBinding Background}"/>
            <Rectangle x:Name="PART_Indicator" Fill="{TemplateBinding TextElement.Foreground}" HorizontalAlignment="Left"/>
            <Rectangle x:Name="IndeterminateAnimation" Fill="{TemplateBinding TextElement.Foreground}" Visibility="Collapsed">
                <Rectangle.RenderTransform>
                    <ScaleTransform ScaleX="0.25" ScaleY="1.0"/>
                </Rectangle.RenderTransform>
            </Rectangle>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsIndeterminate" Value="True">
                <Setter TargetName="PART_Indicator" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="IndeterminateAnimation" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="TemplateRoot" Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X="-0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.ProgressBarIndicator}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.ProgressBarBackground}}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template" Value="{StaticResource ProgressBarTemplate}"/>
    </Style>


    <Style x:Key="SearchWatermarkStyle" TargetType="{x:Type TextBlock}">
        <Style.Setters>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.UnfocusedWatermarkText}}"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style.Setters>
    </Style>


    <ControlTemplate x:Key="SearchBoxTemplate" TargetType="{x:Type control:SearchTextBox}">
        <Border x:Name="Border" Padding="0,2,0,2" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer x:Name="PART_ContentHost" Margin="0"/>
        </Border>
    </ControlTemplate>
    <Style x:Key="SearchBoxStyle" TargetType="{x:Type control:SearchTextBox}">
        <Style.Setters>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.UnfocusedText}}"/>
            <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.Selection}}"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="Margin" Value="{Binding Path=SearchSettings.ControlPaddingThickness, Converter={StaticResource SearchControlThicknessConverter}, ConverterParameter={x:Static converters:BorderType.LeftTopRightBottom}}"/>
            <Setter Property="MaxLines" Value="1"/>
            <Setter Property="MaxLength" Value="1000"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ToolTip" Value="{Binding Path=SearchSettings.SearchTooltip}"/>
            <Setter Property="Template" Value="{StaticResource SearchBoxTemplate}"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.DisabledText}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="SearchButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <Border x:Name="Border" VerticalAlignment="Stretch"
                    Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                <Path x:Name="SearchButtonImage" Data="{TemplateBinding Content}"
                      Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.ActionButtonMouseDown}}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.ActionButtonMouseOverBorder}}"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.ActionButtonMouseOverGlyph}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.ActionButtonMouseDown}}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.ActionButtonMouseDownBorder}}"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.ActionButtonMouseDownGlyph}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.ActionButtonDisabledGlyph}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
        <Style.Setters>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template" Value="{StaticResource SearchButtonTemplate}"/>
            <Setter Property="Visibility" Value="{Binding Path=SearchSettings.SearchButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </Style.Setters>
        <Style.Triggers>
            <DataTrigger Value="{x:Static control:SearchStatus.NotStarted}"
                         Binding="{Binding Path=SearchStatus}">
                <Setter Property="Content" Value="{StaticResource SearchGeometry}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.SearchGlyph}}"/>
                <Setter Property="ToolTip" Value="{Binding SearchSettings.SearchStartTooltip}"/>
            </DataTrigger>
            <DataTrigger Value="{x:Static control:SearchStatus.InProgress}"
                         Binding="{Binding Path=SearchStatus}">
                <Setter Property="Content" Value="{StaticResource SearchClearStopGeometry}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.StopGlyph}}"/>
                <Setter Property="ToolTip" Value="{Binding SearchSettings.SearchStopTooltip}"/>
            </DataTrigger>
            <DataTrigger Value="{x:Static control:SearchStatus.Complete}"
                         Binding="{Binding Path=SearchStatus}">
                <Setter Property="Content" Value="{StaticResource SearchClearStopGeometry}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.ClearGlyph}}"/>
                <Setter Property="ToolTip" Value="{Binding SearchSettings.SearchClearTooltip}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="{x:Static control:SearchStatus.NotStarted}" Binding="{Binding Path=SearchStatus}"/>
                    <Condition Value="True" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type control:SearchControl}}}"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseOverSearchGlyph}}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="{x:Static control:SearchStatus.NotStarted}" Binding="{Binding Path=SearchStatus}"/>
                    <Condition Value="True" Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type control:SearchControl}}}"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.FocusedSearchGlyph}}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="{x:Static control:SearchStatus.InProgress}" Binding="{Binding Path=SearchStatus}"/>
                    <Condition Value="True" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type control:SearchControl}}}"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseOverStopGlyph}}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="{x:Static control:SearchStatus.InProgress}" Binding="{Binding Path=SearchStatus}"/>
                    <Condition Value="True" Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type control:SearchControl}}}"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.FocusedStopGlyph}}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="{x:Static control:SearchStatus.Complete}" Binding="{Binding Path=SearchStatus}"/>
                    <Condition Value="True" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type control:SearchControl}}}"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseOverClearGlyph}}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="{x:Static control:SearchStatus.Complete}" Binding="{Binding Path=SearchStatus}"/>
                    <Condition Value="True" Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type control:SearchControl}}}"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.FocusedClearGlyph}}"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="SearchDropdownButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid Background="Transparent">
            <Border x:Name="Border" Width="12" VerticalAlignment="Stretch"
                    Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                <Path x:Name="Arrow" Margin="0,1,0,1" Fill="{TemplateBinding TextElement.Foreground}"
                      Data="{StaticResource DownArrowGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseDownDropDownButton}}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseDownDropDownButtonBorder}}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseDownDropDownButtonGlyph}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="ToolTip" Value="Close Dropdown"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseDownDropDownButton}}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseDownDropDownButtonBorder}}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseDownDropDownButtonGlyph}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SearchDropdownButtonStyle" TargetType="{x:Type ToggleButton}">
        <Style.Setters>
            <Setter Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.UnfocusedDropDownButton}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.UnfocusedDropDownButtonBorder}}"/>
            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.UnfocusedDropDownButtonGlyph}}"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="ToolTip" Value="Show Dropdown"/>
            <Setter Property="Template" Value="{StaticResource SearchDropdownButtonTemplate}"/>
        </Style.Setters>
    </Style>

    <Style x:Key="SearchMruListBoxStyle" TargetType="{x:Type control:SearchMruListBox}">
        <Style.Setters>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.PopupItemsListBackgroundGradientBegin}}"/>
            <Setter Property="Visibility" Value="{Binding Path=SearchSettings.SearchUseMru, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            <Setter Property="MinHeight" Value="95"/>
        </Style.Setters>
        <Style.Triggers>
            <DataTrigger Value="true" Binding="{Binding Path=SearchMruItems.Count, Converter={StaticResource IsEqualConverter}, ConverterParameter={}}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=SearchMruItems.Count, Converter={StaticResource IsEqualConverter}, ConverterParameter={StaticResource IntZero}}"
                               Value="true"/>
                    <!--<Condition Binding="{Binding Path=SearchOptions.Count, Converter={StaticResource IsEqualConverter}, ConverterParameter={vsui:Int32 0}}"
                               Value="true"/>
                    <Condition Binding="{Binding Path=SearchFilters.Count, Converter={StaticResource IsEqualConverter}, ConverterParameter={vsui:Int32 0}}"
                               Value="true"/>-->
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="MinHeight" Value="95"/>
                    <Setter Property="Visibility" Value="{Binding Path=SearchSettings.SearchUseMru, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="SearchMruListBoxItemTemplate" TargetType="{x:Type control:SearchMruListBoxItem}">
        <Grid x:Name="Placement">
            <Border x:Name="Border" Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
                <TextBlock Text="{TemplateBinding Content}" TextWrapping="NoWrap"
                           TextTrimming="CharacterEllipsis" Margin="{TemplateBinding Padding}"
                           utilities:TextToolTipService.AutoShowToolTipWhenObscured="True"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                           utilities:TextToolTipService.ToolTipText="{Binding Text, RelativeSource={RelativeSource Self}}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="control:SearchPopupNavigationService.IsCurrentLocation" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.PopupControlMouseOverBorder}}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.PopupControlMouseOverBackgroundGradientEnd}}"/>
                <Setter TargetName="Placement" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.PopupMouseOverItemText}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SearchMruListBoxItemStyle" TargetType="{x:Type control:SearchMruListBoxItem}">
        <Style.Setters>
            <Setter Property="Template" Value="{StaticResource SearchMruListBoxItemTemplate}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.PopupItemText}}"/>
            <Setter Property="control:SearchPopupNavigationService.IsNavigable" Value="True"/>
            <Setter Property="Content" Value="{Binding Mode=OneWay, Path=Text}"/>
            <Setter Property="Margin" Value="2,0,2,0"/>
            <Setter Property="Padding" Value="2,1,2,1"/>
            <Setter Property="InputMethod.IsInputMethodSuspended" Value="True"/>
        </Style.Setters>
    </Style>


    <ControlTemplate x:Key="SearchPopupContentTemplate" TargetType="{x:Type UserControl}">
        <Border x:Name="Border" BorderThickness="1" Background="{DynamicResource {x:Static themes:SearchControlColors.PopupBorder}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <control:SearchMruListBox Grid.Row="0" Style="{StaticResource SearchMruListBoxStyle}" 
                                          ItemContainerStyle="{StaticResource SearchMruListBoxItemStyle}"
                                          ItemsSource="{Binding SearchMruItems}"/>
                <StackPanel Grid.Row="1">

                </StackPanel>
                <StackPanel Grid.Row="2">

                </StackPanel>
            </Grid>
        </Border>
    </ControlTemplate>


    <ControlTemplate x:Key="SearchControlTemplate" TargetType="{x:Type control:SearchControl}">
        <Grid x:Name="Placement" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="18"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="3"
                    BorderBrush="{DynamicResource {x:Static themes:SearchControlColors.UnfocusedBorder}}"
                    Background="{DynamicResource {x:Static themes:SearchControlColors.Unfocused}}"
                    BorderThickness="{Binding Path=SearchSettings.ControlBorderThickness}"/>
            <TextBlock x:Name="PART_SearchWatermark" Margin="5,1,5,1"
                       Style="{StaticResource SearchWatermarkStyle}" Text="{Binding Path=SearchSettings.SearchWatermark}"/>
            <control:SearchTextBox x:Name="PART_SearchBox" Grid.Row="0" Grid.Column="0" Padding="4,1,4,1"
                                   Style="{StaticResource SearchBoxStyle}"  
                                   FocusRoot="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                   Text="{Binding Path=SearchText, Mode=TwoWay, NotifyOnSourceUpdated=true, UpdateSourceTrigger=PropertyChanged}"/>
            <Button x:Name="PART_SearchButton" Width="17" Grid.Row="0" Grid.Column="1"
                    Style="{StaticResource SearchButtonStyle}"
                    BorderThickness="{Binding Path=SearchSettings.ControlBorderThickness, Converter={StaticResource SearchControlThicknessConverter}, ConverterParameter={x:Static converters:BorderType.TopBottom}}"/>
            <Border x:Name="PART_SearchDropdownSeparator" Grid.Row="0" Grid.Column="2" BorderThickness="1,0,0,0"
                    BorderBrush="{DynamicResource {x:Static themes:SearchControlColors.DropDownSeparator}}">
                <ToggleButton x:Name="PART_SearchDropdownButton"
                              Style="{StaticResource SearchDropdownButtonStyle}"
                          Visibility="{Binding Path=HasPopup ,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                              BorderThickness="{Binding Path=SearchSettings.ControlBorderThickness, Converter={StaticResource SearchControlThicknessConverter}, ConverterParameter={x:Static converters:BorderType.TopRightBottom}}"
                              IsChecked="{Binding Path=IsPopupOpen, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Border>
            <controls:LiveTextBlock x:Name="PART_LiveSearchTextBlock" Visibility="Collapsed">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource LiveSearchTextConverter}">
                        <Binding Path="SearchText"/>
                        <Binding Path="SearchStatus"/>
                        <Binding Path="SearchResultsCount"/>
                    </MultiBinding>
                </TextBlock.Text>
            </controls:LiveTextBlock>
            <controls:SmoothProgressBar x:Name="PART_SearchProgressBar" Grid.ColumnSpan="3" Focusable="False" Visibility="Collapsed" 
                                        Style="{StaticResource ProgressBarStyle}"
                                        TargetValue="{Binding Path=SearchProgress}"
                                        IsIndeterminate="{Binding Mode=OneTime, Path=SearchSettings.SearchProgressType, Converter={StaticResource SearchProgressTypeConverter}}"
                                        Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="2"/>
            <control:SearchControlPopup x:Name="PART_SearchPopup" Grid.Row="0" Grid.ColumnSpan="3" AllowsTransparency="True" Placement="Bottom"
                                          StaysOpen="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                          Width="{Binding ElementName=Placement, Path=ActualWidth}" PlacementTarget="{Binding ElementName=PART_SearchBox}"
                                          Visibility="{Binding Path=HasPopup, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                          IsOpen="{Binding Path=IsPopupOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <windows:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                    <UserControl x:Name="PART_SearchPopupContent"
                                 Template="{StaticResource SearchPopupContentTemplate}"/>
                </windows:SystemDropShadowChrome>
            </control:SearchControlPopup>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Value="{x:Static control:SearchStatus.InProgress}"
                         Binding="{Binding Path=SearchStatus}">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.SearchActiveBackground}}"/>
                <Setter TargetName="PART_SearchBox" Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.SearchActiveBackgroundText}}"/>
            </DataTrigger>
            <DataTrigger Value="{x:Static control:SearchStatus.Complete}"
                         Binding="{Binding Path=SearchStatus}">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.SearchActiveBackground}}"/>
                <Setter TargetName="PART_SearchBox" Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.SearchActiveBackgroundText}}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=PART_SearchPopup, Path=(Popup.HasDropShadow)}"
                               Value="True"/>
                    <Condition Binding="{Binding Source={x:Static vsui:EnvironmentRenderCapabilities.Current}, Path=AreGradientsAllowed}"
                               Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                <Setter TargetName="Shdw" Property="Color" Value="{DynamicResource {x:Static themes:EnvironmentColors.DropShadowBackground}}"/>
            </MultiDataTrigger>
            <DataTrigger Value="False" Binding="{Binding Source={x:Static vsui:EnvironmentRenderCapabilities.Current}, Path=AreAnimationsAllowed}">
                <Setter TargetName="PART_SearchPopup" Property="Popup.PopupAnimation" Value="None"/>
            </DataTrigger>
            <DataTrigger Value="False" Binding="{Binding ElementName=PART_SearchBox, Path=Text, Converter={StaticResource IsNullOrEmptyConverter}}">
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_SearchWatermark"/>
            </DataTrigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="False">
                <Setter TargetName="PART_SearchBox" Property="CaretBrush" Value="Transparent"/>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=SearchSettings.SearchWatermarkWhenFocused}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_SearchWatermark" Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
                <Setter TargetName="PART_SearchWatermark" Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseOverWatermarkText}}"/>
                <Setter TargetName="PART_SearchDropdownButton" Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.FocusedDropDownButton}}"/>
                <Setter TargetName="PART_SearchDropdownButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.FocusedDropDownButtonBorder}}"/>
                <Setter TargetName="PART_SearchDropdownButton" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.FocusedDropDownButtonGlyph}}"/>
                <Setter TargetName="PART_SearchDropdownSeparator" Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.FocusedDropDownSeparator}}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.FocusedBorder}}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.FocusedBackground}}"/>
                <Setter TargetName="PART_SearchBox" Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.FocusedBackgroundText}}"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="PART_SearchWatermark" Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseOverWatermarkText}}"/>
                <Setter TargetName="PART_SearchDropdownButton" Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseOverDropDownButton}}"/>
                <Setter TargetName="PART_SearchDropdownButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseOverDropDownButtonBorder}}"/>
                <Setter TargetName="PART_SearchDropdownButton" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseOverDropDownButtonGlyph}}"/>
                <Setter TargetName="PART_SearchDropdownSeparator" Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseOverDropDownSeparator}}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseOverBorder}}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseOverBackground}}"/>
                <Setter TargetName="PART_SearchBox" Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.MouseOverBackgroundText}}"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="PART_SearchWatermark" Property="Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.DisabledText}}"/>
                <Setter TargetName="PART_SearchBox" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.DisabledText}}"/>
                <Setter TargetName="PART_SearchDropdownButton" Property="Background" Value="Transparent"/>
                <Setter TargetName="PART_SearchDropdownButton" Property="BorderBrush" Value="Transparent"/>
                <Setter TargetName="PART_SearchDropdownButton" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:SearchControlColors.DisabledDownButtonGlyph}}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:SearchControlColors.DisabledBorder}}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:SearchControlColors.Disabled}}"/>
            </Trigger>
            <Trigger Property="HasPopup" Value="False">
                <Setter TargetName="PART_SearchButton" Property="Width" Value="18"/>
            </Trigger>
            <DataTrigger Value="True" Binding="{Binding Converter={StaticResource NotNullConverter}}">
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type control:SearchControl}">
        <Style.Setters>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="MinWidth" Value="{Binding Path=SearchSettings.ControlMinWidth}"/>
            <Setter Property="MaxWidth" Value="{Binding Path=SearchSettings.ControlMaxWidth}"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource SearchControlTemplate}"/>
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        </Style.Setters>
    </Style>

</ResourceDictionary>