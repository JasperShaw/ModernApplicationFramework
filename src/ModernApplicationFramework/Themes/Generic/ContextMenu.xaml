<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:colors="clr-namespace:ModernApplicationFramework.Core.Themes"
                    xmlns:basics="clr-namespace:ModernApplicationFramework.Basics"
                    xmlns:menu="clr-namespace:ModernApplicationFramework.Controls.Menu"
                    xmlns:windows="clr-namespace:ModernApplicationFramework.Controls.Windows"
                    xmlns:converters="clr-namespace:ModernApplicationFramework.Utilities.Converters;assembly=ModernApplicationFramework.Utilities"
                    xmlns:imaging="clr-namespace:ModernApplicationFramework.Utilities.Imaging;assembly=ModernApplicationFramework.Utilities"
                    xmlns:extensions="clr-namespace:ModernApplicationFramework.Controls.Extensions"
                    xmlns:general="clr-namespace:ModernApplicationFramework.Core.Converters.General">

    <converters:BrushToColorConverter x:Key="BrushToColorConverter"/>
    <general:NotNullConverter x:Key="NotNullConverter"/>

    <Geometry x:Key="Checkmark">
        F1 M 5,11 L 3,7 L 5,7 L 6,9 L 9,3 L 11,3 L 7,11 L 5,11 Z
    </Geometry>

    <ControlTemplate x:Key="MenuItemTemplate" TargetType="{x:Type menu:ContextMenuItem}">
        <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Control.Background}"
              MinHeight="22" MaxWidth="{x:Static menu:MenuItem.MaxMenuWidth}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="26" SharedSizeGroup="MenuItemIconColumnGroup"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="37"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                <ColumnDefinition Width="17"/>
            </Grid.ColumnDefinitions>

            <imaging:ImageThemingUtilities.ImageBackgroundColor>
                <Binding Path="Background" ElementName="IconBorder" Converter="{StaticResource BrushToColorConverter}"/>
            </imaging:ImageThemingUtilities.ImageBackgroundColor>

            <Rectangle x:Name="Bg" Stroke="Transparent" Fill="Transparent" StrokeThickness="0" Grid.ColumnSpan="5"/>
            <Border x:Name="IconBorder" VerticalAlignment="Center" HorizontalAlignment="Center" BorderThickness="1" Padding="1"
                    Margin="2,0,2,0" Grid.Column="0">
                <ContentPresenter x:Name="Icon" Width="16" Height="16" VerticalAlignment="Center" ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Visible"/>
            </Border>
            <Border x:Name="GlyphPanel" Background="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarSelectedIcon}}" 
                    BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarCheckBox}}" BorderThickness="0" 
                    Margin="2,0,2,0" Visibility="Collapsed" Width="18" Height="18" Grid.Column="0">
                <Path x:Name="Glyph" Width="16" Height="16" Fill="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarCheckBox}}"
                      FlowDirection="LeftToRight" Data="{StaticResource Checkmark}"/>
            </Border>
            <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="8,1,0,1" VerticalAlignment="Center"
                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon">
                        <Condition.Value>
                            <x:NullExtension/>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="IsChecked" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="True">
                        <Condition.Binding>
                            <Binding Path="Icon" RelativeSource="{RelativeSource Self}" Converter="{StaticResource NotNullConverter}"/>
                        </Condition.Binding>
                    </Condition>
                    <Condition Value="True">
                        <Condition.Binding>
                            <Binding Path="IsChecked" RelativeSource="{RelativeSource Self}"/>
                        </Condition.Binding>
                    </Condition>
                    <Condition Value="False">
                        <Condition.Binding>
                            <Binding Path="IsHighlighted" RelativeSource="{RelativeSource Self}"/>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="IconBorder"
                        Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarSelected}}"
                        Property="Border.Background"/>
                <Setter TargetName="IconBorder"
                        Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarSelectedBorder}}"
                        Property="Border.BorderBrush"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="True">
                        <Condition.Binding>
                            <Binding Path="Icon" RelativeSource="{RelativeSource Self}" Converter="{StaticResource NotNullConverter}"/>
                        </Condition.Binding>
                    </Condition>
                    <Condition Value="True">
                        <Condition.Binding>
                            <Binding Path="IsChecked" RelativeSource="{RelativeSource Self}"/>
                        </Condition.Binding>
                    </Condition>
                    <Condition Value="True">
                        <Condition.Binding>
                            <Binding Path="IsHighlighted" RelativeSource="{RelativeSource Self}"/>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="IconBorder"
                        Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarHoverOverSelectedIcon}}"
                        Property="Border.Background"/>
                <Setter TargetName="IconBorder"
                        Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarHoverOverSelectedIconBorder}}"
                        Property="Border.BorderBrush"/>
            </MultiDataTrigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="true">
                <Setter TargetName="Bg" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuItemMouseOver}}"
                        Property="Shape.Fill"/>
                <Setter TargetName="Bg"
                        Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuItemMouseOverBorder}}"
                        Property="Shape.Stroke"/>
                <Setter Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuItemMouseOverText}}"
                        Property="TextElement.Foreground"/>
                <Setter TargetName="GlyphPanel" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarHoverOverSelectedIcon}}"
                        Property="Border.Background"/>
                <Setter TargetName="GlyphPanel" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarCheckBoxMouseOver}}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="Glyph" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarCheckBoxMouseOver}}"
                        Property="Shape.Fill"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarTextInactive}}"
                        Property="Control.Foreground"/>
                <Setter TargetName="GlyphPanel" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarSelectedIconDisabled}}"
                        Property="Border.Background"/>
                <Setter TargetName="GlyphPanel" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarCheckBoxDisabled}}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="Glyph" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarCheckBoxDisabled}}"
                        Property="Shape.Fill"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type menu:ContextMenu}" BasedOn="{StaticResource {x:Type ContextMenu}}">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarTextActive}}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="PopupAnimation" Value="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"/>
        <Setter Property="extensions:MenuBehavior.UpdateCommandUiItems" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type menu:ContextMenu}">
                    <windows:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                        <Grid Background="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuIconBackground}}">
                            <ScrollViewer x:Name="PART_ScrollViewer" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                <Grid Background="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuBackgroundGradientBegin}}"
                                      RenderOptions.ClearTypeHint="Enabled">
                                    <imaging:ImageThemingUtilities.ImageBackgroundColor>
                                        <Binding Path="Background" ElementName="PART_IconBackground" Converter="{StaticResource BrushToColorConverter}"/>
                                    </imaging:ImageThemingUtilities.ImageBackgroundColor>
                                    <Border x:Name="PART_IconBackground" Width="28"
                                            Background="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuIconBackground}}"
                                            HorizontalAlignment="Left"/>
                                    <ItemsPresenter KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    Margin="3" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                            <Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuBorder}}"/>
                        </Grid>
                    </windows:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="False">
                            <DataTrigger.Binding>
                                <Binding Source="{x:Static basics:EnvironmentRenderCapabilities.Current}" Path="AreAnimationsAllowed"/>
                            </DataTrigger.Binding>
                            <Setter Property="PopupAnimation" Value="None"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <Binding Path="HasDropShadow" RelativeSource="{RelativeSource Self}"/>
                                    </Condition.Binding>
                                </Condition>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <Binding Source="{x:Static basics:EnvironmentRenderCapabilities.Current}" Path="AreGradientsAllowed"/>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shdw" Value="{DynamicResource {x:Static colors:EnvironmentColors.DropShadowBackground}}" Property="windows:SystemDropShadowChrome.Color"/>
                        </MultiDataTrigger>
                        <DataTrigger Value="False">
                            <DataTrigger.Binding>
                                <Binding Source="{x:Static basics:EnvironmentRenderCapabilities.Current}" Path="AreAnimationsAllowed"/>
                            </DataTrigger.Binding>
                            <Setter Property="Popup.PopupAnimation" Value="None"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type menu:ContextMenuItem}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type menu:ContextMenu}}}"/>
        <Setter Property="Template" Value="{StaticResource MenuItemTemplate}"/>
    </Style>
    
</ResourceDictionary>