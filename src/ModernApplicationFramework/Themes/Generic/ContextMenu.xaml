<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:basics="clr-namespace:ModernApplicationFramework.Basics"
                    xmlns:colors="clr-namespace:ModernApplicationFramework.Core.Themes"
                    xmlns:converters="clr-namespace:ModernApplicationFramework.Utilities.Converters;assembly=ModernApplicationFramework.Utilities"
                    xmlns:extensions="clr-namespace:ModernApplicationFramework.Controls.Extensions"
                    xmlns:general="clr-namespace:ModernApplicationFramework.Core.Converters.General"
                    xmlns:imaging="clr-namespace:ModernApplicationFramework.Imaging;assembly=ModernApplicationFramework.Imaging"
                    xmlns:menu="clr-namespace:ModernApplicationFramework.Controls.Menu"
                    xmlns:windows="clr-namespace:ModernApplicationFramework.Controls.Windows">

    <converters:BrushToColorConverter x:Key="BrushToColorConverter" />
    <general:NotNullConverter x:Key="NotNullConverter" />

    <Geometry x:Key="Checkmark">
        F1 M 5,11 L 3,7 L 5,7 L 6,9 L 9,3 L 11,3 L 7,11 L 5,11 Z
    </Geometry>

    <ControlTemplate x:Key="MenuItemTemplate" TargetType="{x:Type menu:ContextMenuItem}">
        <Grid MinHeight="22"
              MaxWidth="{x:Static menu:MenuItem.MaxMenuWidth}"
              Background="{TemplateBinding Control.Background}"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="26" SharedSizeGroup="MenuItemIconColumnGroup" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="37" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>

            <imaging:ImageThemingUtilities.ImageBackgroundColor>
                <Binding Converter="{StaticResource BrushToColorConverter}"
                         ElementName="IconBorder"
                         Path="Background" />
            </imaging:ImageThemingUtilities.ImageBackgroundColor>

            <Rectangle x:Name="Bg"
                       Grid.ColumnSpan="5"
                       Fill="Transparent"
                       Stroke="Transparent"
                       StrokeThickness="0" />
            <Border x:Name="IconBorder"
                    Grid.Column="0"
                    Margin="2,0,2,0"
                    Padding="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    BorderThickness="1">
                <ContentPresenter x:Name="Icon"
                                  Width="16"
                                  Height="16"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  Visibility="Visible" />
            </Border>
            <Border x:Name="GlyphPanel"
                    Grid.Column="0"
                    Width="18"
                    Height="18"
                    Margin="2,0,2,0"
                    Background="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarSelectedIcon}}"
                    BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarCheckBox}}"
                    BorderThickness="0"
                    Visibility="Collapsed">
                <Path x:Name="Glyph"
                      Width="16"
                      Height="16"
                      Data="{StaticResource Checkmark}"
                      Fill="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarCheckBox}}"
                      FlowDirection="LeftToRight" />
            </Border>
            <ContentPresenter Grid.Column="1"
                              Margin="8,1,0,1"
                              VerticalAlignment="Center"
                              ContentSource="Header"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon">
                        <Condition.Value>
                            <x:NullExtension />
                        </Condition.Value>
                    </Condition>
                    <Condition Property="IsChecked" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="True">
                        <Condition.Binding>
                            <Binding Converter="{StaticResource NotNullConverter}"
                                     Path="Icon"
                                     RelativeSource="{RelativeSource Self}" />
                        </Condition.Binding>
                    </Condition>
                    <Condition Value="True">
                        <Condition.Binding>
                            <Binding Path="IsChecked" RelativeSource="{RelativeSource Self}" />
                        </Condition.Binding>
                    </Condition>
                    <Condition Value="False">
                        <Condition.Binding>
                            <Binding Path="IsHighlighted" RelativeSource="{RelativeSource Self}" />
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="IconBorder" Property="Border.Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarSelected}}" />
                <Setter TargetName="IconBorder" Property="Border.BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarSelectedBorder}}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="True">
                        <Condition.Binding>
                            <Binding Converter="{StaticResource NotNullConverter}"
                                     Path="Icon"
                                     RelativeSource="{RelativeSource Self}" />
                        </Condition.Binding>
                    </Condition>
                    <Condition Value="True">
                        <Condition.Binding>
                            <Binding Path="IsChecked" RelativeSource="{RelativeSource Self}" />
                        </Condition.Binding>
                    </Condition>
                    <Condition Value="True">
                        <Condition.Binding>
                            <Binding Path="IsHighlighted" RelativeSource="{RelativeSource Self}" />
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="IconBorder" Property="Border.Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarHoverOverSelectedIcon}}" />
                <Setter TargetName="IconBorder" Property="Border.BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarHoverOverSelectedIconBorder}}" />
            </MultiDataTrigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="true">
                <Setter TargetName="Bg" Property="Shape.Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuItemMouseOver}}" />
                <Setter TargetName="Bg" Property="Shape.Stroke" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuItemMouseOverBorder}}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuItemMouseOverText}}" />
                <Setter TargetName="GlyphPanel" Property="Border.Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarHoverOverSelectedIcon}}" />
                <Setter TargetName="GlyphPanel" Property="Border.BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarCheckBoxMouseOver}}" />
                <Setter TargetName="Glyph" Property="Shape.Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarCheckBoxMouseOver}}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarTextInactive}}" />
                <Setter TargetName="GlyphPanel" Property="Border.Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarSelectedIconDisabled}}" />
                <Setter TargetName="GlyphPanel" Property="Border.BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarCheckBoxDisabled}}" />
                <Setter TargetName="Glyph" Property="Shape.Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarCheckBoxDisabled}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style BasedOn="{StaticResource {x:Type ContextMenu}}" TargetType="{x:Type menu:ContextMenu}">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarTextActive}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="PopupAnimation" Value="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" />
        <Setter Property="extensions:MenuBehavior.UpdateCommandUiItems" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type menu:ContextMenu}">
                    <windows:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                        <Grid Background="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuIconBackground}}">
                            <ScrollViewer x:Name="PART_ScrollViewer" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                <Grid Background="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuBackgroundGradientBegin}}" RenderOptions.ClearTypeHint="Enabled">
                                    <imaging:ImageThemingUtilities.ImageBackgroundColor>
                                        <Binding Converter="{StaticResource BrushToColorConverter}"
                                                 ElementName="PART_IconBackground"
                                                 Path="Background" />
                                    </imaging:ImageThemingUtilities.ImageBackgroundColor>
                                    <Border x:Name="PART_IconBackground"
                                            Width="28"
                                            HorizontalAlignment="Left"
                                            Background="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuIconBackground}}" />
                                    <ItemsPresenter Margin="3"
                                                    Grid.IsSharedSizeScope="True"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                            <Border BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.CommandBarMenuBorder}}" BorderThickness="1" />
                        </Grid>
                    </windows:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="False">
                            <DataTrigger.Binding>
                                <Binding Path="AreAnimationsAllowed" Source="{x:Static basics:EnvironmentRenderCapabilities.Current}" />
                            </DataTrigger.Binding>
                            <Setter Property="PopupAnimation" Value="None" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <Binding Path="HasDropShadow" RelativeSource="{RelativeSource Self}" />
                                    </Condition.Binding>
                                </Condition>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <Binding Path="AreGradientsAllowed" Source="{x:Static basics:EnvironmentRenderCapabilities.Current}" />
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="windows:SystemDropShadowChrome.Color" Value="{DynamicResource {x:Static colors:EnvironmentColors.DropShadowBackground}}" />
                        </MultiDataTrigger>
                        <DataTrigger Value="False">
                            <DataTrigger.Binding>
                                <Binding Path="AreAnimationsAllowed" Source="{x:Static basics:EnvironmentRenderCapabilities.Current}" />
                            </DataTrigger.Binding>
                            <Setter Property="Popup.PopupAnimation" Value="None" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type menu:ContextMenuItem}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type menu:ContextMenu}}}" />
        <Setter Property="Template" Value="{StaticResource MenuItemTemplate}" />
    </Style>

</ResourceDictionary>