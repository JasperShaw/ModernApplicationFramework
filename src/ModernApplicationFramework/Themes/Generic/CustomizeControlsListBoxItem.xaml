<listBoxes:CustomizeControlsListBoxItem x:Class="ModernApplicationFramework.Themes.Generic.CustomizeControlsListBoxItem"
                                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                        xmlns:accessKey="clr-namespace:ModernApplicationFramework.Core.Converters.AccessKey"
                                        xmlns:converters="clr-namespace:ModernApplicationFramework.Core.Converters"
                                        xmlns:converters1="clr-namespace:ModernApplicationFramework.Imaging.Converters;assembly=ModernApplicationFramework.Imaging"
                                        xmlns:imaging="clr-namespace:ModernApplicationFramework.Imaging;assembly=ModernApplicationFramework.Imaging"
                                        xmlns:listBoxes="clr-namespace:ModernApplicationFramework.Controls.ListBoxes"
                                        xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes"
                                        xmlns:utilities="clr-namespace:ModernApplicationFramework.Utilities;assembly=ModernApplicationFramework.Utilities">
    <FrameworkElement.Resources>
        <accessKey:AccessKeyRemovingConverter x:Key="AccessKeyRemovingConverter" />
        <accessKey:AccessKeyUnderliningConverter x:Key="AccessKeyUnderliningConverter" />
        <converters:IsSplitButtonModelConverter x:Key="IsSplitButtonModelConverter" />
        <converters1:MonikerSourceToImageConverter x:Key="MonikerSourceToImageConverter" />
        <Geometry x:Key="RightArrow">
            M 0,0 L 4,3.5 L 0,7 Z
        </Geometry>
        <Geometry x:Key="DownArrow">
            M 0 0 L 2.3333 2.6666 L 4.6666 0 Z
        </Geometry>
        <Geometry x:Key="Checkmark">
            F1 M 5,11 L 3,7 L 5,7 L 6,9 L 9,3 L 11,3 L 7,11 L 5,11 Z
        </Geometry>
        <Style x:Key="CustomizeControlsComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="ClickMode" Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="Transparent">
                            <Border x:Name="Border"
                                    Width="12"
                                    HorizontalAlignment="Right"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,0,0,0"
                                    SnapsToDevicePixels="True">
                                <Path Name="Arrow"
                                      Margin="0,1,0,0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="{StaticResource DownArrow}"
                                      Fill="{TemplateBinding TextElement.Foreground}"
                                      SnapsToDevicePixels="True" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="CustomizeControlsComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Border x:Name="Border"
                    Background="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxBackground}}"
                    BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxBorder}}"
                    BorderThickness="1">
                <Grid x:Name="Placement" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ToggleButton x:Name="ToggleButton"
                                  Grid.Column="1"
                                  Background="Transparent"
                                  BorderBrush="Transparent"
                                  Foreground="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxGlyph}}"
                                  Style="{StaticResource CustomizeControlsComboBoxToggleButton}">
                        <ToggleButton.IsChecked>
                            <Binding Mode="TwoWay"
                                     Path="IsDropDownOpen"
                                     RelativeSource="{RelativeSource TemplatedParent}" />
                        </ToggleButton.IsChecked>
                    </ToggleButton>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter TargetName="ToggleButton" Property="Control.BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxButtonMouseOverSeparator}}" />
                    <Setter TargetName="ToggleButton" Property="Control.Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxButtonMouseOverBackground}}" />
                    <Setter TargetName="ToggleButton" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxMouseOverGlyph}}" />
                    <Setter TargetName="Border" Property="Border.BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxMouseOverBorder}}" />
                    <Setter TargetName="Border" Property="Border.Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxMouseOverBackgroundBegin}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="CustomizeControlsListBoxItem.SeparatorTemplate" TargetType="{x:Type listBoxes:CustomizeControlsListBoxItem}">
            <Grid MinHeight="22"
                  Background="{TemplateBinding Background}"
                  SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="Bg"
                           Grid.ColumnSpan="2"
                           Fill="Transparent"
                           Stroke=" Transparent"
                           StrokeThickness="0" />
                <Rectangle Grid.Column="1"
                           Height="1"
                           Margin="4,1,1,1"
                           Fill="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarToolBarSeparator}}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                    <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOver}}" />
                    <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverBorder}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <ControlTemplate x:Key="CustomizeControlsListBoxItem.ButtonTemplate" TargetType="{x:Type listBoxes:CustomizeControlsListBoxItem}">
            <Grid MinHeight="22"
                  MaxWidth="660"
                  Background="{TemplateBinding Control.Background}"
                  SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="Bg"
                           Grid.ColumnSpan="2"
                           Fill="Transparent"
                           Stroke="Transparent"
                           StrokeThickness="0" />
                <ContentPresenter x:Name="Icon"
                                  Grid.Column="0"
                                  Width="16"
                                  Height="16"
                                  Margin="2,1,4,1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  Visibility="Collapsed" />
                <Border x:Name="GlyphPanel"
                        x:Uid="Border_6"
                        Grid.Column="0"
                        Width="18"
                        Height="18"
                        Margin="1"
                        Background="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarSelectedIcon}}"
                        BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBox}}"
                        BorderThickness="2"
                        Visibility="Collapsed">
                    <Path x:Name="Glyph"
                          Width="16"
                          Height="16"
                          Data="{StaticResource Checkmark}"
                          Fill="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBox}}"
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter Grid.Column="1"
                                  Margin="8,1,0,1"
                                  VerticalAlignment="Center"
                                  ContentSource="Content"
                                  RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Grid>
            <ControlTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Flags.Pict}" Value="False" />
                        <Condition Binding="{Binding Flags.TextOnly}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Visible" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Flags.Pict}" Value="True" />
                        <Condition Binding="{Binding Flags.TextOnly}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Visible" />
                </MultiDataTrigger>
                <Trigger Property="listBoxes:CustomizeControlsListBoxItem.Icon">
                    <Trigger.Value>
                        <x:NullExtension />
                    </Trigger.Value>
                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="listBoxes:CustomizeControlsListBoxItem.IsChecked" Value="true">
                    <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="ListBoxItem.IsSelected" Value="true">
                    <Setter TargetName="Bg" Property="Shape.Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOver}}" />
                    <Setter TargetName="Bg" Property="Shape.Stroke" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverBorder}}" />
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverText}}" />
                    <Setter TargetName="GlyphPanel" Property="Border.Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarHoverOverSelectedIcon}}" />
                    <Setter TargetName="GlyphPanel" Property="Border.BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBoxMouseOver}}" />
                    <Setter TargetName="Glyph" Property="Shape.Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBoxMouseOver}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="CustomizeControlsListBoxItem.MenuTemplate" TargetType="{x:Type listBoxes:CustomizeControlsListBoxItem}">
            <Grid MinHeight="22"
                  MaxWidth="660"
                  Background="{TemplateBinding Control.Background}"
                  SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="Bg"
                           Grid.ColumnSpan="3"
                           Fill="Transparent"
                           Stroke="Transparent"
                           StrokeThickness="0" />
                <ContentPresenter x:Name="Icon"
                                  Grid.Column="0"
                                  Width="16"
                                  Height="16"
                                  Margin="2,1,4,1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <ContentPresenter Grid.Column="1"
                                  Margin="8,1,0,1"
                                  VerticalAlignment="Center"
                                  ContentSource="Content"
                                  RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Path Grid.Column="2"
                      Margin="4,0,0,0"
                      VerticalAlignment="Center"
                      Data="{StaticResource RightArrow}"
                      Fill="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuSubmenuGlyph}}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="listBoxes:CustomizeControlsListBoxItem.Icon">
                    <Trigger.Value>
                        <x:NullExtension />
                    </Trigger.Value>
                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="ListBoxItem.IsSelected" Value="true">
                    <Setter TargetName="Bg" Property="Shape.Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOver}}" />
                    <Setter TargetName="Bg" Property="Shape.Stroke" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverBorder}}" />
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverText}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="CustomizeControlsListBoxItem.MenuControllerTemplate" TargetType="{x:Type listBoxes:CustomizeControlsListBoxItem}">
            <Grid MinHeight="22"
                  MaxWidth="660"
                  Background="{TemplateBinding Control.Background}"
                  SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="1" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="Bg"
                           Grid.ColumnSpan="4"
                           Fill="Transparent"
                           Stroke="Transparent"
                           StrokeThickness="0" />
                <ContentPresenter x:Name="Icon"
                                  Grid.Column="0"
                                  Width="16"
                                  Height="16"
                                  Margin="2,1,4,1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <ContentPresenter Grid.Column="1"
                                  Margin="8,1,0,1"
                                  VerticalAlignment="Center"
                                  ContentSource="Content"
                                  RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Rectangle x:Name="DropDownSep"
                           Grid.Column="2"
                           Width="1"
                           HorizontalAlignment="Left"
                           Fill="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarSplitButtonSeparator}}" />
                <Path x:Name="Arrow"
                      Grid.Column="3"
                      Margin="4,0,0,0"
                      VerticalAlignment="Center"
                      Data="{StaticResource DownArrow}"
                      Fill="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuSubmenuGlyph}}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="listBoxes:CustomizeControlsListBoxItem.Icon">
                    <Trigger.Value>
                        <x:NullExtension />
                    </Trigger.Value>
                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="ListBoxItem.IsSelected" Value="true">
                    <Setter TargetName="Bg" Property="Shape.Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOver}}" />
                    <Setter TargetName="Bg" Property="Shape.Stroke" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverBorder}}" />
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverText}}" />
                    <Setter TargetName="DropDownSep" Property="Shape.Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.DropDownMouseOverGlyph}}" />
                    <Setter TargetName="Arrow" Property="Shape.Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.DropDownMouseOverGlyph}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="CustomizeControlsListBoxItem.ComboBoxTemplate" TargetType="{x:Type listBoxes:CustomizeControlsListBoxItem}">
            <Grid MinHeight="22"
                  MaxWidth="660"
                  Background="{TemplateBinding Control.Background}"
                  SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="Bg"
                           Grid.ColumnSpan="3"
                           Fill="Transparent"
                           Stroke="Transparent"
                           StrokeThickness="0" />
                <ContentPresenter x:Name="Icon"
                                  Width="16"
                                  Height="16"
                                  Margin="2,1,4,1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Border x:Name="GlyphPanel"
                        Width="18"
                        Height="18"
                        Margin="1"
                        Background="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarSelectedIcon}}"
                        BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBox}}"
                        BorderThickness="2"
                        Visibility="Collapsed">
                    <Path x:Name="Glyph"
                          Width="16"
                          Height="16"
                          Data="{StaticResource Checkmark}"
                          Fill="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBox}}"
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter Grid.Column="1"
                                  Margin="8,1,0,1"
                                  VerticalAlignment="Center"
                                  ContentSource="Content"
                                  RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <ComboBox x:Name="ComboBox"
                          Grid.Column="2"
                          Margin="7,2,2,2"
                          IsEditable="false"
                          IsEnabled="false"
                          IsTabStop="false"
                          MaxDropDownHeight="0"
                          Template="{DynamicResource CustomizeControlsComboBoxTemplate}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="listBoxes:CustomizeControlsListBoxItem.Icon">
                    <Trigger.Value>
                        <x:NullExtension />
                    </Trigger.Value>
                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="listBoxes:CustomizeControlsListBoxItem.IsChecked" Value="true">
                    <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="ListBoxItem.IsSelected" Value="true">
                    <Setter TargetName="Bg" Property="Shape.Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOver}}" />
                    <Setter TargetName="Bg" Property="Shape.Stroke" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverBorder}}" />
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverText}}" />
                    <Setter TargetName="GlyphPanel" Property="Border.Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarHoverOverSelectedIcon}}" />
                    <Setter TargetName="GlyphPanel" Property="Border.BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBoxMouseOver}}" />
                    <Setter TargetName="Glyph" Property="Shape.Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBoxMouseOver}}" />
                    <Setter TargetName="ComboBox" Property="UIElement.IsEnabled" Value="true" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="CommonCustomizeControlsListBoxItemStyleKey" TargetType="{x:Type listBoxes:CustomizeControlsListBoxItem}">
            <Setter Property="Content">
                <Setter.Value>
                    <Binding Converter="{StaticResource AccessKeyUnderliningConverter}" Path="Name" />
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <x:NullExtension />
                </Setter.Value>
            </Setter>
            <Setter Property="AutomationProperties.Name">
                <Setter.Value>
                    <Binding Converter="{StaticResource AccessKeyRemovingConverter}" Path="Name" />
                </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarTextActive}}" />
        </Style>

        <Style x:Key="CommonCustomizeControlsListBoxItemWithImageStyleKey"
               BasedOn="{StaticResource CommonCustomizeControlsListBoxItemStyleKey}"
               TargetType="{x:Type listBoxes:CustomizeControlsListBoxItem}">
            <Setter Property="Icon">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource MonikerSourceToImageConverter}">
                        <Binding Path="ItemDefinition.ImageMonikerSource" />
                        <Binding Source="{x:Static utilities:Boxes.BooleanTrue}" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="{x:Static listBoxes:CustomizeControlsListBox.ButtonStyleKey}"
               BasedOn="{StaticResource CommonCustomizeControlsListBoxItemWithImageStyleKey}"
               TargetType="{x:Type listBoxes:CustomizeControlsListBoxItem}">
            <Setter Property="Template" Value="{DynamicResource CustomizeControlsListBoxItem.ButtonTemplate}" />
            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <Binding Converter="{StaticResource IsSplitButtonModelConverter}" />
                    </DataTrigger.Binding>
                    <Setter Property="Control.Template" Value="{DynamicResource CustomizeControlsListBoxItem.MenuControllerTemplate}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Static listBoxes:CustomizeControlsListBox.MenuStyleKey}"
               BasedOn="{StaticResource CommonCustomizeControlsListBoxItemStyleKey}"
               TargetType="{x:Type listBoxes:CustomizeControlsListBoxItem}">
            <Setter Property="Template" Value="{DynamicResource CustomizeControlsListBoxItem.MenuTemplate}" />
        </Style>

        <Style x:Key="{x:Static listBoxes:CustomizeControlsListBox.MenuControllerStyleKey}"
               BasedOn="{StaticResource CommonCustomizeControlsListBoxItemStyleKey}"
               TargetType="{x:Type listBoxes:CustomizeControlsListBoxItem}">
            <Setter Property="Template" Value="{DynamicResource CustomizeControlsListBoxItem.MenuControllerTemplate}" />
        </Style>


        <Style x:Key="{x:Static listBoxes:CustomizeControlsListBox.ComboBoxStyleKey}"
               BasedOn="{StaticResource CommonCustomizeControlsListBoxItemStyleKey}"
               TargetType="{x:Type listBoxes:CustomizeControlsListBoxItem}">
            <Setter Property="Template" Value="{DynamicResource CustomizeControlsListBoxItem.ComboBoxTemplate}" />
        </Style>


        <Style x:Key="{x:Static listBoxes:CustomizeControlsListBox.SeparatorStyleKey}" TargetType="{x:Type listBoxes:CustomizeControlsListBoxItem}">
            <Setter Property="Template" Value="{DynamicResource CustomizeControlsListBoxItem.SeparatorTemplate}" />
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <x:NullExtension />
                </Setter.Value>
            </Setter>
        </Style>

    </FrameworkElement.Resources>
</listBoxes:CustomizeControlsListBoxItem>

