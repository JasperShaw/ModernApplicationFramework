<UserControl x:Class="ModernApplicationFramework.Basics.CustomizeDialog.Views.ToolBarsPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:ModernApplicationFramework.Core.Converters"
             xmlns:controls="clr-namespace:ModernApplicationFramework.Controls"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:validationRules="clr-namespace:ModernApplicationFramework.Core.ValidationRules"
             xmlns:utilities="clr-namespace:ModernApplicationFramework.Controls.Utilities">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <utilities:ToolbarsCollectionViewSource x:Key="ToolBarsView" BoundPropertyName="Name" Source="{Binding Toolbars}">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="Name"/>
            </CollectionViewSource.SortDescriptions>
        </utilities:ToolbarsCollectionViewSource>

        <controls:ContextMenu x:Key="ModifySelectionToolBarsMenu">

            <FrameworkElement.Resources>
                <converters:TrimSpacesConverter x:Key="TrimSpacesConverter"/>
                <converters:DockLocationConverter x:Key="DockLocationConverter"/>
            </FrameworkElement.Resources>

            <controls:EditableMenuItem Header="_Name:">
                <controls:EditableMenuItem.Edit>
                    <Binding Path="Name" Mode="TwoWay" UpdateSourceTrigger="LostFocus"
                             Converter="{StaticResource TrimSpacesConverter}"/>
                </controls:EditableMenuItem.Edit>
                <UIElement.Visibility>
                    <Binding Mode="OneWay" Path="IsCustom" Converter="{StaticResource BooleanToVisibilityConverter}"/>
                </UIElement.Visibility>
                <controls:EditableMenuItem.ValidationRules>
                    <validationRules:ToolbarNameNotEmptyValidationRule/>
                    <validationRules:ToolbarNameUniqueValidationRule>
                        <validationRules:ToolbarNameUniqueValidationRule.DataContext>
                            <validationRules:ToolbarNameUniqueValidationRuleDataContext>
                                <validationRules:ToolbarNameUniqueValidationRuleDataContext.Toolbars>
                                    <Binding Source="{StaticResource ToolBarsView}"/>
                                </validationRules:ToolbarNameUniqueValidationRuleDataContext.Toolbars>
                            </validationRules:ToolbarNameUniqueValidationRuleDataContext>
                        </validationRules:ToolbarNameUniqueValidationRule.DataContext>
                    </validationRules:ToolbarNameUniqueValidationRule>
                </controls:EditableMenuItem.ValidationRules>
            </controls:EditableMenuItem>


            <controls:Separator>
                <UIElement.Visibility>
                    <Binding Mode="OneWay" Path="IsCustom" Converter="{StaticResource BooleanToVisibilityConverter}"/>
                </UIElement.Visibility>
            </controls:Separator>
            <controls:CheckedMenuItem Header="Dock location: _Top" Value="{x:Static Dock.Top}">
                <controls:CheckedMenuItem.Link>
                    <Binding Path="Position" Converter="{StaticResource DockLocationConverter}"/>
                </controls:CheckedMenuItem.Link>
            </controls:CheckedMenuItem>
            <controls:CheckedMenuItem Header="Dock location: _Left" Value="{x:Static Dock.Left}">
                <controls:CheckedMenuItem.Link>
                    <Binding Path="Position" Converter="{StaticResource DockLocationConverter}"/>
                </controls:CheckedMenuItem.Link>
            </controls:CheckedMenuItem>
            <controls:CheckedMenuItem Header="Dock location: _Right" Value="{x:Static Dock.Right}">
                <controls:CheckedMenuItem.Link>
                    <Binding Path="Position" Converter="{StaticResource DockLocationConverter}"/>
                </controls:CheckedMenuItem.Link>
            </controls:CheckedMenuItem>
            <controls:CheckedMenuItem Header="Dock location: _Bottom" Value="{x:Static Dock.Bottom}">
                <controls:CheckedMenuItem.Link>
                    <Binding Path="Position" Converter="{StaticResource DockLocationConverter}"/>
                </controls:CheckedMenuItem.Link>
            </controls:CheckedMenuItem>
        </controls:ContextMenu>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition x:Uid="RowDefinition_1" Height="Auto"/>
            <RowDefinition x:Uid="RowDefinition_2" Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Uid="ColumnDefinition_1" Width="*"/>
            <ColumnDefinition x:Uid="ColumnDefinition_2" Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="ToolBarsLabel" Margin="10,0,10,5" Padding="0" Content="Toolb_ars:" Grid.Row="0"/>
        <controls:CheckableListBox x:Name="ListBox" Margin="10,0,10,10" IsSynchronizedWithCurrentItem="True"
                                   IsTextSearchEnabled="True"
                                   TextSearch.TextPath="Text" Grid.Row="1" Grid.Column="0" SelectedIndex="0"
                                   ScrollViewer.CanContentScroll="False" SelectedItem="{Binding SelectedToolbarDefinition, Mode=TwoWay}">
            <ItemsControl.ItemsSource>
                <Binding Source="{StaticResource ToolBarsView}"/>
            </ItemsControl.ItemsSource>
            <controls:CheckableListBox.ToggleKeys>
                <x:StaticExtension Member="Key.Space"/>
            </controls:CheckableListBox.ToggleKeys>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="{x:Type controls:CheckableListBoxItem}">
                    <Setter Property="IsChecked" 
                            Value="{Binding Mode=TwoWay, Path=Visible}" />
                    <Setter Property="Content" Value="{Binding Mode=OneWay, Path=Name}" />
                    <Setter Property="Padding" Value="5,2,5,2" />
                </Style>
            </ItemsControl.ItemContainerStyle>
        </controls:CheckableListBox>
        <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch">
            <FrameworkElement.Resources>
                <converters:AndBooleanConverter x:Key="AndBooleanConverter"/>
                <converters:NotNullConverter x:Key="NotNullConverter"/>
            </FrameworkElement.Resources>
            <controls:DialogButton x:Name="NewToolBarButton" Content="_New..." Command="{Binding CreateNewToolbarCommand}"/>
            <controls:DialogButton Content="_Delete" Command="{Binding DeleteSelectedToolbarCommand}">
                <UIElement.IsEnabled>
                    <MultiBinding Converter="{StaticResource AndBooleanConverter}">
                        <Binding ElementName="ListBox" Path="SelectedItem"
                                 Converter="{StaticResource NotNullConverter}"/>
                        <Binding ElementName="ListBox" Path="SelectedItem.IsCustom" Mode="OneWay"/>
                    </MultiBinding>
                </UIElement.IsEnabled>
            </controls:DialogButton>
            <controls:DropDownDialogButton x:Name="DropDownButton" Content="_Modify Selection" DropDownMenu="{DynamicResource ModifySelectionToolBarsMenu}"
                                           Command="{Binding DropDownClickCommand}"/>
        </StackPanel>
    </Grid>
</UserControl>































































































































































































































































