<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes"
                    xmlns:internals="clr-namespace:ModernApplicationFramework.Controls.Internals"
                    xmlns:controls="clr-namespace:ModernApplicationFramework.Controls"
                    xmlns:accessKey="clr-namespace:ModernApplicationFramework.Core.Converters.AccessKey"
                    xmlns:general="clr-namespace:ModernApplicationFramework.Core.Converters.General"
                    xmlns:properties="clr-namespace:ModernApplicationFramework.Properties">

    <accessKey:AccessKeyRemovingConverter x:Key="AccessKeyRemovingConverter"/>
    <accessKey:AccessKeyConverter x:Key="AccessKeyConverter"/>
    <general:NegateBooleanConverter x:Key="NegateBooleanConverter"/>

    <Geometry x:Key="Checkmark">
        F1 M 5,11 L 3,7 L 5,7 L 6,9 L 9,3 L 11,3 L 7,11 L 5,11 Z
    </Geometry>
    <Geometry x:Key="DownArrowGeometry">
        M 0 0 L 2.3333 2.6666 L 4.6666 0 Z
    </Geometry>

    <ControlTemplate x:Key="ToolbarCustomizeMenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True" Background="Transparent" MinHeight="22">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="26" SharedSizeGroup="MenuItemIconColumnGroup"/>
                <ColumnDefinition Width="26" SharedSizeGroup="MenuItemCheckMarkColumnGroup"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="37"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                <ColumnDefinition Width="17"/>
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="Bg" Stroke="Transparent" Fill="Transparent" StrokeThickness="0" Grid.ColumnSpan="6"/>
            <Border x:Name="GlyphPanel" Background="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarSelectedIcon}}"
                    BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBox}}"
                    BorderThickness="2" Margin="1" Width="18" Height="18" Visibility="Hidden" Grid.Column="0">
                <Path x:Name="Glyph" Width="16" Height="16" Fill="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBox}}"
                      FlowDirection="LeftToRight" Data="{StaticResource Checkmark}"/>
            </Border>
            <ContentPresenter x:Name="Icon" Margin="2,1,4,1" Width="16" Height="16" VerticalAlignment="Center"
                              ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Visible"
                              Grid.Column="1"/>
            <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="8,1,0,1" VerticalAlignment="Center"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
            <TextBlock Grid.Column="4" Text="{TemplateBinding InputGestureText}" Margin="{TemplateBinding Padding}"
                       VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="MenuItem.Icon">
                <Trigger.Value>
                    <x:NullExtension/>
                </Trigger.Value>
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="true">
                <Setter TargetName="Bg"
                        Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOver}}"
                        Property="Shape.Fill"/>
                <Setter TargetName="Bg"
                        Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverBorder}}"
                        Property="Shape.Stroke"/>
                <Setter Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverText}}"
                        Property="TextElement.Foreground"/>
                <Setter TargetName="GlyphPanel"
                        Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarHoverOverSelectedIcon}}"
                        Property="Border.Background"/>
                <Setter TargetName="GlyphPanel"
                        Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBoxMouseOver}}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="Glyph"
                        Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBoxMouseOver}}"
                        Property="Shape.Fill"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarTextInactive}}"
                        Property="Control.Foreground"/>
                <Setter TargetName="GlyphPanel"
                        Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarSelectedIconDisabled}}"
                        Property="Border.Background"/>
                <Setter TargetName="GlyphPanel"
                        Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBoxDisabled}}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="Glyph"
                        Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBoxDisabled}}"
                        Property="Shape.Fill"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ToolbarCustomizeMenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="2,3,2,3"/>
        <Setter Property="Template" Value="{StaticResource ToolbarCustomizeMenuItemTemplate}"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarTextActive}}"/>
        <Setter Property="StaysOpenOnClick" Value="True"/>
    </Style>

    <Style x:Key="{x:Static internals:QuickCustomizeButton.BoundMenuItemStyleKey}" TargetType="{x:Type MenuItem}" 
           BasedOn="{StaticResource ToolbarCustomizeMenuItemStyle}">
        <Setter Property="AutomationProperties.Name">
            <Setter.Value>
                <Binding Path="Text" Converter="{StaticResource AccessKeyRemovingConverter}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="AutomationProperties.AcceleratorKey">
            <Setter.Value>
                <Binding Path="ShortcutText" Mode="OneWay"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Header">
            <Setter.Value>
                <Binding Path="Text" Mode="OneWay" Converter="{StaticResource AccessKeyConverter}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="InputGestureText">
            <Setter.Value>
                <Binding Path="ShortcutText" Mode="OneWay"/>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled">
            <Setter.Value>
                <Binding Path="IsCustom" Mode="OneWay" Converter="{StaticResource NegateBooleanConverter}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="IsCheckable" Value="true"/>
        <Setter Property="IsChecked" Value="{Binding IsVisible}"/>
    </Style>
    <Style x:Key="{x:Static internals:QuickCustomizeButton.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid SnapsToDevicePixels="true" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="26" SharedSizeGroup="MenuItemCheckmarkColumnGroup"/>
                            <ColumnDefinition Width="26" SharedSizeGroup="MenuItemIconColumnGroup"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuIconBackground}}"
                                   Grid.Column="0" Grid.ColumnSpan="2"/>
                        <Rectangle Height="1" Margin="4,1,1,1"
                                   Fill="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuSeparator}}"
                                   Grid.Column="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static internals:QuickCustomizeButton.CustomizeMenuItemStyleKey}" TargetType="{x:Type MenuItem}"
           BasedOn="{StaticResource ToolbarCustomizeMenuItemStyle}">
        <Setter Property="Header" Value="{x:Static properties:CommonUI_Resources.ToolBarCustomizeButton}"/>
    </Style>
    <Style x:Key="{x:Static internals:QuickCustomizeButton.ResetToolbarMenuItemStyleKey}"
           TargetType="{x:Type MenuItem}" BasedOn="{StaticResource ToolbarCustomizeMenuItemStyle}">
        <Setter Property="Header" Value="{x:Static properties:CommonUI_Resources.ToolBarResetButton}"/>
        <Setter Property="StaysOpenOnClick" Value="false"/>
    </Style>

    <Style TargetType="{x:Type internals:QuickCustomizeButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.QuickCustomizeButtonText}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" BorderThickness="1" Margin="2" BorderBrush="Transparent"
                            Background="{TemplateBinding Background}">
                        <Grid SnapsToDevicePixels="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Right"
                                   VerticalOffset="0" HorizontalOffset="0" Focusable="False" PopupAnimation="{x:Static SystemParameters.MenuPopupAnimation}">
                                <Popup.IsOpen>
                                    <Binding Path="IsSubmenuOpen" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </Popup.IsOpen>
                                <controls:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                    <Grid Background="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuIconBackground}}">
                                        <controls:MenuScrollViewer>
                                            <Grid Background="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuBackgroundGradientBegin}}"
                                                  RenderOptions.ClearTypeHint="Enabled">
                                                <Border Background="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuIconBackground}}" 
                                                        HorizontalAlignment="Left" Width="54"/>
                                                <ItemsPresenter Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.IsSharedSizeScope="True"
                                                                KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                            </Grid>
                                        </controls:MenuScrollViewer>
                                        <Border BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuBorder}}" BorderThickness="1"/>
                                    </Grid>
                                </controls:SystemDropShadowChrome>
                            </Popup>
                            <ContentPresenter Grid.Column="0" ContentSource="Header" Margin="8,3,0,4" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                            <Grid Background="Transparent" Margin="2,0,2,0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Path x:Name="Arrow" Margin="0,1,0,0" Data="{StaticResource DownArrowGeometry}" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" Fill="{DynamicResource {x:Static themes:EnvironmentColors.QuickCustomizeButtonGlyph}}"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border"
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.QuickCustomizeButtonBorder}}"
                                    Property="Border.BorderBrush"/>
                            <Setter TargetName="Border"
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.QuickCustomizeButton}}"
                                    Property="Border.Background"/>
                            <Setter Value="{DynamicResource {x:Static themes:EnvironmentColors.QuickCustomizeButtonTextHover}}"
                                    Property="TextElement.Foreground"/>
                            <Setter TargetName="Arrow"
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.QuickCustomizeButtonGlyphHover}}"
                                    Property="Shape.Fill"/>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border"
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.QuickCustomizeButtonBorder}}"
                                    Property="Border.BorderBrush"/>
                            <Setter TargetName="Border"
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.QuickCustomizeButton}}"
                                    Property="Border.Background"/>
                            <Setter Value="{DynamicResource {x:Static themes:EnvironmentColors.QuickCustomizeButtonTextHover}}"
                                    Property="TextElement.Foreground"/>
                            <Setter TargetName="Arrow"
                                    Value="{DynamicResource {x:Static themes:EnvironmentColors.QuickCustomizeButtonGlyphHover}}"
                                    Property="Shape.Fill"/>
                        </Trigger>
                        <DataTrigger>
                            <DataTrigger.Binding>
                                <Binding ElementName="PART_Popup" Path="(Popup.HasDropShadow)"/>
                            </DataTrigger.Binding>
                            <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shdw" Value="{DynamicResource {x:Static themes:EnvironmentColors.DropShadowBackground}}" 
                                    Property="controls:SystemDropShadowChrome.Color"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

</ResourceDictionary>