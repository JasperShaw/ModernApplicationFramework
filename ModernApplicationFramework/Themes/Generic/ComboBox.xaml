<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:this="clr-namespace:ModernApplicationFramework.Controls"
					xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:colors="clr-namespace:ModernApplicationFramework.Core.Themes">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Brushes.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border x:Name="Border" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static colors:EnvironmentColors.ComboboxButtonBackground}}" 
                    BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxBorder}}" BorderThickness="1"/>
			<Border x:Name="ButtonBorder" Grid.Column="0" Margin="1" Background="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxBackground}}" 
                    BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxButtonBorder}}" BorderThickness="0,0,1,0" />
			<Path x:Name="Arrow" Grid.Column="1" Fill="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxArrow}}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 3 3 6 0 Z"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="ToggleButton.IsMouseOver" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboboxButtonBackgroundHover}}"/>
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxBorderHover}}"/>
				<Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxButtonBorderHover}}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxArrowHover}}"/>
			</Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboboxButtonBackgroundDown}}"/>
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxBorderDown}}"/>
				<Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxButtonBorderDown}}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxArrowDown}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboboxButtonBackgroundDisabled}}"/>
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxBorderDisabled}}"/>
				<Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxButtonBorderDisabled}}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxArrowDisabled}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
	</ControlTemplate>
	
	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
	</ControlTemplate>
	
	<Style TargetType="{x:Type this:ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxForeground}}"/>
		<Setter Property="MinWidth" Value="120"/>
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="Template">
			<Setter.Value>
                <ControlTemplate TargetType="{x:Type this:ComboBox}">
                    <Grid>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="None">
                            <themes:SystemDropShadowChrome x:Name="Shadow" AllowDrop="True" Color="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxPopupShadowBackground}}" Margin="0,0,5,5">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxPopupBackground}}" BorderThickness="1"
                                            BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxPopupBorder}}"/>
                                    <ScrollViewer Margin="4,2,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </themes:SystemDropShadowChrome>   
                        </Popup>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Focusable="false" 
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
										      VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                 Margin="3,3,23,3" Focusable="False" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" Foreground="{TemplateBinding Foreground}"
                                 SelectionBrush="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxSelectionBrush}}" 
                                 CaretBrush="{DynamicResource {x:Static colors:EnvironmentColors.ComboBoxCaretBrush}}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                             <Setter TargetName="ContentSite" Property="Focusable" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>