<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:this="clr-namespace:ModernApplicationFramework.Controls"
                    xmlns:converters="clr-namespace:ModernApplicationFramework.Core.Converters"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes">
    
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
    
    <Style TargetType="{x:Type this:SplittButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type this:SplittButton}">
                    <Border x:Name="MainBorder" BorderThickness="1" Background="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonBackground}}">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" HorizontalOffset="1" VerticalOffset="1" AllowsTransparency="True" StaysOpen="False" Placement="Bottom" Focusable="False"
                                        IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton}">
                                    <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}"/>
                            </Popup>
                            <Button x:Name="PART_ActionButton" Margin="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Grid.Column="0"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Padding="3" Background="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonActionButtonBackground}}" 
                                    Content="{TemplateBinding Content}" Foreground="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonActionButtonForeground}}">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter x:Name="ActionButtonContent" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True"/>
                                        </Border>          
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Rectangle x:Name="Separator" Width="1" Fill="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonSeparator}}" Grid.Column="1"/>
                            <ToggleButton x:Name="PART_ToggleButton" Grid.Column="2" IsTabStop="False" IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                          IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                                          Background="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonToggleButtonBackground}}" Foreground="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonToggleButtonGlyph}}">
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Border Background="{TemplateBinding Background}">
                                            <Grid x:Name="arrowGlyph" IsHitTestVisible="False" Margin="4,3,4,3">
                                                <Path x:Name="Arrow" Width="8" Height="4" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{TemplateBinding Foreground}">
                                                    <Path.LayoutTransform>
                                                        <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                                                    </Path.LayoutTransform>
                                                </Path>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>         
                            </ToggleButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonBorderHover}}"/>
                            <Setter TargetName="Separator" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonSeparatorHover}}"/>
                            <Setter TargetName="PART_ActionButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonActionButtonBackgroundHover}}"/>
                            <Setter TargetName="PART_ActionButton" Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonActionButtonForegroundHover}}"/>
                            <Setter TargetName="PART_ToggleButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonToggleButtonBackgroundHover}}"/>
                            <Setter TargetName="PART_ToggleButton" Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonToggleButtonGlyphHover}}"/>       
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="True" SourceName="PART_ActionButton">
                            <Setter TargetName="PART_ActionButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonActionButtonBackgroundDown}}" />
                            <Setter TargetName="PART_ActionButton" Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonActionButtonForegroundDown}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" SourceName="PART_ToggleButton">
                            <Setter TargetName="Separator" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonSeparatorDown}}"/>
                            <Setter TargetName="PART_ActionButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonActionButtonDown}}"/>
                            <Setter TargetName="PART_ToggleButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonToggleButtonDown}}"/>
                            <Setter TargetName="PART_ActionButton" Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonActionButtonForegroundChecked}}"/>
                            <Setter TargetName="PART_ToggleButton" Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonToggleButtonGlyphChecked}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True" SourceName="PART_ToggleButton">
                            <Setter TargetName="Separator" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonSeparatorChecked}}"/>
                            <Setter TargetName="PART_ActionButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonActionButtonBackgroundChecked}}"/>
                            <Setter TargetName="PART_ToggleButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonToggleButtonBackgroundChecked}}"/>
                            <Setter TargetName="PART_ActionButton" Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonActionButtonForegroundChecked}}"/>
                            <Setter TargetName="PART_ToggleButton" Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonToggleButtonGlyphChecked}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ToggleButton" Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonToggleButtonGlyphDisabled}}"/>
                            <Setter TargetName="PART_ActionButton" Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonActionButtonForegroundDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>