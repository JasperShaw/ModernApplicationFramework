<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ModernApplicationFramework.Docking.Converters"
                    xmlns:avalonDockControls="clr-namespace:ModernApplicationFramework.Docking.Controls"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes"
                    xmlns:mafc="clr-namespace:ModernApplicationFramework.Controls"
                    xmlns:internals="clr-namespace:ModernApplicationFramework.Controls.Internals"
                    xmlns:utilities1="clr-namespace:ModernApplicationFramework.Controls.Utilities">
    
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
    <converters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter"/>
    <converters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter"/>
    <converters:NullToDoNothingConverter x:Key="NullToDoNothingConverter"/>
    <converters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter"/>
    <converters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter"/>
    
    <Style x:Key="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="21" GlassFrameThickness="1" ResizeBorderThickness="3" UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="InputMethod.IsInputMethodSuspended" Value="True" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="utilities1:WindowStyleHelper.HasMaximizeButton" Value="True" />
        <Setter Property="utilities1:WindowStyleHelper.HasMinimizeButton" Value="True" />
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="MinHeight" Value="50" />
        <Setter Property="Title" Value="{Binding Path=Caption}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.MainWindowBackground}}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="ActiveGlowColor" Value="{DynamicResource {x:Static themes:EnvironmentColors.MainWindowActiveShadowAndBorderColor}}" />
        <Setter Property="InactiveGlowColor" Value="{DynamicResource {x:Static themes:EnvironmentColors.MainWindowInactiveShadowAndBorderColor}}" />
        <Setter Property="NonClientFillColor" Value="{Binding Path=Background, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
                    <internals:WindowContentPresenter>
                        <Grid Background="{TemplateBinding Control.Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <avalonDockControls:DragUndockHeader x:Name="TitleBar" Background="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarBackground}}" 
                                                                 Grid.Row="0" Padding="2,1,2,3"
                                                                 Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                                <DockPanel>
                                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                        <avalonDockControls:DropDownTitleBarButton BorderThickness="1" Margin="0,0,2,0"
												x:Name="SinglePaneContextMenu" WindowChrome.IsHitTestVisibleInChrome="True"
												Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
												Focusable="False" Height="15" Width="15" VerticalAlignment="Center" HorizontalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
												DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
												DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
												ToolTip="Window Position"
												Background="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackground}}"
												BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorder}}">
                                            <Path x:Name="MenuButtonPath" Fill="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyph}}" Width="8" Height="4" Stretch="Uniform" Data="F1 M 0,0 L 4,4 8,0 0,0 z"/>
                                        </avalonDockControls:DropDownTitleBarButton>

                                        <internals:WindowTitleBarButton x:Name="MaximizeRestoreButton" WindowChrome.IsHitTestVisibleInChrome="True"
                                                                   Focusable="False" Height="15" Width="15" BorderThickness="1" Margin="0,0,2,0"
                                                                   Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" 
                                                                   AutomationProperties.AutomationId="Maximize"
                                                                   AutomationProperties.Name="Maximize"
                                                                   Command="{x:Static SystemCommands.MaximizeWindowCommand}"
                                                                   CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                                   ToolTip="Maximize" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                   VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                                   Background="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackground}}"
                                                BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorder}}">
                                            <Path x:Name="MaximizeRestoreButtonPath" Width="9" Height="9" Fill="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyph}}"
											      Data="F1 M 0,0 L 0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3 Z" Stretch="Uniform">
                                            </Path>
                                        </internals:WindowTitleBarButton>

                                        <internals:WindowTitleBarButton x:Name="CloseButton" WindowChrome.IsHitTestVisibleInChrome="True"
                                                                   Focusable="False" BorderThickness="1" Margin="0,0,2,0"
                                                                   Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                                   VerticalAlignment="Center" HorizontalAlignment="Center" VerticalContentAlignment="Center"
                                                                   HorizontalContentAlignment="Center" ToolTip="Close" Height="15" Width="15"
                                                                   Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                                   Background="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackground}}"
                                                BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorder}}">
                                            <Path Fill="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyph}}" Width="10" Height="8" Stretch="Uniform" x:Name="CloseButtonPath"
                                                  Data="F1 M 0,0 L 2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0 Z"/>
                                        </internals:WindowTitleBarButton>

                                    </StackPanel>
                                    <avalonDockControls:DropDownControlArea x:Name="TextBlock" Margin="2,0,0,0" Foreground="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarForeground}}"
                                            DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                        <DockPanel>
                                            <ContentPresenter Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}" 
                                                              ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                              ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </DockPanel>
                                    </avalonDockControls:DropDownControlArea>
                                    <Rectangle Margin="8,0,4,0" SnapsToDevicePixels="True" Height="5" VerticalAlignment="Center" x:Name="Grip"
                                               Fill="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowGrip}}">
                                    </Rectangle>
                                </DockPanel>
                            </avalonDockControls:DragUndockHeader>
                            <avalonDockControls:DragUndockHeader x:Name="TitleBarL" Background="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarBackground}}" 
                                                                 Grid.Row="0" Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}">

                                <DockPanel>
                                    <mafc:SystemMenu x:Name="PART_SystemMenu" Width="32" Height="27" Margin="0,0,12,4" HorizontalAlignment="Left"
                                                     DockPanel.Dock="Left" Padding="12,7,0,0" Source="{Binding Source={x:Static Application.Current}, Path=MainWindow.(mafc:MainWindow.ActivatedFloatIcon)}" 
                                                     WindowChrome.IsHitTestVisibleInChrome="True"/>

                                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">

                                        <internals:WindowTitleBarButton x:Name="MaximizeRestoreButtonL" Width="34" Height="26" VerticalAlignment="Top" 
                                                                   BorderThickness="1,0,1,1" Padding="0,3,0,0"
                                                                   AutomationProperties.AutomationId="Maximize"
                                                                   AutomationProperties.Name="Maximize"
                                                                   Command="{x:Static SystemCommands.MaximizeWindowCommand}"
                                                                   CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                                   Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}" 
                                                                   ToolTip="Maximize"  WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Path x:Name="MaximizeRestoreButtonPathL" Width="9" Height="9"
                                                  Data="F1 M 0,0 L 0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3 Z" Stretch="Uniform"
                                                  Fill="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarGlyph}}">
                                            </Path>
                                        </internals:WindowTitleBarButton>


                                        <internals:WindowTitleBarButton x:Name="CloseButtonL" WindowChrome.IsHitTestVisibleInChrome="True" VerticalAlignment="Top"
                                                                   Focusable="False" BorderThickness="1,0,1,1" Margin="0,0,0,0"
                                                                   Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                                   ToolTip="Close" Height="26" Width="34"
                                                                   Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                                            <Path Fill="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyph}}" Width="10" Height="8" Stretch="Uniform"
                                                  Data="F1 M 0,0 L 2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0 Z"/>
                                        </internals:WindowTitleBarButton>
                                    </StackPanel>
                                    <TextBlock x:Name="TitleBarTextL" VerticalAlignment="Center" Margin="4,0,0,0"
                                               TextTrimming="CharacterEllipsis" Foreground="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarForegroundActive}}"
                                               Text="{Binding Path=MainWindow.Title, Source={x:Static Application.Current}}"/>
                                </DockPanel>
                                
                                
                            </avalonDockControls:DragUndockHeader>
                            <ContentPresenter Grid.Row="1"/>
                        </Grid>
                    </internals:WindowContentPresenter>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Margin" Value="0,0,0,4" TargetName="TitleBar"/>
                            <Setter TargetName="MaximizeRestoreButtonPathL" Property="Data" Value="F1 M 0,10 L 0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10 M 1,10 L 7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9 Z" />
                            <Setter TargetName="MaximizeRestoreButtonPathL" Property="Height" Value="10" />
                            <Setter TargetName="MaximizeRestoreButtonPathL" Property="Width" Value="10" />
                            <Setter TargetName="MaximizeRestoreButtonL" Property="ToolTip" Value="Restore" />
                            <Setter TargetName="MaximizeRestoreButtonL" Property="AutomationProperties.Name" Value="Restore" />
                            <Setter TargetName="MaximizeRestoreButtonL" Property="AutomationProperties.AutomationId" Value="Restore"/>
                            <Setter TargetName="MaximizeRestoreButtonL" Property="Command" Value="{x:Static SystemCommands.RestoreWindowCommand}"/>

                            <Setter TargetName="MaximizeRestoreButtonPath" Property="Data" Value="F1 M 0,10 L 0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10 M 1,10 L 7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9 Z" />
                            <Setter TargetName="MaximizeRestoreButton" Property="ToolTip" Value="Restore" />
                            <Setter TargetName="MaximizeRestoreButton" Property="AutomationProperties.Name" Value="Restore" />
                            <Setter TargetName="MaximizeRestoreButton" Property="AutomationProperties.AutomationId" Value="Restore"/>
                            <Setter TargetName="MaximizeRestoreButton" Property="Command" Value="{x:Static SystemCommands.RestoreWindowCommand}"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="TitleBar" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarBackgroundActive}}"/>
                            <Setter TargetName="TextBlock" Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarForegroundActive}}"/>
                            <Setter TargetName="MenuButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphActive}}"/>
                            <Setter TargetName="MaximizeRestoreButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphActive}}"/>
                            <Setter TargetName="CloseButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphActive}}"/>
                            <Setter TargetName="Grip" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowGripActive}}"/>
                            <Setter TargetName="CloseButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundActive}}"/>
                            <Setter TargetName="CloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderActive}}"/>
                            <Setter TargetName="MaximizeRestoreButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundActive}}"/>
                            <Setter TargetName="MaximizeRestoreButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderActive}}"/>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundActive}}"/>
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderActive}}"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="TitleBarTextL" Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarForeground}}"/>
                            <Setter TargetName="PART_SystemMenu" Property="Source" Value="{Binding Source={x:Static Application.Current}, Path=MainWindow.(mafc:MainWindow.DeactivatedFloatIcon)}"/>
                        </Trigger>
                        <Trigger SourceName="CloseButton" Property="IsMouseOver" Value="true">
                            <Setter TargetName="CloseButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphHover}}"/>
                            <Setter TargetName="CloseButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundHover}}"/>
                            <Setter TargetName="CloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderHover}}"/>
                        </Trigger>
                        <Trigger SourceName="MaximizeRestoreButton" Property="IsMouseOver" Value="true">
                            <Setter TargetName="MaximizeRestoreButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphHover}}"/>
                            <Setter TargetName="MaximizeRestoreButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundHover}}"/>
                            <Setter TargetName="MaximizeRestoreButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderHover}}"/>
                        </Trigger>
                        <Trigger SourceName="SinglePaneContextMenu" Property="IsMouseOver" Value="true">
                            <Setter TargetName="MenuButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphHover}}"/>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundHover}}"/>
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderHover}}"/>
                        </Trigger>
                        <Trigger SourceName="CloseButton" Property="IsPressed" Value="true">
                            <Setter TargetName="CloseButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphDown}}"/>
                            <Setter TargetName="CloseButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundDown}}"/>
                            <Setter TargetName="CloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderDown}}"/>
                        </Trigger>
                        <Trigger SourceName="MaximizeRestoreButton" Property="IsPressed" Value="true">
                            <Setter TargetName="MaximizeRestoreButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphDown}}"/>
                            <Setter TargetName="MaximizeRestoreButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundDown}}"/>
                            <Setter TargetName="MaximizeRestoreButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderDown}}"/>
                        </Trigger>
                        <Trigger SourceName="SinglePaneContextMenu" Property="IsPressed" Value="true">
                            <Setter TargetName="MenuButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphDown}}"/>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundDown}}"/>
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderDown}}"/>
                        </Trigger>                     
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True" SourceName="CloseButton"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="CloseButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphActiveHover}}"/>
                                 <Setter TargetName="CloseButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundActiveHover}}"/>
                            <Setter TargetName="CloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderActiveHover}}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True" SourceName="MaximizeRestoreButton"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="MaximizeRestoreButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphActiveHover}}"/>
                                <Setter TargetName="MaximizeRestoreButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundActiveHover}}"/>
                                <Setter TargetName="MaximizeRestoreButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderActiveHover}}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True" SourceName="SinglePaneContextMenu"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="MenuButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphActiveHover}}"/>
                                <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundActiveHover}}"/>
                                <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderActiveHover}}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True"/>
                                <Condition Property="IsPressed" Value="True" SourceName="CloseButton"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="CloseButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphActiveDown}}"/>
                                <Setter TargetName="CloseButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundActiveDown}}"/>
                                <Setter TargetName="CloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderActiveDown}}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True"/>
                                <Condition Property="IsPressed" Value="True" SourceName="MaximizeRestoreButton"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="MaximizeRestoreButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphActiveDown}}"/>
                                <Setter TargetName="MaximizeRestoreButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundActiveDown}}"/>
                                <Setter TargetName="MaximizeRestoreButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderActiveDown}}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True"/>
                                <Condition Property="IsPressed" Value="True" SourceName="SinglePaneContextMenu"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="MenuButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarGlyphActiveDown}}"/>
                                <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBackgroundActiveDown}}"/>
                                <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorableFloatingWindowTitleBarButtonBorderActiveDown}}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
</ResourceDictionary>