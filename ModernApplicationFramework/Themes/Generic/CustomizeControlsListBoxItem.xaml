<controls:CustomizeControlsListBoxItem x:Class="ModernApplicationFramework.Themes.Generic.CustomizeControlsListBoxItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:ModernApplicationFramework.Controls"
             xmlns:converters="clr-namespace:ModernApplicationFramework.Core.Converters"
             xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes">
    <FrameworkElement.Resources>
        <converters:AccessKeyRemovingConverter x:Key="AccessKeyRemovingConverter"/>
        <converters:AccessKeyUnderliningConverter x:Key="AccessKeyUnderliningConverter"/>
        <Geometry x:Key="RightArrow">
            M 0,0 L 4,3.5 L 0,7 Z
        </Geometry>
        <Geometry x:Key="DownArrow">
            M 0 0 L 2.3333 2.6666 L 4.6666 0 Z
        </Geometry>
        <Geometry x:Key="Checkmark">
            F1 M 5,11 L 3,7 L 5,7 L 6,9 L 9,3 L 11,3 L 7,11 L 5,11 Z
        </Geometry>
        <Style x:Key="CustomizeControlsComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="Transparent">
                            <Border x:Name="Border" Width="12" HorizontalAlignment="Right"
                                    Background="{TemplateBinding Background}" BorderThickness="1,0,0,0" BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True">
                                <Path Name="Arrow" Margin="0,1,0,0" Fill="{TemplateBinding TextElement.Foreground}"
                                      Data="{StaticResource DownArrow}" SnapsToDevicePixels="True" HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="CustomizeControlsComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Border x:Name="Border" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxBorder}}"
                    Background="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxBackground}}">
                <Grid Name="Placement" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ToggleButton x:Name="ToggleButton" Grid.Column="1" Background="Transparent"
                                  BorderBrush="Transparent" Foreground="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxArrow}}"
                                  Style="{StaticResource CustomizeControlsComboBoxToggleButton}">
                        <ToggleButton.IsChecked>
                            <Binding Path="IsDropDownOpen" Mode="TwoWay" RelativeSource="{RelativeSource TemplatedParent}"/>
                        </ToggleButton.IsChecked>
                    </ToggleButton>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter TargetName="ToggleButton"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxButtonBorderHover}}"
                            Property="Control.BorderBrush"/>
                    <Setter TargetName="ToggleButton"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.ComboboxButtonBackgroundHover}}"
                            Property="Control.Background"/>
                    <Setter TargetName="ToggleButton"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxArrowHover}}"
                            Property="TextElement.Foreground"/>
                    <Setter TargetName="Border"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxBorderHover}}"
                            Property="Border.BorderBrush"/>
                    <Setter TargetName="Border"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.ComboBoxBackgroundHover}}"
                            Property="Border.Background"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="CustomizeControlsListBoxItem.SeparatorTemplate" TargetType="{x:Type controls:CustomizeControlsListBoxItem}">
            <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}" MinHeight="22">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="Bg" Stroke=" Transparent" Fill="Transparent" StrokeThickness="0"
                           Grid.ColumnSpan="2"/>
                <Rectangle Height="1" Margin="4,1,1,1" Fill="{DynamicResource {x:Static themes:EnvironmentColors.SeparatorBackground}}" Grid.Column="1"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                    <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOver}}"/>
                    <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverBorder}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <ControlTemplate x:Key="CustomizeControlsListBoxItem.ButtonTemplate" x:Uid="ControlTemplate_8"
                         TargetType="{x:Type controls:CustomizeControlsListBoxItem}">
            <Grid x:Uid="Grid_7" SnapsToDevicePixels="true" Background="{TemplateBinding Control.Background}"
                  MinHeight="22" MaxWidth="660">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Uid="ColumnDefinition_10" Width="26" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_11" Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="Bg" x:Uid="Rectangle_4" Stroke="Transparent" Fill="Transparent" StrokeThickness="0"
                           Grid.ColumnSpan="2"/>
                <ContentPresenter x:Name="Icon" x:Uid="Icon" Margin="2,1,4,1" Width="16" Height="16" VerticalAlignment="Center"
                                  ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  Visibility="Collapsed"/>
                <Border x:Name="GlyphPanel" x:Uid="Border_6"
                        Background="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarSelectedIcon}}"
                        BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBox}}"
                        BorderThickness="2" Margin="1" Visibility="Collapsed" Width="18" Height="18">
                    <Path x:Name="Glyph" x:Uid="Path_1" Width="16" Height="16"
                          Fill="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBox}}"
                          FlowDirection="LeftToRight" Data="{StaticResource Checkmark}"/>
                </Border>
                <ContentPresenter x:Uid="ContentPresenter_2" Grid.Column="1" ContentSource="Content" Margin="8,1,0,1"
                                  VerticalAlignment="Center" RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <MultiDataTrigger x:Uid="MultiDataTrigger_1">
                    <MultiDataTrigger.Conditions>
                        <Condition x:Uid="Condition_1" Binding="{Binding Flags.Pict}" Value="False"/>
                        <Condition x:Uid="Condition_2" Binding="{Binding Flags.TextOnly}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter x:Uid="Setter_28" TargetName="Icon" Property="UIElement.Visibility" Value="Visible"/>
                </MultiDataTrigger>
                <MultiDataTrigger x:Uid="MultiDataTrigger_2">
                    <MultiDataTrigger.Conditions>
                        <Condition x:Uid="Condition_3" Binding="{Binding Flags.Pict}" Value="True"/>
                        <Condition x:Uid="Condition_4" Binding="{Binding Flags.TextOnly}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter x:Uid="Setter_29" TargetName="Icon" Property="UIElement.Visibility" Value="Visible"/>
                </MultiDataTrigger>
                <Trigger x:Uid="Trigger_6" Property="controls:CustomizeControlsListBoxItem.Icon">
                    <Trigger.Value>
                        <x:NullExtension/>
                    </Trigger.Value>
                    <Setter x:Uid="Setter_30" TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger x:Uid="Trigger_7" Property="controls:CustomizeControlsListBoxItem.IsChecked" Value="true">
                    <Setter x:Uid="Setter_31" TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                    <Setter x:Uid="Setter_32" TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger x:Uid="Trigger_8" Property="ListBoxItem.IsSelected" Value="true">
                    <Setter x:Uid="Setter_33" TargetName="Bg"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOver}}"
                            Property="Shape.Fill"/>
                    <Setter x:Uid="Setter_34" TargetName="Bg"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverBorder}}"
                            Property="Shape.Stroke"/>
                    <Setter x:Uid="Setter_35"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarMenuItemMouseOverText}}"
                            Property="TextElement.Foreground"/>
                    <Setter x:Uid="Setter_36" TargetName="GlyphPanel"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarSelectedIcon}}"
                            Property="Border.Background"/>
                    <Setter x:Uid="Setter_37" TargetName="GlyphPanel"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarSelectedIcon}}"
                            Property="Border.BorderBrush"/>
                    <Setter x:Uid="Setter_69" TargetName="Glyph"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarSelectedIcon}}"
                            Property="Shape.Fill"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="CustomizeControlsListBoxItem.MenuTemplate" x:Uid="ControlTemplate_9"
                         TargetType="{x:Type controls:CustomizeControlsListBoxItem}">
            <Grid x:Uid="Grid_8" SnapsToDevicePixels="true" Background="{TemplateBinding Control.Background}"
                  MinHeight="22" MaxWidth="660">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Uid="ColumnDefinition_12" Width="26" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_13" Width="*"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_14" Width="17"/>
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="Bg" x:Uid="Rectangle_5" Stroke="Transparent" Fill="Transparent" StrokeThickness="0"
                           Grid.ColumnSpan="3"/>
                <ContentPresenter x:Name="Icon" x:Uid="ContentPresenter_3" Margin="2,1,4,1" Width="16" Height="16"
                                  VerticalAlignment="Center" ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                <ContentPresenter x:Uid="ContentPresenter_4" Grid.Column="1" ContentSource="Content" Margin="8,1,0,1"
                                  VerticalAlignment="Center" RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                <Path x:Uid="Path_2" Grid.Column="2" VerticalAlignment="Center" Margin="4,0,0,0"
                      Fill="{DynamicResource {x:Static themes:EnvironmentColors.MenuSubItemGlyph}}"
                      Data="{StaticResource RightArrow}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger x:Uid="Trigger_9" Property="controls:CustomizeControlsListBoxItem.Icon">
                    <Trigger.Value>
                        <x:NullExtension/>
                    </Trigger.Value>
                    <Setter x:Uid="Setter_38" TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger x:Uid="Trigger_10" Property="ListBoxItem.IsSelected" Value="true">
                    <Setter x:Uid="Setter_39" TargetName="Bg"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.MenuItemBackgroundHover}}"
                            Property="Shape.Fill"/>
                    <Setter x:Uid="Setter_40" TargetName="Bg"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.MenuItemBorderHover}}"
                            Property="Shape.Stroke"/>
                    <Setter x:Uid="Setter_41"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.MenuItemForegroundHover}}"
                            Property="TextElement.Foreground"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="CustomizeControlsListBoxItem.MenuControllerTemplate" x:Uid="ControlTemplate_10"
                         TargetType="{x:Type controls:CustomizeControlsListBoxItem}">
            <Grid x:Uid="Grid_9" SnapsToDevicePixels="true" Background="{TemplateBinding Control.Background}"
                  MinHeight="22" MaxWidth="660">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Uid="ColumnDefinition_15" Width="26" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_16" Width="*"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_17" Width="1"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_18" Width="17"/>
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="Bg" x:Uid="Rectangle_6" Stroke="Transparent" Fill="Transparent" StrokeThickness="0"
                           Grid.ColumnSpan="4"/>
                <ContentPresenter x:Name="Icon" x:Uid="ContentPresenter_5" Margin="2,1,4,1" Width="16" Height="16"
                                  VerticalAlignment="Center" ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                <ContentPresenter x:Uid="ContentPresenter_6" Grid.Column="1" ContentSource="Content" Margin="8,1,0,1"
                                  VerticalAlignment="Center" RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                <Rectangle x:Name="DropDownSep" x:Uid="DropDownSep" Grid.Column="2" HorizontalAlignment="Left" Width="1"
                           Fill="{DynamicResource {x:Static themes:EnvironmentColors.SplitButtonSeparator}}"/>
                <Path x:Name="Arrow" x:Uid="Path_3" Grid.Column="3" VerticalAlignment="Center" Margin="4,0,0,0"
                      Fill="{DynamicResource {x:Static themes:EnvironmentColors.MenuSubItemGlyph}}"
                      Data="{StaticResource DownArrow}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger x:Uid="Trigger_11" Property="controls:CustomizeControlsListBoxItem.Icon">
                    <Trigger.Value>
                        <x:NullExtension/>
                    </Trigger.Value>
                    <Setter x:Uid="Setter_42" TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger x:Uid="Trigger_12" Property="ListBoxItem.IsSelected" Value="true">
                    <Setter x:Uid="Setter_43" TargetName="Bg"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.MenuItemBackgroundHover}}"
                            Property="Shape.Fill"/>
                    <Setter x:Uid="Setter_44" TargetName="Bg"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.MenuItemBorderHover}}"
                            Property="Shape.Stroke"/>
                    <Setter x:Uid="Setter_46"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.MenuItemForegroundHover}}"
                            Property="TextElement.Foreground"/>
                    <Setter x:Uid="Setter_74" TargetName="DropDownSep"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.DropDownGlyphHover}}"
                            Property="Shape.Fill"/>
                    <Setter x:Uid="Setter_73" TargetName="Arrow"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.DropDownGlyphHover}}"
                            Property="Shape.Fill"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="CustomizeControlsListBoxItem.ComboBoxTemplate" x:Uid="ControlTemplate_11"
                         TargetType="{x:Type controls:CustomizeControlsListBoxItem}">
            <Grid x:Uid="Grid_10" SnapsToDevicePixels="true" Background="{TemplateBinding Control.Background}"
                  MinHeight="22" MaxWidth="660">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Uid="ColumnDefinition_19" Width="26" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_20" Width="Auto"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_21" Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="Bg" x:Uid="Rectangle_7" Stroke="Transparent" Fill="Transparent" StrokeThickness="0"
                           Grid.ColumnSpan="3"/>
                <ContentPresenter x:Name="Icon" x:Uid="ContentPresenter_7" Margin="2,1,4,1" Width="16" Height="16"
                                  VerticalAlignment="Center" ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                <Border x:Name="GlyphPanel" x:Uid="Border_7"
                        Background="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarSelectedIcon}}"
                        BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBox}}"
                        BorderThickness="2" Margin="1" Visibility="Collapsed" Width="18" Height="18">
                    <Path x:Name="Glyph" x:Uid="Path_4" Width="16" Height="16"
                          Fill="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBox}}"
                          FlowDirection="LeftToRight" Data="{StaticResource Checkmark}"/>
                </Border>
                <ContentPresenter x:Uid="ContentPresenter_8" Grid.Column="1" ContentSource="Content" Margin="8,1,0,1"
                                  VerticalAlignment="Center" RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                <ComboBox x:Name="ComboBox" x:Uid="ComboBox" Margin="7,2,2,2" Grid.Column="2" IsEditable="false" IsTabStop="false"
                          MaxDropDownHeight="0" IsEnabled="false"
                          Template="{DynamicResource CustomizeControlsComboBoxTemplate}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger x:Uid="Trigger_13" Property="controls:CustomizeControlsListBoxItem.Icon">
                    <Trigger.Value>
                        <x:NullExtension/>
                    </Trigger.Value>
                    <Setter x:Uid="Setter_47" TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger x:Uid="Trigger_14" Property="controls:CustomizeControlsListBoxItem.IsChecked" Value="true">
                    <Setter x:Uid="Setter_48" TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                    <Setter x:Uid="Setter_49" TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger x:Uid="Trigger_15" Property="ListBoxItem.IsSelected" Value="true">
                    <Setter x:Uid="Setter_50" TargetName="Bg"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.MenuItemBackgroundHover}}"
                            Property="Shape.Fill"/>
                    <Setter x:Uid="Setter_51" TargetName="Bg"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.MenuItemBorderHover}}"
                            Property="Shape.Stroke"/>
                    <Setter x:Uid="Setter_52"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.MenuItemForegroundHover}}"
                            Property="TextElement.Foreground"/>
                    <Setter x:Uid="Setter_53" TargetName="GlyphPanel"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.MenuItemBackgroundDown}}"
                            Property="Border.Background"/>
                    <Setter x:Uid="Setter_54" TargetName="GlyphPanel"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBoxMouseOver}}"
                            Property="Border.BorderBrush"/>
                    <Setter x:Uid="Setter_70" TargetName="Glyph"
                            Value="{DynamicResource {x:Static themes:EnvironmentColors.CommandBarCheckBoxMouseOver}}"
                            Property="Shape.Fill"/>
                    <Setter x:Uid="Setter_55" TargetName="ComboBox" Property="UIElement.IsEnabled" Value="true"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>




        <Style x:Key="CommonCustomizeControlsListBoxItemStyleKey" TargetType="{x:Type controls:CustomizeControlsListBoxItem}">
            <Setter Property="Content">
                <Setter.Value>
                    <Binding Path="Text" Converter="{StaticResource AccessKeyUnderliningConverter}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <x:NullExtension/>
                </Setter.Value>
            </Setter>
            <Setter Property="AutomationProperties.Name">
                <Setter.Value>
                    <Binding Path="Text" Converter="{StaticResource AccessKeyRemovingConverter}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CommonCustomizeControlsListBoxItemWithImageStyleKey" 
               BasedOn="{StaticResource CommonCustomizeControlsListBoxItemStyleKey}"
               TargetType="{x:Type controls:CustomizeControlsListBoxItem}"/>



        <Style x:Key="{x:Static controls:CustomizeControlsListBox.ButtonStyleKey}" x:Uid="Style_9"
               BasedOn="{StaticResource CommonCustomizeControlsListBoxItemWithImageStyleKey}"
               TargetType="{x:Type controls:CustomizeControlsListBoxItem}">
            <Setter Property="Template"
                    Value="{DynamicResource CustomizeControlsListBoxItem.ButtonTemplate}"/>
            <!--<Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <Binding Converter="{StaticResource IsSplitButtonModelConverter}"/>
                    </DataTrigger.Binding>
                    <Setter x:Uid="Setter_63" Property="Control.Template"
                            Value="{DynamicResource CustomizeControlsListBoxItem.MenuControllerTemplate}"/>
                </DataTrigger>
            </Style.Triggers>-->
        </Style>

        <Style x:Key="{x:Static controls:CustomizeControlsListBox.MenuStyleKey}"
               BasedOn="{StaticResource CommonCustomizeControlsListBoxItemStyleKey}"
               TargetType="{x:Type controls:CustomizeControlsListBoxItem}">
            <Setter Property="Template" Value="{DynamicResource CustomizeControlsListBoxItem.MenuTemplate}"/>
        </Style>

        <Style x:Key="{x:Static controls:CustomizeControlsListBox.MenuControllerStyleKey}" x:Uid="Style_11"
               BasedOn="{StaticResource CommonCustomizeControlsListBoxItemStyleKey}"
               TargetType="{x:Type controls:CustomizeControlsListBoxItem}">
            <Setter x:Uid="Setter_65" Property="Control.Template"
                    Value="{DynamicResource CustomizeControlsListBoxItem.MenuControllerTemplate}"/>
        </Style>


        <Style x:Key="{x:Static controls:CustomizeControlsListBox.ComboBoxStyleKey}" x:Uid="Style_12"
               BasedOn="{StaticResource CommonCustomizeControlsListBoxItemStyleKey}"
               TargetType="{x:Type controls:CustomizeControlsListBoxItem}">
            <Setter x:Uid="Setter_66" Property="Template"
                    Value="{DynamicResource CustomizeControlsListBoxItem.ComboBoxTemplate}"/>
        </Style>


        <Style x:Key="{x:Static controls:CustomizeControlsListBox.SeparatorStyleKey}" x:Uid="Style_13"
               TargetType="{x:Type controls:CustomizeControlsListBoxItem}">
            <Setter Property="Template"
                    Value="{DynamicResource CustomizeControlsListBoxItem.SeparatorTemplate}"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <x:NullExtension/>
                </Setter.Value>
            </Setter>
        </Style>











    </FrameworkElement.Resources>
</controls:CustomizeControlsListBoxItem>

