<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:this="clr-namespace:ModernApplicationFramework.Controls"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:colors="clr-namespace:ModernApplicationFramework.Core.Themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="VisibilityOfBool" />

    <Style TargetType="{x:Type this:ContextMenu}">
        <Style.Resources>  
           <Style x:Key="{x:Static this:ContextMenuGlyphItem.SeparatorStyleKey}" TargetType="this:Separator">
                <Setter Property="Height" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Border BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.MenuSeparator}}" BorderThickness="1" Margin="25,0,0,0"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuForeground}}"/>
        <Setter Property="Visibility" Value="{Binding HasItems, RelativeSource={RelativeSource Self}, Converter={StaticResource VisibilityOfBool}}"/>
        <Setter Property="PopupAnimation" Value="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type this:ContextMenu}">
                    <themes:SystemDropShadowChrome x:Name="Shadow" Color="Transparent">
                        <Grid Background="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuIconBackground}}">
                            <this:MenuScrollViewer x:Name="PART_ScrollViewer">
                                <Grid Background="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuBackground}}" RenderOptions.ClearTypeHint="Enabled">
                                    <Border x:Name="IconBackground" Width="28" Background="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuIconBackground}}" HorizontalAlignment="Left"/>
                                    <ItemsPresenter KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="3" Grid.IsSharedSizeScope="True"/>
                                </Grid>
                            </this:MenuScrollViewer>
                            <Border BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuBorder}}" BorderThickness="1"/>
                        </Grid>
                    </themes:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Shadow" Property="Color" Value="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuShadow}}"/>
                            <Setter TargetName="Shadow" Property="Margin" Value="0,0,5,5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type this:ContextMenuItem}">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type this:ContextMenu}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type this:ContextMenuItem}">
                    <!--Border 1-->
                    <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" 
                                    BorderThickness="1" SnapsToDevicePixels="False">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0" Width="26" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition x:Name="Col2" Width="37" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition x:Name="Col3" Width="17"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="IconBorder" Background="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupIconBackground}}" Grid.Column="0">
                                <ContentPresenter x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                            </Border>
                            <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" 
                                                      x:Name="HeaderHost" RecognizesAccessKey="True" 
                                                      ContentSource="Header" VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="3" Margin="8,1,8,1" x:Name="IGTHost" 
                                                      ContentSource="InputGestureText" VerticalAlignment="Center"/>
                            <Grid Grid.Column="4" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" 
                                              Fill="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemGlyph}}" Data="M0,0 L0,8 L4,4 z"/>
                            </Grid>
                            <Popup Grid.Column="0" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                           Placement="Right" HorizontalOffset="-1" x:Name="SubMenuPopup" Focusable="false"
                                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                           AllowsTransparency="True">
                                <Grid Margin="0,0,5,5">
                                    <!--Border 2-->
                                    <themes:SystemDropShadowChrome Color="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupShadow}}" Margin="0,0,5,5">
                                       <Grid>
                                            <Decorator Name="PART_ScrollViewer">
                                                <Grid Background="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuBackground}}" RenderOptions.ClearTypeHint="Enabled">
                                                    <Border x:Name="IconBackground" Width="21" Background="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupIconBackground}}" HorizontalAlignment="Left"/>
                                                    <ItemsPresenter KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="3" Grid.IsSharedSizeScope="True"/>
                                                </Grid>
                                            </Decorator>
                                            <Border BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupBorder}}" BorderThickness="1"/>
                                        </Grid>
                                    </themes:SystemDropShadowChrome>
                                    <!--Border 3-->
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,0,6,2"/>
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom"/>
                            <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                            <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,0,6,2"/>
                            <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                            <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="10,3,0,3"/>
                            <Setter TargetName="Border" Property="MinHeight" Value="22"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupBackground}}"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="10,3,0,3"/>
                            <Setter TargetName="Border" Property="MinHeight" Value="22"/>
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupBackground}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemBackgroundHover}}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemBorderHover}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="TopLevelItem"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter TargetName="IconBorder" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                         </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="SubmenuHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter TargetName="IconBorder" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                             <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                         </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="SubmenuItem"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter TargetName="IconBorder" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                             <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSubmenuOpen" Value="true"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemBackgroundDown}}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemBorderDown}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemForegroundDown}}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsSubmenuOpen" Value="true">
                            <Setter TargetName="ArrowPanelPath" Property="Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemGlyphHover}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                         </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemForegroundDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type this:ContextMenuGlyphItem}">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type this:ContextMenu}}}"/>
        <Setter Property="IconForeground" Value="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuGlyphItemIconForeground}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type this:ContextMenuGlyphItem}">
                    <!--Border 1-->
                    <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" 
                                    BorderThickness="1" SnapsToDevicePixels="False">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0" MinWidth="26" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="37" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition x:Name="Col3" Width="17"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="IconBorder" Background="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupIconBackground}}" Grid.Column="0">
                                <Path Height="16" Width="16" Data="{Binding Path=IconGeometry, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Fill="{TemplateBinding IconForeground}"/>
                            </Border>
                            <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" 
                                                      x:Name="HeaderHost" RecognizesAccessKey="True" 
                                                      ContentSource="Header" VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="3" Margin="8,1,8,1" x:Name="IGTHost" 
                                                      ContentSource="InputGestureText" VerticalAlignment="Center"/>
                            <Grid Grid.Column="4" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" 
                                              Fill="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemGlyph}}" Data="M0,0 L0,8 L4,4 z"/>
                            </Grid>
                            <Popup Grid.Column="0" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                           Placement="Right" HorizontalOffset="-1" x:Name="SubMenuPopup" Focusable="false"
                                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                           AllowsTransparency="True">
                                <Grid Margin="0,0,5,5">
                                    <!--Border 2-->
                                    <themes:SystemDropShadowChrome Color="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupShadow}}" Margin="0,0,5,5">
                                        <Grid>
                                            <Decorator Name="PART_ScrollViewer">
                                                <Grid Background="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuBackground}}" RenderOptions.ClearTypeHint="Enabled">
                                                    <Border x:Name="IconBackground" Width="21" Background="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupIconBackground}}" HorizontalAlignment="Left"/>
                                                    <ItemsPresenter KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="3" Grid.IsSharedSizeScope="True"/>
                                                </Grid>
                                            </Decorator>
                                            <Border BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupBorder}}" BorderThickness="1"/>
                                        </Grid>
                                    </themes:SystemDropShadowChrome>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,0,6,2"/>
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom"/>
                            <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                            <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,0,6,2"/>
                            <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                            <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="10,3,0,3"/>
                            <Setter TargetName="Border" Property="MinHeight" Value="22"/>
                             <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupBackground}}"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="10,3,0,3"/>
                            <Setter TargetName="Border" Property="MinHeight" Value="22"/>
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                             <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupBackground}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemBackgroundHover}}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemBorderHover}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="TopLevelItem"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter TargetName="IconBorder" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                            <Setter Property="IconForeground" Value="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuGlyphItemIconForegroundHover}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="SubmenuHeader"/>
                            </MultiTrigger.Conditions>
<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter TargetName="IconBorder" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                            <Setter Property="IconForeground" Value="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuGlyphItemIconForegroundHover}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="SubmenuItem"/>
                            </MultiTrigger.Conditions>
<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter TargetName="IconBorder" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                            <Setter Property="IconForeground" Value="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuGlyphItemIconForegroundHover}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSubmenuOpen" Value="true"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemBackgroundDown}}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemBorderDown}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemForegroundDown}}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsSubmenuOpen" Value="true">
                            <Setter TargetName="ArrowPanelPath" Property="Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemGlyphHover}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                             <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemForegroundDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>