<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:this="clr-namespace:ModernApplicationFramework.Controls"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes">
      
    <Style TargetType="{x:Type this:CheckBox}">
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type this:CheckBox}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid SnapsToDevicePixels="True" Background="Transparent" Width="16" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Border x:Name="MouseOverBorder" Background="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxBackground}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxBorder}}"/>
                            <Border x:Name="FocusedBorder" Visibility="Collapsed" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxBorder}}"/>
                            <Path x:Name="CheckGlyph" Stretch="Uniform" Fill="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxGlyph}}" Margin="3,1,2,2" Visibility="Collapsed" Width="9" Height="8"
                                  Data="M 6.22,11.02 C 6.22,11.02 2.5,7.24 2.5,7.24 2.5,7.24 4.05,5.71 4.05,5.71 4.05,5.71 5.97,7.65 5.97,7.65 5.97,7.65 10.52,1.38 10.52,1.38 10.52,1.38 13.19,1.38 13.19,1.38 13.19,1.38 6.22,11.02 6.22,11.02 6.22,11.02 6.22,11.02 6.22,11.02 Z"/>
                        </Grid>
                        <TextBlock Grid.Column="2" x:Name="TextBlock" Foreground="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxText}}" Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Text="{TemplateBinding Content}" 
                                   TextWrapping="Wrap"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter TargetName="CheckGlyph" Property="FlowDirection" Value="LeftToRight"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="CheckGlyph" Property="UIElement.Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Grid" Property="UIElement.Opacity" Value="0.35"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsFocused" Value="true">
                            <Setter TargetName="MouseOverBorder" Property="Border.Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxBackgroundFocused}}"/>
                            <Setter TargetName="FocusedBorder" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="FocusedBorder"  Property="Border.BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxBorderFocused}}"/>
                            <Setter TargetName="TextBlock"  Property="TextBlock.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxTextFocused}}"/>
                            <Setter TargetName="CheckGlyph" Property="Shape.Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxGlyphFocused}}"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="MouseOverBorder" Property="Border.Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxBackgroundHover}}"/>
                            <Setter TargetName="FocusedBorder" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="FocusedBorder" Property="Border.BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxBorderHover}}"/>
                            <Setter TargetName="TextBlock" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxTextHover}}"/>
                            <Setter TargetName="CheckGlyph" Property="Shape.Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxGlyphHover}}"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="MouseOverBorder" Property="Border.Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxBackgroundDown}}"/>
                            <Setter TargetName="FocusedBorder" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="FocusedBorder" Property="Border.BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxBorderDown}}"/>
                            <Setter TargetName="TextBlock" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxTextDown}}"/>
                            <Setter TargetName="CheckGlyph" Property="Shape.Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.CheckBoxGlyphDown}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>