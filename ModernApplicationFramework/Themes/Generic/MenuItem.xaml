<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:this="clr-namespace:ModernApplicationFramework.Controls"
                    xmlns:colors="clr-namespace:ModernApplicationFramework.Core.Themes"
                    xmlns:utilities="clr-namespace:ModernApplicationFramework.Controls.Utilities">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Geometry x:Key="Checkmark" x:Uid="Geometry_2">
        F1 M 5,11 L 3,7 L 5,7 L 6,9 L 9,3 L 11,3 L 7,11 L 5,11 Z
    </Geometry>

    <Style TargetType="{x:Type this:MenuItem}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.GloablForeground}}"/>
        <Setter Property="utilities:MenuBehavior.UpdateCommandUiItems" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type this:MenuItem}">
                    <!--Border 1-->
                    <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" 
                                    BorderThickness="1" SnapsToDevicePixels="False">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0" Width="26" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition x:Name="Col2" Width="37" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition x:Name="Col3" Width="17"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="IconBorder" Background="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupIconBackground}}" Grid.Column="0"
                                    VerticalAlignment="Center" HorizontalAlignment="Center">
                                <ContentPresenter Width="16" Height="16" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                            </Border>
                            <Border Grid.Column="0" x:Name="GlyphPanel" BorderThickness="0" Margin="2,0,2,0" Visibility="Collapsed" Width="18" Height="18">
                                <Path x:Name="Glyph" Fill="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuGlyphItemIconForeground}}" Width="16" Height="16" FlowDirection="LeftToRight" Data="{StaticResource Checkmark}"/>
                            </Border>

                            <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" 
                                              ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <ContentPresenter Grid.Column="3" Margin="8,1,8,1" x:Name="IGTHost" 
                                              ContentSource="InputGestureText" VerticalAlignment="Center"/>
                            <Grid Grid.Column="4" Margin="4,0,0,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" 
                                      Fill="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemGlyph}}" Data="M0,0 L0,8 L4,4 z"/>
                            </Grid>
                            <Popup Grid.Column="0" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                           Placement="Right" HorizontalOffset="-1" VerticalAlignment="-2" x:Name="SubMenuPopup" Focusable="false"
                                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                           AllowsTransparency="True">
                                <Grid Margin="0,0,5,5">
                                    <!--Border 2-->
                                    <this:SystemDropShadowChrome Color="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupShadow}}" Margin="0,0,5,5"
                                                                   SnapsToDevicePixels="True">
                                        <Grid Background="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupBackground}}">
                                            <this:MenuScrollViewer>
                                                <Grid Background="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuBackground}}" RenderOptions.ClearTypeHint="Enabled">
                                                    <Border x:Name="IconBackground" Width="28" Background="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupIconBackground}}" HorizontalAlignment="Left"/>
                                                    <ItemsPresenter KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="3" Grid.IsSharedSizeScope="True"/>
                                                </Grid>
                                            </this:MenuScrollViewer>
                                            <Border BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupBorder}}" BorderThickness="1"/>
                                        </Grid>
                                    </this:SystemDropShadowChrome>
                                     <Border x:Name="TransitionBorder" Width="0" Height="2" 
                                                    VerticalAlignment="Top" HorizontalAlignment="Left" SnapsToDevicePixels="False"
                                                    BorderThickness="1" BorderBrush="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuBackground}}"/>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,0,6,2"/>
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom"/>
                            <Setter TargetName="Col0" Property="Width" Value="0"/>
                            <Setter TargetName="Col2" Property="Width" Value="0"/>
                            <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="TransitionBorder" Property="Width" Value="{Binding ActualWidth, ElementName=Grid}"/>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,0,6,2"/>
                            <Setter TargetName="Col0" Property="Width" Value="0"/>
                            <Setter TargetName="Col2" Property="Width" Value="0"/>
                            <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=Role, RelativeSource={RelativeSource Self}}" Value="TopLevelItem"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Padding" Value="6,0,6,2"/>
                            <Setter TargetName="Col0" Property="Width" Value="26"/>
                            <Setter TargetName="Col2" Property="Width" Value="0"/>
                            <Setter TargetName="Icon" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                            <Setter Property="BorderThickness" Value="1" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.CheckBoxBorderFocused}}" TargetName="Border"/>
                            <Setter Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.CheckBoxBackgroundFocused}}" TargetName="IconBorder"/>
                            <Setter Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.CheckBoxBackgroundFocused}}" TargetName="Border"/>
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Icon">
                                    <Condition.Value>
                                        <x:NullExtension/>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">

                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="8,1,0,1"/>
                            <Setter TargetName="Border" Property="MinHeight" Value="22"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupBackground}}"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="8,1,0,1"/>
                            <Setter TargetName="Border" Property="MinHeight" Value="22"/>
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemPopupBackground}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemBackgroundHover}}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemBorderHover}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                            <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuGlyphItemIconForegroundHover}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="TopLevelItem"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter TargetName="IconBorder" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                             <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuGlyphItemIconForegroundHover}}"/>
                             <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="SubmenuHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter TargetName="IconBorder" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                             <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                            <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuGlyphItemIconForegroundHover}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="SubmenuItem"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                            <Setter TargetName="IconBorder" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemBackgroundHover}}"/>
                             <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                            <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuGlyphItemIconForegroundHover}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSubmenuOpen" Value="true"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemBackgroundDown}}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemBorderDown}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemForegroundDown}}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="IsSubmenuOpen" Value="true">
                            <Setter TargetName="ArrowPanelPath" Property="Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemGlyphHover}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuSubItemForegroundHover}}"/>
                            <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource {x:Static colors:EnvironmentColors.ContextMenuGlyphItemIconForegroundHover}}"/>
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:EnvironmentColors.MenuItemForegroundDisabled}}"/>
                            <Setter TargetName="Icon" Property="Opacity" Value=".5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>