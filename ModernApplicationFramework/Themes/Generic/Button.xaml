<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:this="clr-namespace:ModernApplicationFramework.Controls"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes"
                    xmlns:utilities="clr-namespace:ModernApplicationFramework.Core.Utilities"
                    xmlns:buttons="clr-namespace:ModernApplicationFramework.Controls.Buttons">

    <ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Brushes.xaml"/>
	</ResourceDictionary.MergedDictionaries>
    
    <ControlTemplate TargetType="{x:Type Button}" x:Key="NormalButtonWithFocusStyle">
            <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" 
                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="#007ACB" />
            </Trigger>
            <Trigger Property="Button.IsFocused" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="#007ACB" />
            </Trigger>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="#FF3C7FB1" />
                <Setter TargetName="Border" Property="Background" Value="#FFC4E5F6"/>
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="#FF2C628B" />
                <Setter TargetName="Border" Property="Background" Value="#FFC4E5F6"/>
            </Trigger>
            <Trigger Property="Button.IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type buttons:Button}">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonBackground}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonBorder}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonForeground}}"/>
        <Setter Property="utilities:DteFocusHelper.AcquireFocus" Value="{Binding AcquireFocus}"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <x:NullExtension/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type buttons:Button}">
                    <Border SnapsToDevicePixels="True"
							BorderThickness="1"
							BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}">
                        <Grid SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonBackgroundHover}}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonBorderHover}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonForegroundHover}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonForegroundDown}}"/>
                            <Setter Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonBackgroundDown}}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.ButtonBorderDown}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type buttons:DialogButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="MinWidth" Value="75"/>
        <Setter Property="MinHeight" Value="23"/>
        <Setter Property="Margin" Value="0,0,10,10"/>
        <Setter Property="Padding" Value="10,1,10,1"/>
    </Style>

</ResourceDictionary>