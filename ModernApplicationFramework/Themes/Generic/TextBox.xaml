<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:this="clr-namespace:ModernApplicationFramework.Controls"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Resources/Icons/StatusError.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type this:ModernTextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxForeground}}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxSelection}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxForeground}}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type this:ModernTextBox}">
                    <Border x:Name="Border" BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxBorder}}" BorderThickness="1" 
                            Background="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxBackground}}">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxBorderHover}}"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxBackgroundHover}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxForegroundHover}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxBorderFocused}}"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxBackgroundFocused}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxForegroundFocused}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxBorderDisabled}}"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxBackgroundDisabled}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.TextBoxForegroundDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ErrorTextBoxStyleKey" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors)[0].ErrorContent"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <ControlTemplate x:Key="ErrorTextBoxTemplateKey">
        <Grid>
            <AdornedElementPlaceholder x:Name="Holder"/>
            <ContentPresenter Height="16" Width="16" Margin="0,0,5,0" HorizontalAlignment="Right" Content="{StaticResource StatusErrorIcon}">
                <FrameworkElement.ToolTip>
                    <Binding ElementName="Holder" Path="AdornedElement.(Validation.Errors)[0].ErrorContent"/>
                </FrameworkElement.ToolTip>
            </ContentPresenter>
        </Grid>
    </ControlTemplate>
    
</ResourceDictionary>