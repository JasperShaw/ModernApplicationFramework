<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ModernApplicationFramework.Docking.Converters"
                    xmlns:avalonDockControls="clr-namespace:ModernApplicationFramework.Docking.Controls"
                    xmlns:shell="clr-namespace:ModernApplicationFramework.Core.Shell"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes"
                    xmlns:utilities="clr-namespace:ModernApplicationFramework.Core.Utilities"
                    xmlns:controls="clr-namespace:ModernApplicationFramework.Controls">
    
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
    <converters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter"/>
    <converters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter"/>
    <converters:NullToDoNothingConverter x:Key="NullToDoNothingConverter"/>
    <converters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter"/>
    <converters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter"/>
	
    <Style x:Key="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="16" GlassFrameThickness="1" ResizeBorderThickness="3" UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="InputMethod.IsInputMethodSuspended" Value="True" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="utilities:WindowStyleHelper.HasMaximizeButton" Value="True" />
        <Setter Property="utilities:WindowStyleHelper.HasMinimizeButton" Value="True" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="MinHeight" Value="50" />
        <Setter Property="Title" Value="{Binding Path=Caption}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowBackground}}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="ActiveShadowColor" Value="{DynamicResource {x:Static themes:EnvironmentColors.MainWindowActiveShadowAndBorderColor}}" />
        <Setter Property="InactiveShadowColor" Value="{DynamicResource {x:Static themes:EnvironmentColors.MainWindowInactiveShadowAndBorderColor}}" />
        <Setter Property="NonClientFillColor" Value="{Binding Path=Background, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
                    <controls:WindowContentPresenter>
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <avalonDockControls:DragUndockHeader x:Name="FloatingWindowTitleBar" Grid.Row="0" Grid.Column="0" 
																 Background="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarBackground}}">
								<DockPanel>
									<controls:SystemMenu x:Name="PART_SystemMenu" Width="32" Height="27" Margin="0,0,12,4" HorizontalAlignment="Left"
									                 DockPanel.Dock="Left" Padding="12,7,0,0" Source="{Binding Source={x:Static Application.Current}, Path=MainWindow.(controls:MainWindow.ActivatedFloatIcon)}" 
                                                     WindowChrome.IsHitTestVisibleInChrome="True" />
									<StackPanel x:Name="WindowTitleBarButtons"
									            DockPanel.Dock="Right"
									            Orientation="Horizontal">
										<controls:WindowTitleBarButton x:Name="MinimizeButton" Width="34" Height="26"  VerticalAlignment="Top"
										                           AutomationProperties.AutomationId="Minimize" AutomationProperties.Name="Minimize"
										                           BorderThickness="1,0,1,1" Padding="0,3,0,0" ToolTip="Minimize" WindowChrome.IsHitTestVisibleInChrome="True"
                                                                   Command="{x:Static shell:SystemCommands.MinimizeWindowCommand}"
                                                                   CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
											<Path x:Name="MinimizeButtonPath" Width="9"  Height="9"  Data="F1 M 0,6 L 0,9 9,9 9,6 0,6 Z" Stretch="None" Fill="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarGlyph}}"/>
										</controls:WindowTitleBarButton>
										<controls:WindowTitleBarButton x:Name="MaximizeRestoreButton" Width="34" Height="26" VerticalAlignment="Top" AutomationProperties.AutomationId="Maximize"
										                           AutomationProperties.Name="Maximize" BorderThickness="1,0,1,1" Padding="0,3,0,0"
										                           ToolTip="Maximize"  WindowChrome.IsHitTestVisibleInChrome="True">
											<Path x:Name="MaximizeRestoreButtonPath" Width="9" Height="9"
											      Data="F1 M 0,0 L 0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3 Z" Stretch="Uniform"
												  Fill="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarGlyph}}">
											</Path>
										</controls:WindowTitleBarButton>
										<controls:WindowTitleBarButton x:Name="CloseButton" Width="34" Height="26" VerticalAlignment="Top" AutomationProperties.AutomationId="Close"
										                           AutomationProperties.Name="Close" BorderThickness="1,0,1,1" Padding="0,3,0,0"
										                           ToolTip="Close" WindowChrome.IsHitTestVisibleInChrome="True"
                                                                   Command="{Binding Path=RootDocumentLayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}">
											<Path x:Name="CloseButtonPath" Width="10" Height="8"
                                                  Data="F1 M 0,0 L 2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0 Z" Stretch="Uniform"
												  Fill="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarGlyph}}">
											</Path>
										</controls:WindowTitleBarButton>
									</StackPanel>
									<ContentPresenter x:Name="TitleBarText" Content="{Binding Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}" 
													  TextElement.Foreground="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarForegroundActive}}"
                                            ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Margin="0,7,0,4" VerticalAlignment="Center" TextOptions.TextFormattingMode="Display" />
								</DockPanel>
							</avalonDockControls:DragUndockHeader>
                            <ContentPresenter Content="{TemplateBinding Content}" Grid.Row="1" Margin="4"/>
                        </Grid>
                    </controls:WindowContentPresenter>
					<ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Margin" Value="0,0,0,4" TargetName="FloatingWindowTitleBar"/>
                            <Setter TargetName="MaximizeRestoreButtonPath" Property="Data" Value="F1 M 0,10 L 0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10 M 1,10 L 7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9 Z" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="TitleBarText" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarForeground}}"/>
                            <Setter TargetName="PART_SystemMenu" Property="Source" Value="{Binding Source={x:Static Application.Current}, Path=MainWindow.(controls:MainWindow.DeactivatedFloatIcon)}"/>
                        </Trigger>
                        <Trigger SourceName="CloseButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="CloseButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarGlyphHover}}"/>
                        </Trigger>
                        <Trigger SourceName="MaximizeRestoreButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="MaximizeRestoreButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarGlyphHover}}"/>
                        </Trigger>
                        <Trigger SourceName="MinimizeButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="MinimizeButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarGlyphHover}}"/>
                        </Trigger>
                        <Trigger SourceName="CloseButton" Property="IsPressed" Value="True">
                            <Setter TargetName="CloseButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarGlyphDown}}"/>
                        </Trigger>
                        <Trigger SourceName="MaximizeRestoreButton" Property="IsPressed" Value="True">
                            <Setter TargetName="MaximizeRestoreButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarGlyphDown}}"/>
                        </Trigger>
                        <Trigger SourceName="MinimizeButton" Property="IsPressed" Value="True">
                            <Setter TargetName="MinimizeButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.FloatingWindowTitleBarGlyphDown}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>