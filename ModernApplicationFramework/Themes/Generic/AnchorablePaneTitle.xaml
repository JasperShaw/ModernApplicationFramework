<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ModernApplicationFramework.Docking.Converters"
                    xmlns:avalonDockControls="clr-namespace:ModernApplicationFramework.Docking.Controls"
                    xmlns:controls="clr-namespace:ModernApplicationFramework.Controls"
					xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes">
    
     <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
    <converters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter"/>
    <converters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter"/>
    <converters:NullToDoNothingConverter x:Key="NullToDoNothingConverter"/>
    <converters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter"/>
    <converters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter"/>
    
    <Style TargetType="avalonDockControls:AnchorablePaneTitle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="15"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <DockPanel Grid.Column="0">
                                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
									<avalonDockControls:DropDownButton x:Name="MenuDropDownButton" Focusable="False" ToolTip="Positions" Height="15" Width="15" BorderThickness="1"
                                                                       DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                       DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
																	   Background="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackground}}"
																	   BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorder}}">
										<Path x:Name="MenuButtonPath" Data="F1 M 0,0 L 4,4 8,0 0,0 z" 
											  Fill="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyph}}" VerticalAlignment="Center" 
                                          HorizontalAlignment="Center" Height="4" Width="8"/>
                                    </avalonDockControls:DropDownButton>

                                <controls:Button x:Name="PART_AutoHidePin" Focusable="False" Height="15" Width="15" BorderThickness="1"
                                                 Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                                 Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Auto Pin"
												 Background="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackground}}"
												 BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorder}}">
                                    <Path x:Name="PinButtonPath" Data="F1 M3,11 L3,7 0,7 0,6 1,6 1,1 1,0 6,0 6,1 6,6 7,6 7,7 4,7 4,11 3,11z M2,1L2,6 4,6 4,1 2,1z" 
										  Fill="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyph}}" VerticalAlignment="Center" 
                                          HorizontalAlignment="Center" Height="11" Width="7"/>
                                </controls:Button>

                                <controls:Button x:Name="PART_HidePin" Focusable="False" BorderThickness="1" Height="15" Width="15"
                                                 Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                                 Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Close"
												 Background="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackground}}"
												 BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorder}}">
                                   <Path Fill="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyph}}" 
										 Width="10" Height="8" Stretch="Uniform" x:Name="CloseButtonPath"
                                                  Data="F1 M 0,0 L 2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0 Z"/>
                                </controls:Button>
                                </StackPanel>
                                
                                <avalonDockControls:DropDownControlArea 
                                    DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                    DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ContentPresenter x:Name="Header" Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" Margin="2,0,0,0"
													  TextElement.Foreground="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleText}}"
                                              ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                              ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </avalonDockControls:DropDownControlArea>
                                <Rectangle Margin="8,0,4,0" SnapsToDevicePixels="True" Height="5" VerticalAlignment="Center" x:Name="Grip"
										   Fill="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGrip}}"/>
                            </DockPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="LayoutTransform" TargetName="PART_AutoHidePin">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleBackgroundActive}}" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleTextActive}}" TargetName="Header"/>
                            <Setter Property="Fill" TargetName="PinButtonPath" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphActive}}"/>
                            <Setter Property="Fill" TargetName="CloseButtonPath" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphActive}}"/>
                            <Setter Property="Fill" TargetName="MenuButtonPath" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphActive}}"/>
							<Setter TargetName="Grip" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGripActive}}"/>
						</DataTrigger>
                        <Trigger Property="IsMouseOver" SourceName="MenuDropDownButton" Value="True">
                            <Setter Property="Fill" TargetName="MenuButtonPath" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphHover}}"/>
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundHover}}"/>
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderHover}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="MenuDropDownButton" Value="True">
                            <Setter Property="Fill" TargetName="MenuButtonPath" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphDown}}"/>
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundDown}}"/>
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderDown}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" SourceName="MenuDropDownButton" Value="True">
                            <Setter Property="Fill" TargetName="MenuButtonPath" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphDown}}"/>
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundDown}}"/>
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderDown}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_AutoHidePin" Value="True">
                            <Setter Property="Fill" TargetName="PinButtonPath" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphHover}}"/>
                            <Setter TargetName="PART_AutoHidePin" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundHover}}"/>
                            <Setter TargetName="PART_AutoHidePin" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderHover}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="PART_AutoHidePin" Value="True">
                            <Setter Property="Fill" TargetName="PinButtonPath" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphDown}}"/>
                            <Setter TargetName="PART_AutoHidePin" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundDown}}"/>
                            <Setter TargetName="PART_AutoHidePin" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderDown}}"/>
                        </Trigger>     
                        <Trigger Property="IsMouseOver" SourceName="PART_HidePin" Value="True">
                            <Setter Property="Fill" TargetName="CloseButtonPath" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphHover}}"/>
                            <Setter TargetName="PART_HidePin" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundHover}}"/>
                            <Setter TargetName="PART_HidePin" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderHover}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="PART_HidePin" Value="True">
                            <Setter Property="Fill" TargetName="CloseButtonPath" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphDown}}"/>
                            <Setter TargetName="PART_HidePin" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundDown}}"/>
                            <Setter TargetName="PART_HidePin" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderDown}}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_HidePin}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="CloseButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphActiveHover}}"/>
                                <Setter TargetName="PART_HidePin" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundActiveHover}}"/>
                                <Setter TargetName="PART_HidePin" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderActiveHover}}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_HidePin}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="CloseButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphActiveDown}}"/>
                                <Setter TargetName="PART_HidePin" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundActiveDown}}"/>
                                <Setter TargetName="PART_HidePin" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderActiveDown}}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_AutoHidePin}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PinButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphActiveHover}}"/>
                                <Setter TargetName="PART_AutoHidePin" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundActiveHover}}"/>
                                <Setter TargetName="PART_AutoHidePin" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderActiveHover}}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_AutoHidePin}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PinButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphActiveDown}}"/>
                                <Setter TargetName="PART_AutoHidePin" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundActiveDown}}"/>
                                <Setter TargetName="PART_AutoHidePin" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderActiveDown}}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                <Condition Binding="{Binding IsMouseOver, ElementName=MenuDropDownButton}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="MenuButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphActiveHover}}"/>
                                <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundActiveHover}}"/>
                                <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderActiveHover}}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                <Condition Binding="{Binding IsPressed, ElementName=MenuDropDownButton}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="MenuButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphActiveDown}}"/>
                                <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundActiveDown}}"/>
                                <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderActiveDown}}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                <Condition Binding="{Binding IsChecked, ElementName=MenuDropDownButton}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="MenuButtonPath" Property="Fill" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleGlyphActiveDown}}"/>
                                <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBackgroundActiveDown}}"/>
                                <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorPaneTitleButtonBorderActiveDown}}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
</ResourceDictionary>