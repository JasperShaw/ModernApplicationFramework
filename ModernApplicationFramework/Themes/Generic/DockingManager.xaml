<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ModernApplicationFramework.Docking.Converters"
                    xmlns:avalonDockControls="clr-namespace:ModernApplicationFramework.Docking.Controls"
                    xmlns:avalonDock="clr-namespace:ModernApplicationFramework.Docking"
                    xmlns:controls="clr-namespace:ModernApplicationFramework.Controls"
                    xmlns:themes="clr-namespace:ModernApplicationFramework.Core.Themes"
                    xmlns:converters1="clr-namespace:ModernApplicationFramework.Core.Converters">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="LayoutDocumentPaneControl.xaml"/>
        <ResourceDictionary Source="LayoutAnchorablePaneControl.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
    <converters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter"/>
    <converters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter"/>
    <converters:NullToDoNothingConverter x:Key="NullToDoNothingConverter"/>
    <converters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter"/>
    <converters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter"/>
    <converters1:CommandToVisibilityConverter x:Key="CommandToVisibilityConverter"/>
    <converters1:MultiVisibilityToVisibilityConverter x:Key="MultiVisibilityToVisibilityConverter"/>

    <ControlTemplate x:Key="AnchorSideTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorSideControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel MinWidth="4" MinHeight="4" 
                                Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={StaticResource AnchorSideToOrientationConverter}}"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AnchorGroupTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorGroupControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.LayoutTransform>
                <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}"/>
            </ItemsControl.LayoutTransform>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AnchorTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorControl}">
        <Border x:Name="Bd" BorderThickness="0,0,0,6" Background="{DynamicResource {x:Static themes:EnvironmentColors.AnchorSideItemBackground}}" Margin="0,6,12,0" Padding="0,0,0,3" 
				BorderBrush="{DynamicResource {x:Static themes:EnvironmentColors.AnchorSideItemBorder}}">
            <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
							  TextElement.Foreground="{DynamicResource {x:Static themes:EnvironmentColors.AnchorSideItemForeground}}" x:Name="Content"
                              ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                              ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
        </Border>
         <ControlTemplate.Triggers>
            <Trigger Property="Side" Value="Right">
                <Setter Property="Margin" Value="0,0,12,6" TargetName="Bd"/>
                <Setter Property="BorderThickness" Value="0,6,0,0" TargetName="Bd"/>
                <Setter Property="Padding" Value="0,3,0,0" TargetName="Bd"/>
            </Trigger>
            <Trigger Property="Side" Value="Bottom">
                <Setter Property="Margin" Value="0,6,12,0" TargetName="Bd"/>
                <Setter Property="BorderThickness" Value="0,0,0,6" TargetName="Bd"/>
                <Setter Property="Padding" Value="0,0,0,6" TargetName="Bd"/>
            </Trigger>
            <Trigger Property="Side" Value="Top">
                <Setter Property="Margin" Value="0,0,12,6" TargetName="Bd"/>
                <Setter Property="BorderThickness" Value="0,6,0,0" TargetName="Bd"/>
                <Setter Property="Padding" Value="0,3,0,0" TargetName="Bd"/>
            </Trigger>            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="Selector.IsSelected" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorSideItemBorderHover}}" TargetName="Bd"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorSideItemBackgroundHover}}" TargetName="Bd"/>
                <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:EnvironmentColors.AnchorSideItemForegroundHover}}"/>
            </MultiTrigger>
             <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:MainWindow}}, Path=FullScreen}" Value="true">
                 <Setter Property="Visibility" Value="Collapsed"/>
             </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="DocumentHeaderTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="AnchorableHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image x:Name="icon" Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform"/>
            <TextBlock x:Name="title" Margin="4,0,0,0" Text="{Binding Title}" TextTrimming="CharacterEllipsis" Grid.Column="1"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IconSource}" Value="{x:Null}">
                <Setter Property="Margin" Value="0" TargetName="title"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="DocumentTitleTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="AnchorableTitleTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="IconContentTemplate">
        <Image Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform"/>
    </DataTemplate>
   
    <Style x:Key="{x:Type avalonDock:DockingManager}" TargetType="{x:Type avalonDock:DockingManager}">
        <Setter Property="DocumentPaneControlStyle" Value="{StaticResource DocumentPaneControlStyle}"/>
        <Setter Property="AnchorablePaneControlStyle" Value="{StaticResource AnchorablePaneControlStyle}"/>
        <Setter Property="AnchorSideTemplate" Value="{StaticResource AnchorSideTemplate}"/>
        <Setter Property="AnchorGroupTemplate" Value="{StaticResource AnchorGroupTemplate}"/>
        <Setter Property="AnchorTemplate" Value="{StaticResource AnchorTemplate}"/>
        <Setter Property="DocumentHeaderTemplate" Value="{StaticResource DocumentHeaderTemplate}"/>
        <Setter Property="AnchorableHeaderTemplate" Value="{StaticResource AnchorableHeaderTemplate}"/>
        <Setter Property="DocumentTitleTemplate" Value="{StaticResource DocumentTitleTemplate}"/>
        <Setter Property="AnchorableTitleTemplate" Value="{StaticResource AnchorableTitleTemplate}"/>
        <Setter Property="DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource DocumentHeaderTemplate}"/>
        <Setter Property="IconContentTemplate" Value="{StaticResource IconContentTemplate}"/>
        <Setter Property="GridSplitterWidth" Value="4"/>
        <Setter Property="GridSplitterHeight" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDock:DockingManager}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid FlowDirection="LeftToRight">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border Background="{DynamicResource {x:Static themes:EnvironmentColors.DockingManagerBackground}}" Grid.Column="1" Grid.Row="1">
                                <ContentPresenter Content="{TemplateBinding LayoutRootPanel}"/>
                            </Border>
                            
                            <ContentPresenter Content="{TemplateBinding RightSidePanel}" Grid.Column="2" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding LeftSidePanel}" Grid.Column="0" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding TopSidePanel}" Grid.Column="1" Grid.Row="0"/>
                            <ContentPresenter Content="{TemplateBinding BottomSidePanel}" Grid.Column="1" Grid.Row="2"/>
                            <ContentPresenter 
                                x:Name="PART_AutoHideArea"
                                Content="{TemplateBinding AutoHideWindow}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
</ResourceDictionary>